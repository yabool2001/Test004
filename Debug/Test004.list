
Test004.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007134  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000054c  080071f0  080071f0  000171f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800773c  0800773c  000201e4  2**0
                  CONTENTS
  4 .ARM          00000008  0800773c  0800773c  0001773c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007744  08007744  000201e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007744  08007744  00017744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007748  08007748  00017748  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e4  20000000  0800774c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000130  200001e4  08007930  000201e4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000314  08007930  00020314  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201e4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000bf6c  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000019db  00000000  00000000  0002c178  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000808  00000000  00000000  0002db58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000770  00000000  00000000  0002e360  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001633c  00000000  00000000  0002ead0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00009b6d  00000000  00000000  00044e0c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00088f1e  00000000  00000000  0004e979  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000d7897  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002d2c  00000000  00000000  000d78ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	200001e4 	.word	0x200001e4
 80000dc:	00000000 	.word	0x00000000
 80000e0:	080071d8 	.word	0x080071d8

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	200001e8 	.word	0x200001e8
 8000100:	080071d8 	.word	0x080071d8

08000104 <strlen>:
 8000104:	2300      	movs	r3, #0
 8000106:	5cc2      	ldrb	r2, [r0, r3]
 8000108:	3301      	adds	r3, #1
 800010a:	2a00      	cmp	r2, #0
 800010c:	d1fb      	bne.n	8000106 <strlen+0x2>
 800010e:	1e58      	subs	r0, r3, #1
 8000110:	4770      	bx	lr
	...

08000114 <__gnu_thumb1_case_uqi>:
 8000114:	b402      	push	{r1}
 8000116:	4671      	mov	r1, lr
 8000118:	0849      	lsrs	r1, r1, #1
 800011a:	0049      	lsls	r1, r1, #1
 800011c:	5c09      	ldrb	r1, [r1, r0]
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	448e      	add	lr, r1
 8000122:	bc02      	pop	{r1}
 8000124:	4770      	bx	lr
 8000126:	46c0      	nop			; (mov r8, r8)

08000128 <__gnu_thumb1_case_shi>:
 8000128:	b403      	push	{r0, r1}
 800012a:	4671      	mov	r1, lr
 800012c:	0849      	lsrs	r1, r1, #1
 800012e:	0040      	lsls	r0, r0, #1
 8000130:	0049      	lsls	r1, r1, #1
 8000132:	5e09      	ldrsh	r1, [r1, r0]
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	448e      	add	lr, r1
 8000138:	bc03      	pop	{r0, r1}
 800013a:	4770      	bx	lr

0800013c <__udivsi3>:
 800013c:	2200      	movs	r2, #0
 800013e:	0843      	lsrs	r3, r0, #1
 8000140:	428b      	cmp	r3, r1
 8000142:	d374      	bcc.n	800022e <__udivsi3+0xf2>
 8000144:	0903      	lsrs	r3, r0, #4
 8000146:	428b      	cmp	r3, r1
 8000148:	d35f      	bcc.n	800020a <__udivsi3+0xce>
 800014a:	0a03      	lsrs	r3, r0, #8
 800014c:	428b      	cmp	r3, r1
 800014e:	d344      	bcc.n	80001da <__udivsi3+0x9e>
 8000150:	0b03      	lsrs	r3, r0, #12
 8000152:	428b      	cmp	r3, r1
 8000154:	d328      	bcc.n	80001a8 <__udivsi3+0x6c>
 8000156:	0c03      	lsrs	r3, r0, #16
 8000158:	428b      	cmp	r3, r1
 800015a:	d30d      	bcc.n	8000178 <__udivsi3+0x3c>
 800015c:	22ff      	movs	r2, #255	; 0xff
 800015e:	0209      	lsls	r1, r1, #8
 8000160:	ba12      	rev	r2, r2
 8000162:	0c03      	lsrs	r3, r0, #16
 8000164:	428b      	cmp	r3, r1
 8000166:	d302      	bcc.n	800016e <__udivsi3+0x32>
 8000168:	1212      	asrs	r2, r2, #8
 800016a:	0209      	lsls	r1, r1, #8
 800016c:	d065      	beq.n	800023a <__udivsi3+0xfe>
 800016e:	0b03      	lsrs	r3, r0, #12
 8000170:	428b      	cmp	r3, r1
 8000172:	d319      	bcc.n	80001a8 <__udivsi3+0x6c>
 8000174:	e000      	b.n	8000178 <__udivsi3+0x3c>
 8000176:	0a09      	lsrs	r1, r1, #8
 8000178:	0bc3      	lsrs	r3, r0, #15
 800017a:	428b      	cmp	r3, r1
 800017c:	d301      	bcc.n	8000182 <__udivsi3+0x46>
 800017e:	03cb      	lsls	r3, r1, #15
 8000180:	1ac0      	subs	r0, r0, r3
 8000182:	4152      	adcs	r2, r2
 8000184:	0b83      	lsrs	r3, r0, #14
 8000186:	428b      	cmp	r3, r1
 8000188:	d301      	bcc.n	800018e <__udivsi3+0x52>
 800018a:	038b      	lsls	r3, r1, #14
 800018c:	1ac0      	subs	r0, r0, r3
 800018e:	4152      	adcs	r2, r2
 8000190:	0b43      	lsrs	r3, r0, #13
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x5e>
 8000196:	034b      	lsls	r3, r1, #13
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0b03      	lsrs	r3, r0, #12
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x6a>
 80001a2:	030b      	lsls	r3, r1, #12
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0ac3      	lsrs	r3, r0, #11
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x76>
 80001ae:	02cb      	lsls	r3, r1, #11
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	0a83      	lsrs	r3, r0, #10
 80001b6:	428b      	cmp	r3, r1
 80001b8:	d301      	bcc.n	80001be <__udivsi3+0x82>
 80001ba:	028b      	lsls	r3, r1, #10
 80001bc:	1ac0      	subs	r0, r0, r3
 80001be:	4152      	adcs	r2, r2
 80001c0:	0a43      	lsrs	r3, r0, #9
 80001c2:	428b      	cmp	r3, r1
 80001c4:	d301      	bcc.n	80001ca <__udivsi3+0x8e>
 80001c6:	024b      	lsls	r3, r1, #9
 80001c8:	1ac0      	subs	r0, r0, r3
 80001ca:	4152      	adcs	r2, r2
 80001cc:	0a03      	lsrs	r3, r0, #8
 80001ce:	428b      	cmp	r3, r1
 80001d0:	d301      	bcc.n	80001d6 <__udivsi3+0x9a>
 80001d2:	020b      	lsls	r3, r1, #8
 80001d4:	1ac0      	subs	r0, r0, r3
 80001d6:	4152      	adcs	r2, r2
 80001d8:	d2cd      	bcs.n	8000176 <__udivsi3+0x3a>
 80001da:	09c3      	lsrs	r3, r0, #7
 80001dc:	428b      	cmp	r3, r1
 80001de:	d301      	bcc.n	80001e4 <__udivsi3+0xa8>
 80001e0:	01cb      	lsls	r3, r1, #7
 80001e2:	1ac0      	subs	r0, r0, r3
 80001e4:	4152      	adcs	r2, r2
 80001e6:	0983      	lsrs	r3, r0, #6
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d301      	bcc.n	80001f0 <__udivsi3+0xb4>
 80001ec:	018b      	lsls	r3, r1, #6
 80001ee:	1ac0      	subs	r0, r0, r3
 80001f0:	4152      	adcs	r2, r2
 80001f2:	0943      	lsrs	r3, r0, #5
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xc0>
 80001f8:	014b      	lsls	r3, r1, #5
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	0903      	lsrs	r3, r0, #4
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xcc>
 8000204:	010b      	lsls	r3, r1, #4
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	08c3      	lsrs	r3, r0, #3
 800020c:	428b      	cmp	r3, r1
 800020e:	d301      	bcc.n	8000214 <__udivsi3+0xd8>
 8000210:	00cb      	lsls	r3, r1, #3
 8000212:	1ac0      	subs	r0, r0, r3
 8000214:	4152      	adcs	r2, r2
 8000216:	0883      	lsrs	r3, r0, #2
 8000218:	428b      	cmp	r3, r1
 800021a:	d301      	bcc.n	8000220 <__udivsi3+0xe4>
 800021c:	008b      	lsls	r3, r1, #2
 800021e:	1ac0      	subs	r0, r0, r3
 8000220:	4152      	adcs	r2, r2
 8000222:	0843      	lsrs	r3, r0, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d301      	bcc.n	800022c <__udivsi3+0xf0>
 8000228:	004b      	lsls	r3, r1, #1
 800022a:	1ac0      	subs	r0, r0, r3
 800022c:	4152      	adcs	r2, r2
 800022e:	1a41      	subs	r1, r0, r1
 8000230:	d200      	bcs.n	8000234 <__udivsi3+0xf8>
 8000232:	4601      	mov	r1, r0
 8000234:	4152      	adcs	r2, r2
 8000236:	4610      	mov	r0, r2
 8000238:	4770      	bx	lr
 800023a:	e7ff      	b.n	800023c <__udivsi3+0x100>
 800023c:	b501      	push	{r0, lr}
 800023e:	2000      	movs	r0, #0
 8000240:	f000 f8f0 	bl	8000424 <__aeabi_idiv0>
 8000244:	bd02      	pop	{r1, pc}
 8000246:	46c0      	nop			; (mov r8, r8)

08000248 <__aeabi_uidivmod>:
 8000248:	2900      	cmp	r1, #0
 800024a:	d0f7      	beq.n	800023c <__udivsi3+0x100>
 800024c:	e776      	b.n	800013c <__udivsi3>
 800024e:	4770      	bx	lr

08000250 <__divsi3>:
 8000250:	4603      	mov	r3, r0
 8000252:	430b      	orrs	r3, r1
 8000254:	d47f      	bmi.n	8000356 <__divsi3+0x106>
 8000256:	2200      	movs	r2, #0
 8000258:	0843      	lsrs	r3, r0, #1
 800025a:	428b      	cmp	r3, r1
 800025c:	d374      	bcc.n	8000348 <__divsi3+0xf8>
 800025e:	0903      	lsrs	r3, r0, #4
 8000260:	428b      	cmp	r3, r1
 8000262:	d35f      	bcc.n	8000324 <__divsi3+0xd4>
 8000264:	0a03      	lsrs	r3, r0, #8
 8000266:	428b      	cmp	r3, r1
 8000268:	d344      	bcc.n	80002f4 <__divsi3+0xa4>
 800026a:	0b03      	lsrs	r3, r0, #12
 800026c:	428b      	cmp	r3, r1
 800026e:	d328      	bcc.n	80002c2 <__divsi3+0x72>
 8000270:	0c03      	lsrs	r3, r0, #16
 8000272:	428b      	cmp	r3, r1
 8000274:	d30d      	bcc.n	8000292 <__divsi3+0x42>
 8000276:	22ff      	movs	r2, #255	; 0xff
 8000278:	0209      	lsls	r1, r1, #8
 800027a:	ba12      	rev	r2, r2
 800027c:	0c03      	lsrs	r3, r0, #16
 800027e:	428b      	cmp	r3, r1
 8000280:	d302      	bcc.n	8000288 <__divsi3+0x38>
 8000282:	1212      	asrs	r2, r2, #8
 8000284:	0209      	lsls	r1, r1, #8
 8000286:	d065      	beq.n	8000354 <__divsi3+0x104>
 8000288:	0b03      	lsrs	r3, r0, #12
 800028a:	428b      	cmp	r3, r1
 800028c:	d319      	bcc.n	80002c2 <__divsi3+0x72>
 800028e:	e000      	b.n	8000292 <__divsi3+0x42>
 8000290:	0a09      	lsrs	r1, r1, #8
 8000292:	0bc3      	lsrs	r3, r0, #15
 8000294:	428b      	cmp	r3, r1
 8000296:	d301      	bcc.n	800029c <__divsi3+0x4c>
 8000298:	03cb      	lsls	r3, r1, #15
 800029a:	1ac0      	subs	r0, r0, r3
 800029c:	4152      	adcs	r2, r2
 800029e:	0b83      	lsrs	r3, r0, #14
 80002a0:	428b      	cmp	r3, r1
 80002a2:	d301      	bcc.n	80002a8 <__divsi3+0x58>
 80002a4:	038b      	lsls	r3, r1, #14
 80002a6:	1ac0      	subs	r0, r0, r3
 80002a8:	4152      	adcs	r2, r2
 80002aa:	0b43      	lsrs	r3, r0, #13
 80002ac:	428b      	cmp	r3, r1
 80002ae:	d301      	bcc.n	80002b4 <__divsi3+0x64>
 80002b0:	034b      	lsls	r3, r1, #13
 80002b2:	1ac0      	subs	r0, r0, r3
 80002b4:	4152      	adcs	r2, r2
 80002b6:	0b03      	lsrs	r3, r0, #12
 80002b8:	428b      	cmp	r3, r1
 80002ba:	d301      	bcc.n	80002c0 <__divsi3+0x70>
 80002bc:	030b      	lsls	r3, r1, #12
 80002be:	1ac0      	subs	r0, r0, r3
 80002c0:	4152      	adcs	r2, r2
 80002c2:	0ac3      	lsrs	r3, r0, #11
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d301      	bcc.n	80002cc <__divsi3+0x7c>
 80002c8:	02cb      	lsls	r3, r1, #11
 80002ca:	1ac0      	subs	r0, r0, r3
 80002cc:	4152      	adcs	r2, r2
 80002ce:	0a83      	lsrs	r3, r0, #10
 80002d0:	428b      	cmp	r3, r1
 80002d2:	d301      	bcc.n	80002d8 <__divsi3+0x88>
 80002d4:	028b      	lsls	r3, r1, #10
 80002d6:	1ac0      	subs	r0, r0, r3
 80002d8:	4152      	adcs	r2, r2
 80002da:	0a43      	lsrs	r3, r0, #9
 80002dc:	428b      	cmp	r3, r1
 80002de:	d301      	bcc.n	80002e4 <__divsi3+0x94>
 80002e0:	024b      	lsls	r3, r1, #9
 80002e2:	1ac0      	subs	r0, r0, r3
 80002e4:	4152      	adcs	r2, r2
 80002e6:	0a03      	lsrs	r3, r0, #8
 80002e8:	428b      	cmp	r3, r1
 80002ea:	d301      	bcc.n	80002f0 <__divsi3+0xa0>
 80002ec:	020b      	lsls	r3, r1, #8
 80002ee:	1ac0      	subs	r0, r0, r3
 80002f0:	4152      	adcs	r2, r2
 80002f2:	d2cd      	bcs.n	8000290 <__divsi3+0x40>
 80002f4:	09c3      	lsrs	r3, r0, #7
 80002f6:	428b      	cmp	r3, r1
 80002f8:	d301      	bcc.n	80002fe <__divsi3+0xae>
 80002fa:	01cb      	lsls	r3, r1, #7
 80002fc:	1ac0      	subs	r0, r0, r3
 80002fe:	4152      	adcs	r2, r2
 8000300:	0983      	lsrs	r3, r0, #6
 8000302:	428b      	cmp	r3, r1
 8000304:	d301      	bcc.n	800030a <__divsi3+0xba>
 8000306:	018b      	lsls	r3, r1, #6
 8000308:	1ac0      	subs	r0, r0, r3
 800030a:	4152      	adcs	r2, r2
 800030c:	0943      	lsrs	r3, r0, #5
 800030e:	428b      	cmp	r3, r1
 8000310:	d301      	bcc.n	8000316 <__divsi3+0xc6>
 8000312:	014b      	lsls	r3, r1, #5
 8000314:	1ac0      	subs	r0, r0, r3
 8000316:	4152      	adcs	r2, r2
 8000318:	0903      	lsrs	r3, r0, #4
 800031a:	428b      	cmp	r3, r1
 800031c:	d301      	bcc.n	8000322 <__divsi3+0xd2>
 800031e:	010b      	lsls	r3, r1, #4
 8000320:	1ac0      	subs	r0, r0, r3
 8000322:	4152      	adcs	r2, r2
 8000324:	08c3      	lsrs	r3, r0, #3
 8000326:	428b      	cmp	r3, r1
 8000328:	d301      	bcc.n	800032e <__divsi3+0xde>
 800032a:	00cb      	lsls	r3, r1, #3
 800032c:	1ac0      	subs	r0, r0, r3
 800032e:	4152      	adcs	r2, r2
 8000330:	0883      	lsrs	r3, r0, #2
 8000332:	428b      	cmp	r3, r1
 8000334:	d301      	bcc.n	800033a <__divsi3+0xea>
 8000336:	008b      	lsls	r3, r1, #2
 8000338:	1ac0      	subs	r0, r0, r3
 800033a:	4152      	adcs	r2, r2
 800033c:	0843      	lsrs	r3, r0, #1
 800033e:	428b      	cmp	r3, r1
 8000340:	d301      	bcc.n	8000346 <__divsi3+0xf6>
 8000342:	004b      	lsls	r3, r1, #1
 8000344:	1ac0      	subs	r0, r0, r3
 8000346:	4152      	adcs	r2, r2
 8000348:	1a41      	subs	r1, r0, r1
 800034a:	d200      	bcs.n	800034e <__divsi3+0xfe>
 800034c:	4601      	mov	r1, r0
 800034e:	4152      	adcs	r2, r2
 8000350:	4610      	mov	r0, r2
 8000352:	4770      	bx	lr
 8000354:	e05d      	b.n	8000412 <__divsi3+0x1c2>
 8000356:	0fca      	lsrs	r2, r1, #31
 8000358:	d000      	beq.n	800035c <__divsi3+0x10c>
 800035a:	4249      	negs	r1, r1
 800035c:	1003      	asrs	r3, r0, #32
 800035e:	d300      	bcc.n	8000362 <__divsi3+0x112>
 8000360:	4240      	negs	r0, r0
 8000362:	4053      	eors	r3, r2
 8000364:	2200      	movs	r2, #0
 8000366:	469c      	mov	ip, r3
 8000368:	0903      	lsrs	r3, r0, #4
 800036a:	428b      	cmp	r3, r1
 800036c:	d32d      	bcc.n	80003ca <__divsi3+0x17a>
 800036e:	0a03      	lsrs	r3, r0, #8
 8000370:	428b      	cmp	r3, r1
 8000372:	d312      	bcc.n	800039a <__divsi3+0x14a>
 8000374:	22fc      	movs	r2, #252	; 0xfc
 8000376:	0189      	lsls	r1, r1, #6
 8000378:	ba12      	rev	r2, r2
 800037a:	0a03      	lsrs	r3, r0, #8
 800037c:	428b      	cmp	r3, r1
 800037e:	d30c      	bcc.n	800039a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	1192      	asrs	r2, r2, #6
 8000384:	428b      	cmp	r3, r1
 8000386:	d308      	bcc.n	800039a <__divsi3+0x14a>
 8000388:	0189      	lsls	r1, r1, #6
 800038a:	1192      	asrs	r2, r2, #6
 800038c:	428b      	cmp	r3, r1
 800038e:	d304      	bcc.n	800039a <__divsi3+0x14a>
 8000390:	0189      	lsls	r1, r1, #6
 8000392:	d03a      	beq.n	800040a <__divsi3+0x1ba>
 8000394:	1192      	asrs	r2, r2, #6
 8000396:	e000      	b.n	800039a <__divsi3+0x14a>
 8000398:	0989      	lsrs	r1, r1, #6
 800039a:	09c3      	lsrs	r3, r0, #7
 800039c:	428b      	cmp	r3, r1
 800039e:	d301      	bcc.n	80003a4 <__divsi3+0x154>
 80003a0:	01cb      	lsls	r3, r1, #7
 80003a2:	1ac0      	subs	r0, r0, r3
 80003a4:	4152      	adcs	r2, r2
 80003a6:	0983      	lsrs	r3, r0, #6
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d301      	bcc.n	80003b0 <__divsi3+0x160>
 80003ac:	018b      	lsls	r3, r1, #6
 80003ae:	1ac0      	subs	r0, r0, r3
 80003b0:	4152      	adcs	r2, r2
 80003b2:	0943      	lsrs	r3, r0, #5
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d301      	bcc.n	80003bc <__divsi3+0x16c>
 80003b8:	014b      	lsls	r3, r1, #5
 80003ba:	1ac0      	subs	r0, r0, r3
 80003bc:	4152      	adcs	r2, r2
 80003be:	0903      	lsrs	r3, r0, #4
 80003c0:	428b      	cmp	r3, r1
 80003c2:	d301      	bcc.n	80003c8 <__divsi3+0x178>
 80003c4:	010b      	lsls	r3, r1, #4
 80003c6:	1ac0      	subs	r0, r0, r3
 80003c8:	4152      	adcs	r2, r2
 80003ca:	08c3      	lsrs	r3, r0, #3
 80003cc:	428b      	cmp	r3, r1
 80003ce:	d301      	bcc.n	80003d4 <__divsi3+0x184>
 80003d0:	00cb      	lsls	r3, r1, #3
 80003d2:	1ac0      	subs	r0, r0, r3
 80003d4:	4152      	adcs	r2, r2
 80003d6:	0883      	lsrs	r3, r0, #2
 80003d8:	428b      	cmp	r3, r1
 80003da:	d301      	bcc.n	80003e0 <__divsi3+0x190>
 80003dc:	008b      	lsls	r3, r1, #2
 80003de:	1ac0      	subs	r0, r0, r3
 80003e0:	4152      	adcs	r2, r2
 80003e2:	d2d9      	bcs.n	8000398 <__divsi3+0x148>
 80003e4:	0843      	lsrs	r3, r0, #1
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d301      	bcc.n	80003ee <__divsi3+0x19e>
 80003ea:	004b      	lsls	r3, r1, #1
 80003ec:	1ac0      	subs	r0, r0, r3
 80003ee:	4152      	adcs	r2, r2
 80003f0:	1a41      	subs	r1, r0, r1
 80003f2:	d200      	bcs.n	80003f6 <__divsi3+0x1a6>
 80003f4:	4601      	mov	r1, r0
 80003f6:	4663      	mov	r3, ip
 80003f8:	4152      	adcs	r2, r2
 80003fa:	105b      	asrs	r3, r3, #1
 80003fc:	4610      	mov	r0, r2
 80003fe:	d301      	bcc.n	8000404 <__divsi3+0x1b4>
 8000400:	4240      	negs	r0, r0
 8000402:	2b00      	cmp	r3, #0
 8000404:	d500      	bpl.n	8000408 <__divsi3+0x1b8>
 8000406:	4249      	negs	r1, r1
 8000408:	4770      	bx	lr
 800040a:	4663      	mov	r3, ip
 800040c:	105b      	asrs	r3, r3, #1
 800040e:	d300      	bcc.n	8000412 <__divsi3+0x1c2>
 8000410:	4240      	negs	r0, r0
 8000412:	b501      	push	{r0, lr}
 8000414:	2000      	movs	r0, #0
 8000416:	f000 f805 	bl	8000424 <__aeabi_idiv0>
 800041a:	bd02      	pop	{r1, pc}

0800041c <__aeabi_idivmod>:
 800041c:	2900      	cmp	r1, #0
 800041e:	d0f8      	beq.n	8000412 <__divsi3+0x1c2>
 8000420:	e716      	b.n	8000250 <__divsi3>
 8000422:	4770      	bx	lr

08000424 <__aeabi_idiv0>:
 8000424:	4770      	bx	lr
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdrcmple>:
 8000428:	4684      	mov	ip, r0
 800042a:	1c10      	adds	r0, r2, #0
 800042c:	4662      	mov	r2, ip
 800042e:	468c      	mov	ip, r1
 8000430:	1c19      	adds	r1, r3, #0
 8000432:	4663      	mov	r3, ip
 8000434:	e000      	b.n	8000438 <__aeabi_cdcmpeq>
 8000436:	46c0      	nop			; (mov r8, r8)

08000438 <__aeabi_cdcmpeq>:
 8000438:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043a:	f001 f81f 	bl	800147c <__ledf2>
 800043e:	2800      	cmp	r0, #0
 8000440:	d401      	bmi.n	8000446 <__aeabi_cdcmpeq+0xe>
 8000442:	2100      	movs	r1, #0
 8000444:	42c8      	cmn	r0, r1
 8000446:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000448 <__aeabi_dcmpeq>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f000 ff69 	bl	8001320 <__eqdf2>
 800044e:	4240      	negs	r0, r0
 8000450:	3001      	adds	r0, #1
 8000452:	bd10      	pop	{r4, pc}

08000454 <__aeabi_dcmplt>:
 8000454:	b510      	push	{r4, lr}
 8000456:	f001 f811 	bl	800147c <__ledf2>
 800045a:	2800      	cmp	r0, #0
 800045c:	db01      	blt.n	8000462 <__aeabi_dcmplt+0xe>
 800045e:	2000      	movs	r0, #0
 8000460:	bd10      	pop	{r4, pc}
 8000462:	2001      	movs	r0, #1
 8000464:	bd10      	pop	{r4, pc}
 8000466:	46c0      	nop			; (mov r8, r8)

08000468 <__aeabi_dcmple>:
 8000468:	b510      	push	{r4, lr}
 800046a:	f001 f807 	bl	800147c <__ledf2>
 800046e:	2800      	cmp	r0, #0
 8000470:	dd01      	ble.n	8000476 <__aeabi_dcmple+0xe>
 8000472:	2000      	movs	r0, #0
 8000474:	bd10      	pop	{r4, pc}
 8000476:	2001      	movs	r0, #1
 8000478:	bd10      	pop	{r4, pc}
 800047a:	46c0      	nop			; (mov r8, r8)

0800047c <__aeabi_dcmpgt>:
 800047c:	b510      	push	{r4, lr}
 800047e:	f000 ff8b 	bl	8001398 <__gedf2>
 8000482:	2800      	cmp	r0, #0
 8000484:	dc01      	bgt.n	800048a <__aeabi_dcmpgt+0xe>
 8000486:	2000      	movs	r0, #0
 8000488:	bd10      	pop	{r4, pc}
 800048a:	2001      	movs	r0, #1
 800048c:	bd10      	pop	{r4, pc}
 800048e:	46c0      	nop			; (mov r8, r8)

08000490 <__aeabi_dcmpge>:
 8000490:	b510      	push	{r4, lr}
 8000492:	f000 ff81 	bl	8001398 <__gedf2>
 8000496:	2800      	cmp	r0, #0
 8000498:	da01      	bge.n	800049e <__aeabi_dcmpge+0xe>
 800049a:	2000      	movs	r0, #0
 800049c:	bd10      	pop	{r4, pc}
 800049e:	2001      	movs	r0, #1
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	46c0      	nop			; (mov r8, r8)

080004a4 <__aeabi_uldivmod>:
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	d111      	bne.n	80004cc <__aeabi_uldivmod+0x28>
 80004a8:	2a00      	cmp	r2, #0
 80004aa:	d10f      	bne.n	80004cc <__aeabi_uldivmod+0x28>
 80004ac:	2900      	cmp	r1, #0
 80004ae:	d100      	bne.n	80004b2 <__aeabi_uldivmod+0xe>
 80004b0:	2800      	cmp	r0, #0
 80004b2:	d002      	beq.n	80004ba <__aeabi_uldivmod+0x16>
 80004b4:	2100      	movs	r1, #0
 80004b6:	43c9      	mvns	r1, r1
 80004b8:	1c08      	adds	r0, r1, #0
 80004ba:	b407      	push	{r0, r1, r2}
 80004bc:	4802      	ldr	r0, [pc, #8]	; (80004c8 <__aeabi_uldivmod+0x24>)
 80004be:	a102      	add	r1, pc, #8	; (adr r1, 80004c8 <__aeabi_uldivmod+0x24>)
 80004c0:	1840      	adds	r0, r0, r1
 80004c2:	9002      	str	r0, [sp, #8]
 80004c4:	bd03      	pop	{r0, r1, pc}
 80004c6:	46c0      	nop			; (mov r8, r8)
 80004c8:	ffffff5d 	.word	0xffffff5d
 80004cc:	b403      	push	{r0, r1}
 80004ce:	4668      	mov	r0, sp
 80004d0:	b501      	push	{r0, lr}
 80004d2:	9802      	ldr	r0, [sp, #8]
 80004d4:	f000 f806 	bl	80004e4 <__udivmoddi4>
 80004d8:	9b01      	ldr	r3, [sp, #4]
 80004da:	469e      	mov	lr, r3
 80004dc:	b002      	add	sp, #8
 80004de:	bc0c      	pop	{r2, r3}
 80004e0:	4770      	bx	lr
 80004e2:	46c0      	nop			; (mov r8, r8)

080004e4 <__udivmoddi4>:
 80004e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004e6:	4657      	mov	r7, sl
 80004e8:	464e      	mov	r6, r9
 80004ea:	4645      	mov	r5, r8
 80004ec:	46de      	mov	lr, fp
 80004ee:	b5e0      	push	{r5, r6, r7, lr}
 80004f0:	0004      	movs	r4, r0
 80004f2:	000d      	movs	r5, r1
 80004f4:	4692      	mov	sl, r2
 80004f6:	4699      	mov	r9, r3
 80004f8:	b083      	sub	sp, #12
 80004fa:	428b      	cmp	r3, r1
 80004fc:	d830      	bhi.n	8000560 <__udivmoddi4+0x7c>
 80004fe:	d02d      	beq.n	800055c <__udivmoddi4+0x78>
 8000500:	4649      	mov	r1, r9
 8000502:	4650      	mov	r0, sl
 8000504:	f001 ff38 	bl	8002378 <__clzdi2>
 8000508:	0029      	movs	r1, r5
 800050a:	0006      	movs	r6, r0
 800050c:	0020      	movs	r0, r4
 800050e:	f001 ff33 	bl	8002378 <__clzdi2>
 8000512:	1a33      	subs	r3, r6, r0
 8000514:	4698      	mov	r8, r3
 8000516:	3b20      	subs	r3, #32
 8000518:	469b      	mov	fp, r3
 800051a:	d433      	bmi.n	8000584 <__udivmoddi4+0xa0>
 800051c:	465a      	mov	r2, fp
 800051e:	4653      	mov	r3, sl
 8000520:	4093      	lsls	r3, r2
 8000522:	4642      	mov	r2, r8
 8000524:	001f      	movs	r7, r3
 8000526:	4653      	mov	r3, sl
 8000528:	4093      	lsls	r3, r2
 800052a:	001e      	movs	r6, r3
 800052c:	42af      	cmp	r7, r5
 800052e:	d83a      	bhi.n	80005a6 <__udivmoddi4+0xc2>
 8000530:	42af      	cmp	r7, r5
 8000532:	d100      	bne.n	8000536 <__udivmoddi4+0x52>
 8000534:	e078      	b.n	8000628 <__udivmoddi4+0x144>
 8000536:	465b      	mov	r3, fp
 8000538:	1ba4      	subs	r4, r4, r6
 800053a:	41bd      	sbcs	r5, r7
 800053c:	2b00      	cmp	r3, #0
 800053e:	da00      	bge.n	8000542 <__udivmoddi4+0x5e>
 8000540:	e075      	b.n	800062e <__udivmoddi4+0x14a>
 8000542:	2200      	movs	r2, #0
 8000544:	2300      	movs	r3, #0
 8000546:	9200      	str	r2, [sp, #0]
 8000548:	9301      	str	r3, [sp, #4]
 800054a:	2301      	movs	r3, #1
 800054c:	465a      	mov	r2, fp
 800054e:	4093      	lsls	r3, r2
 8000550:	9301      	str	r3, [sp, #4]
 8000552:	2301      	movs	r3, #1
 8000554:	4642      	mov	r2, r8
 8000556:	4093      	lsls	r3, r2
 8000558:	9300      	str	r3, [sp, #0]
 800055a:	e028      	b.n	80005ae <__udivmoddi4+0xca>
 800055c:	4282      	cmp	r2, r0
 800055e:	d9cf      	bls.n	8000500 <__udivmoddi4+0x1c>
 8000560:	2200      	movs	r2, #0
 8000562:	2300      	movs	r3, #0
 8000564:	9200      	str	r2, [sp, #0]
 8000566:	9301      	str	r3, [sp, #4]
 8000568:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800056a:	2b00      	cmp	r3, #0
 800056c:	d001      	beq.n	8000572 <__udivmoddi4+0x8e>
 800056e:	601c      	str	r4, [r3, #0]
 8000570:	605d      	str	r5, [r3, #4]
 8000572:	9800      	ldr	r0, [sp, #0]
 8000574:	9901      	ldr	r1, [sp, #4]
 8000576:	b003      	add	sp, #12
 8000578:	bcf0      	pop	{r4, r5, r6, r7}
 800057a:	46bb      	mov	fp, r7
 800057c:	46b2      	mov	sl, r6
 800057e:	46a9      	mov	r9, r5
 8000580:	46a0      	mov	r8, r4
 8000582:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000584:	4642      	mov	r2, r8
 8000586:	2320      	movs	r3, #32
 8000588:	1a9b      	subs	r3, r3, r2
 800058a:	4652      	mov	r2, sl
 800058c:	40da      	lsrs	r2, r3
 800058e:	4641      	mov	r1, r8
 8000590:	0013      	movs	r3, r2
 8000592:	464a      	mov	r2, r9
 8000594:	408a      	lsls	r2, r1
 8000596:	0017      	movs	r7, r2
 8000598:	4642      	mov	r2, r8
 800059a:	431f      	orrs	r7, r3
 800059c:	4653      	mov	r3, sl
 800059e:	4093      	lsls	r3, r2
 80005a0:	001e      	movs	r6, r3
 80005a2:	42af      	cmp	r7, r5
 80005a4:	d9c4      	bls.n	8000530 <__udivmoddi4+0x4c>
 80005a6:	2200      	movs	r2, #0
 80005a8:	2300      	movs	r3, #0
 80005aa:	9200      	str	r2, [sp, #0]
 80005ac:	9301      	str	r3, [sp, #4]
 80005ae:	4643      	mov	r3, r8
 80005b0:	2b00      	cmp	r3, #0
 80005b2:	d0d9      	beq.n	8000568 <__udivmoddi4+0x84>
 80005b4:	07fb      	lsls	r3, r7, #31
 80005b6:	0872      	lsrs	r2, r6, #1
 80005b8:	431a      	orrs	r2, r3
 80005ba:	4646      	mov	r6, r8
 80005bc:	087b      	lsrs	r3, r7, #1
 80005be:	e00e      	b.n	80005de <__udivmoddi4+0xfa>
 80005c0:	42ab      	cmp	r3, r5
 80005c2:	d101      	bne.n	80005c8 <__udivmoddi4+0xe4>
 80005c4:	42a2      	cmp	r2, r4
 80005c6:	d80c      	bhi.n	80005e2 <__udivmoddi4+0xfe>
 80005c8:	1aa4      	subs	r4, r4, r2
 80005ca:	419d      	sbcs	r5, r3
 80005cc:	2001      	movs	r0, #1
 80005ce:	1924      	adds	r4, r4, r4
 80005d0:	416d      	adcs	r5, r5
 80005d2:	2100      	movs	r1, #0
 80005d4:	3e01      	subs	r6, #1
 80005d6:	1824      	adds	r4, r4, r0
 80005d8:	414d      	adcs	r5, r1
 80005da:	2e00      	cmp	r6, #0
 80005dc:	d006      	beq.n	80005ec <__udivmoddi4+0x108>
 80005de:	42ab      	cmp	r3, r5
 80005e0:	d9ee      	bls.n	80005c0 <__udivmoddi4+0xdc>
 80005e2:	3e01      	subs	r6, #1
 80005e4:	1924      	adds	r4, r4, r4
 80005e6:	416d      	adcs	r5, r5
 80005e8:	2e00      	cmp	r6, #0
 80005ea:	d1f8      	bne.n	80005de <__udivmoddi4+0xfa>
 80005ec:	9800      	ldr	r0, [sp, #0]
 80005ee:	9901      	ldr	r1, [sp, #4]
 80005f0:	465b      	mov	r3, fp
 80005f2:	1900      	adds	r0, r0, r4
 80005f4:	4169      	adcs	r1, r5
 80005f6:	2b00      	cmp	r3, #0
 80005f8:	db24      	blt.n	8000644 <__udivmoddi4+0x160>
 80005fa:	002b      	movs	r3, r5
 80005fc:	465a      	mov	r2, fp
 80005fe:	4644      	mov	r4, r8
 8000600:	40d3      	lsrs	r3, r2
 8000602:	002a      	movs	r2, r5
 8000604:	40e2      	lsrs	r2, r4
 8000606:	001c      	movs	r4, r3
 8000608:	465b      	mov	r3, fp
 800060a:	0015      	movs	r5, r2
 800060c:	2b00      	cmp	r3, #0
 800060e:	db2a      	blt.n	8000666 <__udivmoddi4+0x182>
 8000610:	0026      	movs	r6, r4
 8000612:	409e      	lsls	r6, r3
 8000614:	0033      	movs	r3, r6
 8000616:	0026      	movs	r6, r4
 8000618:	4647      	mov	r7, r8
 800061a:	40be      	lsls	r6, r7
 800061c:	0032      	movs	r2, r6
 800061e:	1a80      	subs	r0, r0, r2
 8000620:	4199      	sbcs	r1, r3
 8000622:	9000      	str	r0, [sp, #0]
 8000624:	9101      	str	r1, [sp, #4]
 8000626:	e79f      	b.n	8000568 <__udivmoddi4+0x84>
 8000628:	42a3      	cmp	r3, r4
 800062a:	d8bc      	bhi.n	80005a6 <__udivmoddi4+0xc2>
 800062c:	e783      	b.n	8000536 <__udivmoddi4+0x52>
 800062e:	4642      	mov	r2, r8
 8000630:	2320      	movs	r3, #32
 8000632:	2100      	movs	r1, #0
 8000634:	1a9b      	subs	r3, r3, r2
 8000636:	2200      	movs	r2, #0
 8000638:	9100      	str	r1, [sp, #0]
 800063a:	9201      	str	r2, [sp, #4]
 800063c:	2201      	movs	r2, #1
 800063e:	40da      	lsrs	r2, r3
 8000640:	9201      	str	r2, [sp, #4]
 8000642:	e786      	b.n	8000552 <__udivmoddi4+0x6e>
 8000644:	4642      	mov	r2, r8
 8000646:	2320      	movs	r3, #32
 8000648:	1a9b      	subs	r3, r3, r2
 800064a:	002a      	movs	r2, r5
 800064c:	4646      	mov	r6, r8
 800064e:	409a      	lsls	r2, r3
 8000650:	0023      	movs	r3, r4
 8000652:	40f3      	lsrs	r3, r6
 8000654:	4644      	mov	r4, r8
 8000656:	4313      	orrs	r3, r2
 8000658:	002a      	movs	r2, r5
 800065a:	40e2      	lsrs	r2, r4
 800065c:	001c      	movs	r4, r3
 800065e:	465b      	mov	r3, fp
 8000660:	0015      	movs	r5, r2
 8000662:	2b00      	cmp	r3, #0
 8000664:	dad4      	bge.n	8000610 <__udivmoddi4+0x12c>
 8000666:	4642      	mov	r2, r8
 8000668:	002f      	movs	r7, r5
 800066a:	2320      	movs	r3, #32
 800066c:	0026      	movs	r6, r4
 800066e:	4097      	lsls	r7, r2
 8000670:	1a9b      	subs	r3, r3, r2
 8000672:	40de      	lsrs	r6, r3
 8000674:	003b      	movs	r3, r7
 8000676:	4333      	orrs	r3, r6
 8000678:	e7cd      	b.n	8000616 <__udivmoddi4+0x132>
 800067a:	46c0      	nop			; (mov r8, r8)

0800067c <__aeabi_dadd>:
 800067c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800067e:	464f      	mov	r7, r9
 8000680:	46d6      	mov	lr, sl
 8000682:	4646      	mov	r6, r8
 8000684:	000d      	movs	r5, r1
 8000686:	0001      	movs	r1, r0
 8000688:	0018      	movs	r0, r3
 800068a:	b5c0      	push	{r6, r7, lr}
 800068c:	0017      	movs	r7, r2
 800068e:	032b      	lsls	r3, r5, #12
 8000690:	0a5a      	lsrs	r2, r3, #9
 8000692:	0f4b      	lsrs	r3, r1, #29
 8000694:	4313      	orrs	r3, r2
 8000696:	00ca      	lsls	r2, r1, #3
 8000698:	4691      	mov	r9, r2
 800069a:	0302      	lsls	r2, r0, #12
 800069c:	006e      	lsls	r6, r5, #1
 800069e:	0041      	lsls	r1, r0, #1
 80006a0:	0a52      	lsrs	r2, r2, #9
 80006a2:	0fec      	lsrs	r4, r5, #31
 80006a4:	0f7d      	lsrs	r5, r7, #29
 80006a6:	4315      	orrs	r5, r2
 80006a8:	0d76      	lsrs	r6, r6, #21
 80006aa:	0d49      	lsrs	r1, r1, #21
 80006ac:	0fc0      	lsrs	r0, r0, #31
 80006ae:	4682      	mov	sl, r0
 80006b0:	46ac      	mov	ip, r5
 80006b2:	00ff      	lsls	r7, r7, #3
 80006b4:	1a72      	subs	r2, r6, r1
 80006b6:	4284      	cmp	r4, r0
 80006b8:	d100      	bne.n	80006bc <__aeabi_dadd+0x40>
 80006ba:	e098      	b.n	80007ee <__aeabi_dadd+0x172>
 80006bc:	2a00      	cmp	r2, #0
 80006be:	dc00      	bgt.n	80006c2 <__aeabi_dadd+0x46>
 80006c0:	e081      	b.n	80007c6 <__aeabi_dadd+0x14a>
 80006c2:	2900      	cmp	r1, #0
 80006c4:	d100      	bne.n	80006c8 <__aeabi_dadd+0x4c>
 80006c6:	e0b6      	b.n	8000836 <__aeabi_dadd+0x1ba>
 80006c8:	49c9      	ldr	r1, [pc, #804]	; (80009f0 <__aeabi_dadd+0x374>)
 80006ca:	428e      	cmp	r6, r1
 80006cc:	d100      	bne.n	80006d0 <__aeabi_dadd+0x54>
 80006ce:	e172      	b.n	80009b6 <__aeabi_dadd+0x33a>
 80006d0:	2180      	movs	r1, #128	; 0x80
 80006d2:	0028      	movs	r0, r5
 80006d4:	0409      	lsls	r1, r1, #16
 80006d6:	4308      	orrs	r0, r1
 80006d8:	4684      	mov	ip, r0
 80006da:	2a38      	cmp	r2, #56	; 0x38
 80006dc:	dd00      	ble.n	80006e0 <__aeabi_dadd+0x64>
 80006de:	e15e      	b.n	800099e <__aeabi_dadd+0x322>
 80006e0:	2a1f      	cmp	r2, #31
 80006e2:	dd00      	ble.n	80006e6 <__aeabi_dadd+0x6a>
 80006e4:	e1ee      	b.n	8000ac4 <__aeabi_dadd+0x448>
 80006e6:	2020      	movs	r0, #32
 80006e8:	0039      	movs	r1, r7
 80006ea:	4665      	mov	r5, ip
 80006ec:	1a80      	subs	r0, r0, r2
 80006ee:	4087      	lsls	r7, r0
 80006f0:	40d1      	lsrs	r1, r2
 80006f2:	4085      	lsls	r5, r0
 80006f4:	430d      	orrs	r5, r1
 80006f6:	0039      	movs	r1, r7
 80006f8:	1e4f      	subs	r7, r1, #1
 80006fa:	41b9      	sbcs	r1, r7
 80006fc:	4667      	mov	r7, ip
 80006fe:	40d7      	lsrs	r7, r2
 8000700:	4329      	orrs	r1, r5
 8000702:	1bdb      	subs	r3, r3, r7
 8000704:	464a      	mov	r2, r9
 8000706:	1a55      	subs	r5, r2, r1
 8000708:	45a9      	cmp	r9, r5
 800070a:	4189      	sbcs	r1, r1
 800070c:	4249      	negs	r1, r1
 800070e:	1a5b      	subs	r3, r3, r1
 8000710:	4698      	mov	r8, r3
 8000712:	4643      	mov	r3, r8
 8000714:	021b      	lsls	r3, r3, #8
 8000716:	d400      	bmi.n	800071a <__aeabi_dadd+0x9e>
 8000718:	e0cc      	b.n	80008b4 <__aeabi_dadd+0x238>
 800071a:	4643      	mov	r3, r8
 800071c:	025b      	lsls	r3, r3, #9
 800071e:	0a5b      	lsrs	r3, r3, #9
 8000720:	4698      	mov	r8, r3
 8000722:	4643      	mov	r3, r8
 8000724:	2b00      	cmp	r3, #0
 8000726:	d100      	bne.n	800072a <__aeabi_dadd+0xae>
 8000728:	e12c      	b.n	8000984 <__aeabi_dadd+0x308>
 800072a:	4640      	mov	r0, r8
 800072c:	f001 fe06 	bl	800233c <__clzsi2>
 8000730:	0001      	movs	r1, r0
 8000732:	3908      	subs	r1, #8
 8000734:	2220      	movs	r2, #32
 8000736:	0028      	movs	r0, r5
 8000738:	4643      	mov	r3, r8
 800073a:	1a52      	subs	r2, r2, r1
 800073c:	408b      	lsls	r3, r1
 800073e:	40d0      	lsrs	r0, r2
 8000740:	408d      	lsls	r5, r1
 8000742:	4303      	orrs	r3, r0
 8000744:	428e      	cmp	r6, r1
 8000746:	dd00      	ble.n	800074a <__aeabi_dadd+0xce>
 8000748:	e117      	b.n	800097a <__aeabi_dadd+0x2fe>
 800074a:	1b8e      	subs	r6, r1, r6
 800074c:	1c72      	adds	r2, r6, #1
 800074e:	2a1f      	cmp	r2, #31
 8000750:	dd00      	ble.n	8000754 <__aeabi_dadd+0xd8>
 8000752:	e1a7      	b.n	8000aa4 <__aeabi_dadd+0x428>
 8000754:	2120      	movs	r1, #32
 8000756:	0018      	movs	r0, r3
 8000758:	002e      	movs	r6, r5
 800075a:	1a89      	subs	r1, r1, r2
 800075c:	408d      	lsls	r5, r1
 800075e:	4088      	lsls	r0, r1
 8000760:	40d6      	lsrs	r6, r2
 8000762:	40d3      	lsrs	r3, r2
 8000764:	1e69      	subs	r1, r5, #1
 8000766:	418d      	sbcs	r5, r1
 8000768:	4330      	orrs	r0, r6
 800076a:	4698      	mov	r8, r3
 800076c:	2600      	movs	r6, #0
 800076e:	4305      	orrs	r5, r0
 8000770:	076b      	lsls	r3, r5, #29
 8000772:	d009      	beq.n	8000788 <__aeabi_dadd+0x10c>
 8000774:	230f      	movs	r3, #15
 8000776:	402b      	ands	r3, r5
 8000778:	2b04      	cmp	r3, #4
 800077a:	d005      	beq.n	8000788 <__aeabi_dadd+0x10c>
 800077c:	1d2b      	adds	r3, r5, #4
 800077e:	42ab      	cmp	r3, r5
 8000780:	41ad      	sbcs	r5, r5
 8000782:	426d      	negs	r5, r5
 8000784:	44a8      	add	r8, r5
 8000786:	001d      	movs	r5, r3
 8000788:	4643      	mov	r3, r8
 800078a:	021b      	lsls	r3, r3, #8
 800078c:	d400      	bmi.n	8000790 <__aeabi_dadd+0x114>
 800078e:	e094      	b.n	80008ba <__aeabi_dadd+0x23e>
 8000790:	4b97      	ldr	r3, [pc, #604]	; (80009f0 <__aeabi_dadd+0x374>)
 8000792:	1c72      	adds	r2, r6, #1
 8000794:	429a      	cmp	r2, r3
 8000796:	d100      	bne.n	800079a <__aeabi_dadd+0x11e>
 8000798:	e09d      	b.n	80008d6 <__aeabi_dadd+0x25a>
 800079a:	4641      	mov	r1, r8
 800079c:	4b95      	ldr	r3, [pc, #596]	; (80009f4 <__aeabi_dadd+0x378>)
 800079e:	08ed      	lsrs	r5, r5, #3
 80007a0:	4019      	ands	r1, r3
 80007a2:	000b      	movs	r3, r1
 80007a4:	0552      	lsls	r2, r2, #21
 80007a6:	0749      	lsls	r1, r1, #29
 80007a8:	025b      	lsls	r3, r3, #9
 80007aa:	4329      	orrs	r1, r5
 80007ac:	0b1b      	lsrs	r3, r3, #12
 80007ae:	0d52      	lsrs	r2, r2, #21
 80007b0:	0512      	lsls	r2, r2, #20
 80007b2:	4313      	orrs	r3, r2
 80007b4:	07e4      	lsls	r4, r4, #31
 80007b6:	4323      	orrs	r3, r4
 80007b8:	0008      	movs	r0, r1
 80007ba:	0019      	movs	r1, r3
 80007bc:	bce0      	pop	{r5, r6, r7}
 80007be:	46ba      	mov	sl, r7
 80007c0:	46b1      	mov	r9, r6
 80007c2:	46a8      	mov	r8, r5
 80007c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80007c6:	2a00      	cmp	r2, #0
 80007c8:	d043      	beq.n	8000852 <__aeabi_dadd+0x1d6>
 80007ca:	1b8a      	subs	r2, r1, r6
 80007cc:	2e00      	cmp	r6, #0
 80007ce:	d000      	beq.n	80007d2 <__aeabi_dadd+0x156>
 80007d0:	e12a      	b.n	8000a28 <__aeabi_dadd+0x3ac>
 80007d2:	464c      	mov	r4, r9
 80007d4:	431c      	orrs	r4, r3
 80007d6:	d100      	bne.n	80007da <__aeabi_dadd+0x15e>
 80007d8:	e1d1      	b.n	8000b7e <__aeabi_dadd+0x502>
 80007da:	1e54      	subs	r4, r2, #1
 80007dc:	2a01      	cmp	r2, #1
 80007de:	d100      	bne.n	80007e2 <__aeabi_dadd+0x166>
 80007e0:	e21f      	b.n	8000c22 <__aeabi_dadd+0x5a6>
 80007e2:	4d83      	ldr	r5, [pc, #524]	; (80009f0 <__aeabi_dadd+0x374>)
 80007e4:	42aa      	cmp	r2, r5
 80007e6:	d100      	bne.n	80007ea <__aeabi_dadd+0x16e>
 80007e8:	e272      	b.n	8000cd0 <__aeabi_dadd+0x654>
 80007ea:	0022      	movs	r2, r4
 80007ec:	e123      	b.n	8000a36 <__aeabi_dadd+0x3ba>
 80007ee:	2a00      	cmp	r2, #0
 80007f0:	dc00      	bgt.n	80007f4 <__aeabi_dadd+0x178>
 80007f2:	e098      	b.n	8000926 <__aeabi_dadd+0x2aa>
 80007f4:	2900      	cmp	r1, #0
 80007f6:	d042      	beq.n	800087e <__aeabi_dadd+0x202>
 80007f8:	497d      	ldr	r1, [pc, #500]	; (80009f0 <__aeabi_dadd+0x374>)
 80007fa:	428e      	cmp	r6, r1
 80007fc:	d100      	bne.n	8000800 <__aeabi_dadd+0x184>
 80007fe:	e0da      	b.n	80009b6 <__aeabi_dadd+0x33a>
 8000800:	2180      	movs	r1, #128	; 0x80
 8000802:	0028      	movs	r0, r5
 8000804:	0409      	lsls	r1, r1, #16
 8000806:	4308      	orrs	r0, r1
 8000808:	4684      	mov	ip, r0
 800080a:	2a38      	cmp	r2, #56	; 0x38
 800080c:	dd00      	ble.n	8000810 <__aeabi_dadd+0x194>
 800080e:	e129      	b.n	8000a64 <__aeabi_dadd+0x3e8>
 8000810:	2a1f      	cmp	r2, #31
 8000812:	dc00      	bgt.n	8000816 <__aeabi_dadd+0x19a>
 8000814:	e187      	b.n	8000b26 <__aeabi_dadd+0x4aa>
 8000816:	0011      	movs	r1, r2
 8000818:	4665      	mov	r5, ip
 800081a:	3920      	subs	r1, #32
 800081c:	40cd      	lsrs	r5, r1
 800081e:	2a20      	cmp	r2, #32
 8000820:	d004      	beq.n	800082c <__aeabi_dadd+0x1b0>
 8000822:	2040      	movs	r0, #64	; 0x40
 8000824:	4661      	mov	r1, ip
 8000826:	1a82      	subs	r2, r0, r2
 8000828:	4091      	lsls	r1, r2
 800082a:	430f      	orrs	r7, r1
 800082c:	0039      	movs	r1, r7
 800082e:	1e4f      	subs	r7, r1, #1
 8000830:	41b9      	sbcs	r1, r7
 8000832:	430d      	orrs	r5, r1
 8000834:	e11b      	b.n	8000a6e <__aeabi_dadd+0x3f2>
 8000836:	0029      	movs	r1, r5
 8000838:	4339      	orrs	r1, r7
 800083a:	d100      	bne.n	800083e <__aeabi_dadd+0x1c2>
 800083c:	e0b5      	b.n	80009aa <__aeabi_dadd+0x32e>
 800083e:	1e51      	subs	r1, r2, #1
 8000840:	2a01      	cmp	r2, #1
 8000842:	d100      	bne.n	8000846 <__aeabi_dadd+0x1ca>
 8000844:	e1ab      	b.n	8000b9e <__aeabi_dadd+0x522>
 8000846:	486a      	ldr	r0, [pc, #424]	; (80009f0 <__aeabi_dadd+0x374>)
 8000848:	4282      	cmp	r2, r0
 800084a:	d100      	bne.n	800084e <__aeabi_dadd+0x1d2>
 800084c:	e1b2      	b.n	8000bb4 <__aeabi_dadd+0x538>
 800084e:	000a      	movs	r2, r1
 8000850:	e743      	b.n	80006da <__aeabi_dadd+0x5e>
 8000852:	4969      	ldr	r1, [pc, #420]	; (80009f8 <__aeabi_dadd+0x37c>)
 8000854:	1c75      	adds	r5, r6, #1
 8000856:	420d      	tst	r5, r1
 8000858:	d000      	beq.n	800085c <__aeabi_dadd+0x1e0>
 800085a:	e0cf      	b.n	80009fc <__aeabi_dadd+0x380>
 800085c:	2e00      	cmp	r6, #0
 800085e:	d000      	beq.n	8000862 <__aeabi_dadd+0x1e6>
 8000860:	e193      	b.n	8000b8a <__aeabi_dadd+0x50e>
 8000862:	4649      	mov	r1, r9
 8000864:	4319      	orrs	r1, r3
 8000866:	d100      	bne.n	800086a <__aeabi_dadd+0x1ee>
 8000868:	e1d1      	b.n	8000c0e <__aeabi_dadd+0x592>
 800086a:	4661      	mov	r1, ip
 800086c:	4339      	orrs	r1, r7
 800086e:	d000      	beq.n	8000872 <__aeabi_dadd+0x1f6>
 8000870:	e1e3      	b.n	8000c3a <__aeabi_dadd+0x5be>
 8000872:	4649      	mov	r1, r9
 8000874:	0758      	lsls	r0, r3, #29
 8000876:	08c9      	lsrs	r1, r1, #3
 8000878:	4301      	orrs	r1, r0
 800087a:	08db      	lsrs	r3, r3, #3
 800087c:	e026      	b.n	80008cc <__aeabi_dadd+0x250>
 800087e:	0029      	movs	r1, r5
 8000880:	4339      	orrs	r1, r7
 8000882:	d100      	bne.n	8000886 <__aeabi_dadd+0x20a>
 8000884:	e091      	b.n	80009aa <__aeabi_dadd+0x32e>
 8000886:	1e51      	subs	r1, r2, #1
 8000888:	2a01      	cmp	r2, #1
 800088a:	d005      	beq.n	8000898 <__aeabi_dadd+0x21c>
 800088c:	4858      	ldr	r0, [pc, #352]	; (80009f0 <__aeabi_dadd+0x374>)
 800088e:	4282      	cmp	r2, r0
 8000890:	d100      	bne.n	8000894 <__aeabi_dadd+0x218>
 8000892:	e18f      	b.n	8000bb4 <__aeabi_dadd+0x538>
 8000894:	000a      	movs	r2, r1
 8000896:	e7b8      	b.n	800080a <__aeabi_dadd+0x18e>
 8000898:	003d      	movs	r5, r7
 800089a:	444d      	add	r5, r9
 800089c:	454d      	cmp	r5, r9
 800089e:	4189      	sbcs	r1, r1
 80008a0:	4463      	add	r3, ip
 80008a2:	4698      	mov	r8, r3
 80008a4:	4249      	negs	r1, r1
 80008a6:	4488      	add	r8, r1
 80008a8:	4643      	mov	r3, r8
 80008aa:	2602      	movs	r6, #2
 80008ac:	021b      	lsls	r3, r3, #8
 80008ae:	d500      	bpl.n	80008b2 <__aeabi_dadd+0x236>
 80008b0:	e0eb      	b.n	8000a8a <__aeabi_dadd+0x40e>
 80008b2:	3e01      	subs	r6, #1
 80008b4:	076b      	lsls	r3, r5, #29
 80008b6:	d000      	beq.n	80008ba <__aeabi_dadd+0x23e>
 80008b8:	e75c      	b.n	8000774 <__aeabi_dadd+0xf8>
 80008ba:	4643      	mov	r3, r8
 80008bc:	08e9      	lsrs	r1, r5, #3
 80008be:	075a      	lsls	r2, r3, #29
 80008c0:	4311      	orrs	r1, r2
 80008c2:	0032      	movs	r2, r6
 80008c4:	08db      	lsrs	r3, r3, #3
 80008c6:	484a      	ldr	r0, [pc, #296]	; (80009f0 <__aeabi_dadd+0x374>)
 80008c8:	4282      	cmp	r2, r0
 80008ca:	d021      	beq.n	8000910 <__aeabi_dadd+0x294>
 80008cc:	031b      	lsls	r3, r3, #12
 80008ce:	0552      	lsls	r2, r2, #21
 80008d0:	0b1b      	lsrs	r3, r3, #12
 80008d2:	0d52      	lsrs	r2, r2, #21
 80008d4:	e76c      	b.n	80007b0 <__aeabi_dadd+0x134>
 80008d6:	2300      	movs	r3, #0
 80008d8:	2100      	movs	r1, #0
 80008da:	e769      	b.n	80007b0 <__aeabi_dadd+0x134>
 80008dc:	002a      	movs	r2, r5
 80008de:	433a      	orrs	r2, r7
 80008e0:	d069      	beq.n	80009b6 <__aeabi_dadd+0x33a>
 80008e2:	464a      	mov	r2, r9
 80008e4:	0758      	lsls	r0, r3, #29
 80008e6:	08d1      	lsrs	r1, r2, #3
 80008e8:	08da      	lsrs	r2, r3, #3
 80008ea:	2380      	movs	r3, #128	; 0x80
 80008ec:	031b      	lsls	r3, r3, #12
 80008ee:	4308      	orrs	r0, r1
 80008f0:	421a      	tst	r2, r3
 80008f2:	d007      	beq.n	8000904 <__aeabi_dadd+0x288>
 80008f4:	0029      	movs	r1, r5
 80008f6:	08ed      	lsrs	r5, r5, #3
 80008f8:	421d      	tst	r5, r3
 80008fa:	d103      	bne.n	8000904 <__aeabi_dadd+0x288>
 80008fc:	002a      	movs	r2, r5
 80008fe:	08ff      	lsrs	r7, r7, #3
 8000900:	0748      	lsls	r0, r1, #29
 8000902:	4338      	orrs	r0, r7
 8000904:	0f43      	lsrs	r3, r0, #29
 8000906:	00c1      	lsls	r1, r0, #3
 8000908:	075b      	lsls	r3, r3, #29
 800090a:	08c9      	lsrs	r1, r1, #3
 800090c:	4319      	orrs	r1, r3
 800090e:	0013      	movs	r3, r2
 8000910:	000a      	movs	r2, r1
 8000912:	431a      	orrs	r2, r3
 8000914:	d100      	bne.n	8000918 <__aeabi_dadd+0x29c>
 8000916:	e213      	b.n	8000d40 <__aeabi_dadd+0x6c4>
 8000918:	2280      	movs	r2, #128	; 0x80
 800091a:	0312      	lsls	r2, r2, #12
 800091c:	4313      	orrs	r3, r2
 800091e:	031b      	lsls	r3, r3, #12
 8000920:	4a33      	ldr	r2, [pc, #204]	; (80009f0 <__aeabi_dadd+0x374>)
 8000922:	0b1b      	lsrs	r3, r3, #12
 8000924:	e744      	b.n	80007b0 <__aeabi_dadd+0x134>
 8000926:	2a00      	cmp	r2, #0
 8000928:	d04b      	beq.n	80009c2 <__aeabi_dadd+0x346>
 800092a:	1b8a      	subs	r2, r1, r6
 800092c:	2e00      	cmp	r6, #0
 800092e:	d100      	bne.n	8000932 <__aeabi_dadd+0x2b6>
 8000930:	e0e7      	b.n	8000b02 <__aeabi_dadd+0x486>
 8000932:	482f      	ldr	r0, [pc, #188]	; (80009f0 <__aeabi_dadd+0x374>)
 8000934:	4281      	cmp	r1, r0
 8000936:	d100      	bne.n	800093a <__aeabi_dadd+0x2be>
 8000938:	e195      	b.n	8000c66 <__aeabi_dadd+0x5ea>
 800093a:	2080      	movs	r0, #128	; 0x80
 800093c:	0400      	lsls	r0, r0, #16
 800093e:	4303      	orrs	r3, r0
 8000940:	2a38      	cmp	r2, #56	; 0x38
 8000942:	dd00      	ble.n	8000946 <__aeabi_dadd+0x2ca>
 8000944:	e143      	b.n	8000bce <__aeabi_dadd+0x552>
 8000946:	2a1f      	cmp	r2, #31
 8000948:	dd00      	ble.n	800094c <__aeabi_dadd+0x2d0>
 800094a:	e1db      	b.n	8000d04 <__aeabi_dadd+0x688>
 800094c:	2020      	movs	r0, #32
 800094e:	001d      	movs	r5, r3
 8000950:	464e      	mov	r6, r9
 8000952:	1a80      	subs	r0, r0, r2
 8000954:	4085      	lsls	r5, r0
 8000956:	40d6      	lsrs	r6, r2
 8000958:	4335      	orrs	r5, r6
 800095a:	464e      	mov	r6, r9
 800095c:	4086      	lsls	r6, r0
 800095e:	0030      	movs	r0, r6
 8000960:	40d3      	lsrs	r3, r2
 8000962:	1e46      	subs	r6, r0, #1
 8000964:	41b0      	sbcs	r0, r6
 8000966:	449c      	add	ip, r3
 8000968:	4305      	orrs	r5, r0
 800096a:	19ed      	adds	r5, r5, r7
 800096c:	42bd      	cmp	r5, r7
 800096e:	419b      	sbcs	r3, r3
 8000970:	425b      	negs	r3, r3
 8000972:	4463      	add	r3, ip
 8000974:	4698      	mov	r8, r3
 8000976:	000e      	movs	r6, r1
 8000978:	e07f      	b.n	8000a7a <__aeabi_dadd+0x3fe>
 800097a:	4a1e      	ldr	r2, [pc, #120]	; (80009f4 <__aeabi_dadd+0x378>)
 800097c:	1a76      	subs	r6, r6, r1
 800097e:	4013      	ands	r3, r2
 8000980:	4698      	mov	r8, r3
 8000982:	e6f5      	b.n	8000770 <__aeabi_dadd+0xf4>
 8000984:	0028      	movs	r0, r5
 8000986:	f001 fcd9 	bl	800233c <__clzsi2>
 800098a:	0001      	movs	r1, r0
 800098c:	3118      	adds	r1, #24
 800098e:	291f      	cmp	r1, #31
 8000990:	dc00      	bgt.n	8000994 <__aeabi_dadd+0x318>
 8000992:	e6cf      	b.n	8000734 <__aeabi_dadd+0xb8>
 8000994:	002b      	movs	r3, r5
 8000996:	3808      	subs	r0, #8
 8000998:	4083      	lsls	r3, r0
 800099a:	2500      	movs	r5, #0
 800099c:	e6d2      	b.n	8000744 <__aeabi_dadd+0xc8>
 800099e:	4662      	mov	r2, ip
 80009a0:	433a      	orrs	r2, r7
 80009a2:	0011      	movs	r1, r2
 80009a4:	1e4f      	subs	r7, r1, #1
 80009a6:	41b9      	sbcs	r1, r7
 80009a8:	e6ac      	b.n	8000704 <__aeabi_dadd+0x88>
 80009aa:	4649      	mov	r1, r9
 80009ac:	0758      	lsls	r0, r3, #29
 80009ae:	08c9      	lsrs	r1, r1, #3
 80009b0:	4301      	orrs	r1, r0
 80009b2:	08db      	lsrs	r3, r3, #3
 80009b4:	e787      	b.n	80008c6 <__aeabi_dadd+0x24a>
 80009b6:	4649      	mov	r1, r9
 80009b8:	075a      	lsls	r2, r3, #29
 80009ba:	08c9      	lsrs	r1, r1, #3
 80009bc:	4311      	orrs	r1, r2
 80009be:	08db      	lsrs	r3, r3, #3
 80009c0:	e7a6      	b.n	8000910 <__aeabi_dadd+0x294>
 80009c2:	490d      	ldr	r1, [pc, #52]	; (80009f8 <__aeabi_dadd+0x37c>)
 80009c4:	1c70      	adds	r0, r6, #1
 80009c6:	4208      	tst	r0, r1
 80009c8:	d000      	beq.n	80009cc <__aeabi_dadd+0x350>
 80009ca:	e0bb      	b.n	8000b44 <__aeabi_dadd+0x4c8>
 80009cc:	2e00      	cmp	r6, #0
 80009ce:	d000      	beq.n	80009d2 <__aeabi_dadd+0x356>
 80009d0:	e114      	b.n	8000bfc <__aeabi_dadd+0x580>
 80009d2:	4649      	mov	r1, r9
 80009d4:	4319      	orrs	r1, r3
 80009d6:	d100      	bne.n	80009da <__aeabi_dadd+0x35e>
 80009d8:	e175      	b.n	8000cc6 <__aeabi_dadd+0x64a>
 80009da:	0029      	movs	r1, r5
 80009dc:	4339      	orrs	r1, r7
 80009de:	d000      	beq.n	80009e2 <__aeabi_dadd+0x366>
 80009e0:	e17e      	b.n	8000ce0 <__aeabi_dadd+0x664>
 80009e2:	4649      	mov	r1, r9
 80009e4:	0758      	lsls	r0, r3, #29
 80009e6:	08c9      	lsrs	r1, r1, #3
 80009e8:	4301      	orrs	r1, r0
 80009ea:	08db      	lsrs	r3, r3, #3
 80009ec:	e76e      	b.n	80008cc <__aeabi_dadd+0x250>
 80009ee:	46c0      	nop			; (mov r8, r8)
 80009f0:	000007ff 	.word	0x000007ff
 80009f4:	ff7fffff 	.word	0xff7fffff
 80009f8:	000007fe 	.word	0x000007fe
 80009fc:	4649      	mov	r1, r9
 80009fe:	1bcd      	subs	r5, r1, r7
 8000a00:	4661      	mov	r1, ip
 8000a02:	1a58      	subs	r0, r3, r1
 8000a04:	45a9      	cmp	r9, r5
 8000a06:	4189      	sbcs	r1, r1
 8000a08:	4249      	negs	r1, r1
 8000a0a:	4688      	mov	r8, r1
 8000a0c:	0001      	movs	r1, r0
 8000a0e:	4640      	mov	r0, r8
 8000a10:	1a09      	subs	r1, r1, r0
 8000a12:	4688      	mov	r8, r1
 8000a14:	0209      	lsls	r1, r1, #8
 8000a16:	d500      	bpl.n	8000a1a <__aeabi_dadd+0x39e>
 8000a18:	e0a6      	b.n	8000b68 <__aeabi_dadd+0x4ec>
 8000a1a:	4641      	mov	r1, r8
 8000a1c:	4329      	orrs	r1, r5
 8000a1e:	d000      	beq.n	8000a22 <__aeabi_dadd+0x3a6>
 8000a20:	e67f      	b.n	8000722 <__aeabi_dadd+0xa6>
 8000a22:	2300      	movs	r3, #0
 8000a24:	2400      	movs	r4, #0
 8000a26:	e751      	b.n	80008cc <__aeabi_dadd+0x250>
 8000a28:	4cc7      	ldr	r4, [pc, #796]	; (8000d48 <__aeabi_dadd+0x6cc>)
 8000a2a:	42a1      	cmp	r1, r4
 8000a2c:	d100      	bne.n	8000a30 <__aeabi_dadd+0x3b4>
 8000a2e:	e0c7      	b.n	8000bc0 <__aeabi_dadd+0x544>
 8000a30:	2480      	movs	r4, #128	; 0x80
 8000a32:	0424      	lsls	r4, r4, #16
 8000a34:	4323      	orrs	r3, r4
 8000a36:	2a38      	cmp	r2, #56	; 0x38
 8000a38:	dc54      	bgt.n	8000ae4 <__aeabi_dadd+0x468>
 8000a3a:	2a1f      	cmp	r2, #31
 8000a3c:	dd00      	ble.n	8000a40 <__aeabi_dadd+0x3c4>
 8000a3e:	e0cc      	b.n	8000bda <__aeabi_dadd+0x55e>
 8000a40:	2420      	movs	r4, #32
 8000a42:	4648      	mov	r0, r9
 8000a44:	1aa4      	subs	r4, r4, r2
 8000a46:	001d      	movs	r5, r3
 8000a48:	464e      	mov	r6, r9
 8000a4a:	40a0      	lsls	r0, r4
 8000a4c:	40d6      	lsrs	r6, r2
 8000a4e:	40a5      	lsls	r5, r4
 8000a50:	0004      	movs	r4, r0
 8000a52:	40d3      	lsrs	r3, r2
 8000a54:	4662      	mov	r2, ip
 8000a56:	4335      	orrs	r5, r6
 8000a58:	1e66      	subs	r6, r4, #1
 8000a5a:	41b4      	sbcs	r4, r6
 8000a5c:	1ad3      	subs	r3, r2, r3
 8000a5e:	469c      	mov	ip, r3
 8000a60:	4325      	orrs	r5, r4
 8000a62:	e044      	b.n	8000aee <__aeabi_dadd+0x472>
 8000a64:	4662      	mov	r2, ip
 8000a66:	433a      	orrs	r2, r7
 8000a68:	0015      	movs	r5, r2
 8000a6a:	1e6f      	subs	r7, r5, #1
 8000a6c:	41bd      	sbcs	r5, r7
 8000a6e:	444d      	add	r5, r9
 8000a70:	454d      	cmp	r5, r9
 8000a72:	4189      	sbcs	r1, r1
 8000a74:	4249      	negs	r1, r1
 8000a76:	4688      	mov	r8, r1
 8000a78:	4498      	add	r8, r3
 8000a7a:	4643      	mov	r3, r8
 8000a7c:	021b      	lsls	r3, r3, #8
 8000a7e:	d400      	bmi.n	8000a82 <__aeabi_dadd+0x406>
 8000a80:	e718      	b.n	80008b4 <__aeabi_dadd+0x238>
 8000a82:	4bb1      	ldr	r3, [pc, #708]	; (8000d48 <__aeabi_dadd+0x6cc>)
 8000a84:	3601      	adds	r6, #1
 8000a86:	429e      	cmp	r6, r3
 8000a88:	d049      	beq.n	8000b1e <__aeabi_dadd+0x4a2>
 8000a8a:	4642      	mov	r2, r8
 8000a8c:	4baf      	ldr	r3, [pc, #700]	; (8000d4c <__aeabi_dadd+0x6d0>)
 8000a8e:	2101      	movs	r1, #1
 8000a90:	401a      	ands	r2, r3
 8000a92:	0013      	movs	r3, r2
 8000a94:	086a      	lsrs	r2, r5, #1
 8000a96:	400d      	ands	r5, r1
 8000a98:	4315      	orrs	r5, r2
 8000a9a:	07d9      	lsls	r1, r3, #31
 8000a9c:	085b      	lsrs	r3, r3, #1
 8000a9e:	4698      	mov	r8, r3
 8000aa0:	430d      	orrs	r5, r1
 8000aa2:	e665      	b.n	8000770 <__aeabi_dadd+0xf4>
 8000aa4:	0018      	movs	r0, r3
 8000aa6:	3e1f      	subs	r6, #31
 8000aa8:	40f0      	lsrs	r0, r6
 8000aaa:	2a20      	cmp	r2, #32
 8000aac:	d003      	beq.n	8000ab6 <__aeabi_dadd+0x43a>
 8000aae:	2140      	movs	r1, #64	; 0x40
 8000ab0:	1a8a      	subs	r2, r1, r2
 8000ab2:	4093      	lsls	r3, r2
 8000ab4:	431d      	orrs	r5, r3
 8000ab6:	1e69      	subs	r1, r5, #1
 8000ab8:	418d      	sbcs	r5, r1
 8000aba:	2300      	movs	r3, #0
 8000abc:	2600      	movs	r6, #0
 8000abe:	4698      	mov	r8, r3
 8000ac0:	4305      	orrs	r5, r0
 8000ac2:	e6f7      	b.n	80008b4 <__aeabi_dadd+0x238>
 8000ac4:	0011      	movs	r1, r2
 8000ac6:	4665      	mov	r5, ip
 8000ac8:	3920      	subs	r1, #32
 8000aca:	40cd      	lsrs	r5, r1
 8000acc:	2a20      	cmp	r2, #32
 8000ace:	d004      	beq.n	8000ada <__aeabi_dadd+0x45e>
 8000ad0:	2040      	movs	r0, #64	; 0x40
 8000ad2:	4661      	mov	r1, ip
 8000ad4:	1a82      	subs	r2, r0, r2
 8000ad6:	4091      	lsls	r1, r2
 8000ad8:	430f      	orrs	r7, r1
 8000ada:	0039      	movs	r1, r7
 8000adc:	1e4f      	subs	r7, r1, #1
 8000ade:	41b9      	sbcs	r1, r7
 8000ae0:	4329      	orrs	r1, r5
 8000ae2:	e60f      	b.n	8000704 <__aeabi_dadd+0x88>
 8000ae4:	464a      	mov	r2, r9
 8000ae6:	4313      	orrs	r3, r2
 8000ae8:	001d      	movs	r5, r3
 8000aea:	1e6b      	subs	r3, r5, #1
 8000aec:	419d      	sbcs	r5, r3
 8000aee:	1b7d      	subs	r5, r7, r5
 8000af0:	42af      	cmp	r7, r5
 8000af2:	419b      	sbcs	r3, r3
 8000af4:	4662      	mov	r2, ip
 8000af6:	425b      	negs	r3, r3
 8000af8:	1ad3      	subs	r3, r2, r3
 8000afa:	4698      	mov	r8, r3
 8000afc:	4654      	mov	r4, sl
 8000afe:	000e      	movs	r6, r1
 8000b00:	e607      	b.n	8000712 <__aeabi_dadd+0x96>
 8000b02:	4648      	mov	r0, r9
 8000b04:	4318      	orrs	r0, r3
 8000b06:	d100      	bne.n	8000b0a <__aeabi_dadd+0x48e>
 8000b08:	e0b3      	b.n	8000c72 <__aeabi_dadd+0x5f6>
 8000b0a:	1e50      	subs	r0, r2, #1
 8000b0c:	2a01      	cmp	r2, #1
 8000b0e:	d100      	bne.n	8000b12 <__aeabi_dadd+0x496>
 8000b10:	e10d      	b.n	8000d2e <__aeabi_dadd+0x6b2>
 8000b12:	4d8d      	ldr	r5, [pc, #564]	; (8000d48 <__aeabi_dadd+0x6cc>)
 8000b14:	42aa      	cmp	r2, r5
 8000b16:	d100      	bne.n	8000b1a <__aeabi_dadd+0x49e>
 8000b18:	e0a5      	b.n	8000c66 <__aeabi_dadd+0x5ea>
 8000b1a:	0002      	movs	r2, r0
 8000b1c:	e710      	b.n	8000940 <__aeabi_dadd+0x2c4>
 8000b1e:	0032      	movs	r2, r6
 8000b20:	2300      	movs	r3, #0
 8000b22:	2100      	movs	r1, #0
 8000b24:	e644      	b.n	80007b0 <__aeabi_dadd+0x134>
 8000b26:	2120      	movs	r1, #32
 8000b28:	0038      	movs	r0, r7
 8000b2a:	1a89      	subs	r1, r1, r2
 8000b2c:	4665      	mov	r5, ip
 8000b2e:	408f      	lsls	r7, r1
 8000b30:	408d      	lsls	r5, r1
 8000b32:	40d0      	lsrs	r0, r2
 8000b34:	1e79      	subs	r1, r7, #1
 8000b36:	418f      	sbcs	r7, r1
 8000b38:	4305      	orrs	r5, r0
 8000b3a:	433d      	orrs	r5, r7
 8000b3c:	4667      	mov	r7, ip
 8000b3e:	40d7      	lsrs	r7, r2
 8000b40:	19db      	adds	r3, r3, r7
 8000b42:	e794      	b.n	8000a6e <__aeabi_dadd+0x3f2>
 8000b44:	4a80      	ldr	r2, [pc, #512]	; (8000d48 <__aeabi_dadd+0x6cc>)
 8000b46:	4290      	cmp	r0, r2
 8000b48:	d100      	bne.n	8000b4c <__aeabi_dadd+0x4d0>
 8000b4a:	e0ec      	b.n	8000d26 <__aeabi_dadd+0x6aa>
 8000b4c:	0039      	movs	r1, r7
 8000b4e:	4449      	add	r1, r9
 8000b50:	4549      	cmp	r1, r9
 8000b52:	4192      	sbcs	r2, r2
 8000b54:	4463      	add	r3, ip
 8000b56:	4252      	negs	r2, r2
 8000b58:	189b      	adds	r3, r3, r2
 8000b5a:	07dd      	lsls	r5, r3, #31
 8000b5c:	0849      	lsrs	r1, r1, #1
 8000b5e:	085b      	lsrs	r3, r3, #1
 8000b60:	4698      	mov	r8, r3
 8000b62:	0006      	movs	r6, r0
 8000b64:	430d      	orrs	r5, r1
 8000b66:	e6a5      	b.n	80008b4 <__aeabi_dadd+0x238>
 8000b68:	464a      	mov	r2, r9
 8000b6a:	1abd      	subs	r5, r7, r2
 8000b6c:	42af      	cmp	r7, r5
 8000b6e:	4189      	sbcs	r1, r1
 8000b70:	4662      	mov	r2, ip
 8000b72:	4249      	negs	r1, r1
 8000b74:	1ad3      	subs	r3, r2, r3
 8000b76:	1a5b      	subs	r3, r3, r1
 8000b78:	4698      	mov	r8, r3
 8000b7a:	4654      	mov	r4, sl
 8000b7c:	e5d1      	b.n	8000722 <__aeabi_dadd+0xa6>
 8000b7e:	076c      	lsls	r4, r5, #29
 8000b80:	08f9      	lsrs	r1, r7, #3
 8000b82:	4321      	orrs	r1, r4
 8000b84:	08eb      	lsrs	r3, r5, #3
 8000b86:	0004      	movs	r4, r0
 8000b88:	e69d      	b.n	80008c6 <__aeabi_dadd+0x24a>
 8000b8a:	464a      	mov	r2, r9
 8000b8c:	431a      	orrs	r2, r3
 8000b8e:	d175      	bne.n	8000c7c <__aeabi_dadd+0x600>
 8000b90:	4661      	mov	r1, ip
 8000b92:	4339      	orrs	r1, r7
 8000b94:	d114      	bne.n	8000bc0 <__aeabi_dadd+0x544>
 8000b96:	2380      	movs	r3, #128	; 0x80
 8000b98:	2400      	movs	r4, #0
 8000b9a:	031b      	lsls	r3, r3, #12
 8000b9c:	e6bc      	b.n	8000918 <__aeabi_dadd+0x29c>
 8000b9e:	464a      	mov	r2, r9
 8000ba0:	1bd5      	subs	r5, r2, r7
 8000ba2:	45a9      	cmp	r9, r5
 8000ba4:	4189      	sbcs	r1, r1
 8000ba6:	4662      	mov	r2, ip
 8000ba8:	4249      	negs	r1, r1
 8000baa:	1a9b      	subs	r3, r3, r2
 8000bac:	1a5b      	subs	r3, r3, r1
 8000bae:	4698      	mov	r8, r3
 8000bb0:	2601      	movs	r6, #1
 8000bb2:	e5ae      	b.n	8000712 <__aeabi_dadd+0x96>
 8000bb4:	464a      	mov	r2, r9
 8000bb6:	08d1      	lsrs	r1, r2, #3
 8000bb8:	075a      	lsls	r2, r3, #29
 8000bba:	4311      	orrs	r1, r2
 8000bbc:	08db      	lsrs	r3, r3, #3
 8000bbe:	e6a7      	b.n	8000910 <__aeabi_dadd+0x294>
 8000bc0:	4663      	mov	r3, ip
 8000bc2:	08f9      	lsrs	r1, r7, #3
 8000bc4:	075a      	lsls	r2, r3, #29
 8000bc6:	4654      	mov	r4, sl
 8000bc8:	4311      	orrs	r1, r2
 8000bca:	08db      	lsrs	r3, r3, #3
 8000bcc:	e6a0      	b.n	8000910 <__aeabi_dadd+0x294>
 8000bce:	464a      	mov	r2, r9
 8000bd0:	4313      	orrs	r3, r2
 8000bd2:	001d      	movs	r5, r3
 8000bd4:	1e6b      	subs	r3, r5, #1
 8000bd6:	419d      	sbcs	r5, r3
 8000bd8:	e6c7      	b.n	800096a <__aeabi_dadd+0x2ee>
 8000bda:	0014      	movs	r4, r2
 8000bdc:	001e      	movs	r6, r3
 8000bde:	3c20      	subs	r4, #32
 8000be0:	40e6      	lsrs	r6, r4
 8000be2:	2a20      	cmp	r2, #32
 8000be4:	d005      	beq.n	8000bf2 <__aeabi_dadd+0x576>
 8000be6:	2440      	movs	r4, #64	; 0x40
 8000be8:	1aa2      	subs	r2, r4, r2
 8000bea:	4093      	lsls	r3, r2
 8000bec:	464a      	mov	r2, r9
 8000bee:	431a      	orrs	r2, r3
 8000bf0:	4691      	mov	r9, r2
 8000bf2:	464d      	mov	r5, r9
 8000bf4:	1e6b      	subs	r3, r5, #1
 8000bf6:	419d      	sbcs	r5, r3
 8000bf8:	4335      	orrs	r5, r6
 8000bfa:	e778      	b.n	8000aee <__aeabi_dadd+0x472>
 8000bfc:	464a      	mov	r2, r9
 8000bfe:	431a      	orrs	r2, r3
 8000c00:	d000      	beq.n	8000c04 <__aeabi_dadd+0x588>
 8000c02:	e66b      	b.n	80008dc <__aeabi_dadd+0x260>
 8000c04:	076b      	lsls	r3, r5, #29
 8000c06:	08f9      	lsrs	r1, r7, #3
 8000c08:	4319      	orrs	r1, r3
 8000c0a:	08eb      	lsrs	r3, r5, #3
 8000c0c:	e680      	b.n	8000910 <__aeabi_dadd+0x294>
 8000c0e:	4661      	mov	r1, ip
 8000c10:	4339      	orrs	r1, r7
 8000c12:	d054      	beq.n	8000cbe <__aeabi_dadd+0x642>
 8000c14:	4663      	mov	r3, ip
 8000c16:	08f9      	lsrs	r1, r7, #3
 8000c18:	075c      	lsls	r4, r3, #29
 8000c1a:	4321      	orrs	r1, r4
 8000c1c:	08db      	lsrs	r3, r3, #3
 8000c1e:	0004      	movs	r4, r0
 8000c20:	e654      	b.n	80008cc <__aeabi_dadd+0x250>
 8000c22:	464a      	mov	r2, r9
 8000c24:	1abd      	subs	r5, r7, r2
 8000c26:	42af      	cmp	r7, r5
 8000c28:	4189      	sbcs	r1, r1
 8000c2a:	4662      	mov	r2, ip
 8000c2c:	4249      	negs	r1, r1
 8000c2e:	1ad3      	subs	r3, r2, r3
 8000c30:	1a5b      	subs	r3, r3, r1
 8000c32:	4698      	mov	r8, r3
 8000c34:	0004      	movs	r4, r0
 8000c36:	2601      	movs	r6, #1
 8000c38:	e56b      	b.n	8000712 <__aeabi_dadd+0x96>
 8000c3a:	464a      	mov	r2, r9
 8000c3c:	1bd5      	subs	r5, r2, r7
 8000c3e:	45a9      	cmp	r9, r5
 8000c40:	4189      	sbcs	r1, r1
 8000c42:	4662      	mov	r2, ip
 8000c44:	4249      	negs	r1, r1
 8000c46:	1a9a      	subs	r2, r3, r2
 8000c48:	1a52      	subs	r2, r2, r1
 8000c4a:	4690      	mov	r8, r2
 8000c4c:	0212      	lsls	r2, r2, #8
 8000c4e:	d532      	bpl.n	8000cb6 <__aeabi_dadd+0x63a>
 8000c50:	464a      	mov	r2, r9
 8000c52:	1abd      	subs	r5, r7, r2
 8000c54:	42af      	cmp	r7, r5
 8000c56:	4189      	sbcs	r1, r1
 8000c58:	4662      	mov	r2, ip
 8000c5a:	4249      	negs	r1, r1
 8000c5c:	1ad3      	subs	r3, r2, r3
 8000c5e:	1a5b      	subs	r3, r3, r1
 8000c60:	4698      	mov	r8, r3
 8000c62:	0004      	movs	r4, r0
 8000c64:	e584      	b.n	8000770 <__aeabi_dadd+0xf4>
 8000c66:	4663      	mov	r3, ip
 8000c68:	08f9      	lsrs	r1, r7, #3
 8000c6a:	075a      	lsls	r2, r3, #29
 8000c6c:	4311      	orrs	r1, r2
 8000c6e:	08db      	lsrs	r3, r3, #3
 8000c70:	e64e      	b.n	8000910 <__aeabi_dadd+0x294>
 8000c72:	08f9      	lsrs	r1, r7, #3
 8000c74:	0768      	lsls	r0, r5, #29
 8000c76:	4301      	orrs	r1, r0
 8000c78:	08eb      	lsrs	r3, r5, #3
 8000c7a:	e624      	b.n	80008c6 <__aeabi_dadd+0x24a>
 8000c7c:	4662      	mov	r2, ip
 8000c7e:	433a      	orrs	r2, r7
 8000c80:	d100      	bne.n	8000c84 <__aeabi_dadd+0x608>
 8000c82:	e698      	b.n	80009b6 <__aeabi_dadd+0x33a>
 8000c84:	464a      	mov	r2, r9
 8000c86:	08d1      	lsrs	r1, r2, #3
 8000c88:	075a      	lsls	r2, r3, #29
 8000c8a:	4311      	orrs	r1, r2
 8000c8c:	08da      	lsrs	r2, r3, #3
 8000c8e:	2380      	movs	r3, #128	; 0x80
 8000c90:	031b      	lsls	r3, r3, #12
 8000c92:	421a      	tst	r2, r3
 8000c94:	d008      	beq.n	8000ca8 <__aeabi_dadd+0x62c>
 8000c96:	4660      	mov	r0, ip
 8000c98:	08c5      	lsrs	r5, r0, #3
 8000c9a:	421d      	tst	r5, r3
 8000c9c:	d104      	bne.n	8000ca8 <__aeabi_dadd+0x62c>
 8000c9e:	4654      	mov	r4, sl
 8000ca0:	002a      	movs	r2, r5
 8000ca2:	08f9      	lsrs	r1, r7, #3
 8000ca4:	0743      	lsls	r3, r0, #29
 8000ca6:	4319      	orrs	r1, r3
 8000ca8:	0f4b      	lsrs	r3, r1, #29
 8000caa:	00c9      	lsls	r1, r1, #3
 8000cac:	075b      	lsls	r3, r3, #29
 8000cae:	08c9      	lsrs	r1, r1, #3
 8000cb0:	4319      	orrs	r1, r3
 8000cb2:	0013      	movs	r3, r2
 8000cb4:	e62c      	b.n	8000910 <__aeabi_dadd+0x294>
 8000cb6:	4641      	mov	r1, r8
 8000cb8:	4329      	orrs	r1, r5
 8000cba:	d000      	beq.n	8000cbe <__aeabi_dadd+0x642>
 8000cbc:	e5fa      	b.n	80008b4 <__aeabi_dadd+0x238>
 8000cbe:	2300      	movs	r3, #0
 8000cc0:	000a      	movs	r2, r1
 8000cc2:	2400      	movs	r4, #0
 8000cc4:	e602      	b.n	80008cc <__aeabi_dadd+0x250>
 8000cc6:	076b      	lsls	r3, r5, #29
 8000cc8:	08f9      	lsrs	r1, r7, #3
 8000cca:	4319      	orrs	r1, r3
 8000ccc:	08eb      	lsrs	r3, r5, #3
 8000cce:	e5fd      	b.n	80008cc <__aeabi_dadd+0x250>
 8000cd0:	4663      	mov	r3, ip
 8000cd2:	08f9      	lsrs	r1, r7, #3
 8000cd4:	075b      	lsls	r3, r3, #29
 8000cd6:	4319      	orrs	r1, r3
 8000cd8:	4663      	mov	r3, ip
 8000cda:	0004      	movs	r4, r0
 8000cdc:	08db      	lsrs	r3, r3, #3
 8000cde:	e617      	b.n	8000910 <__aeabi_dadd+0x294>
 8000ce0:	003d      	movs	r5, r7
 8000ce2:	444d      	add	r5, r9
 8000ce4:	4463      	add	r3, ip
 8000ce6:	454d      	cmp	r5, r9
 8000ce8:	4189      	sbcs	r1, r1
 8000cea:	4698      	mov	r8, r3
 8000cec:	4249      	negs	r1, r1
 8000cee:	4488      	add	r8, r1
 8000cf0:	4643      	mov	r3, r8
 8000cf2:	021b      	lsls	r3, r3, #8
 8000cf4:	d400      	bmi.n	8000cf8 <__aeabi_dadd+0x67c>
 8000cf6:	e5dd      	b.n	80008b4 <__aeabi_dadd+0x238>
 8000cf8:	4642      	mov	r2, r8
 8000cfa:	4b14      	ldr	r3, [pc, #80]	; (8000d4c <__aeabi_dadd+0x6d0>)
 8000cfc:	2601      	movs	r6, #1
 8000cfe:	401a      	ands	r2, r3
 8000d00:	4690      	mov	r8, r2
 8000d02:	e5d7      	b.n	80008b4 <__aeabi_dadd+0x238>
 8000d04:	0010      	movs	r0, r2
 8000d06:	001e      	movs	r6, r3
 8000d08:	3820      	subs	r0, #32
 8000d0a:	40c6      	lsrs	r6, r0
 8000d0c:	2a20      	cmp	r2, #32
 8000d0e:	d005      	beq.n	8000d1c <__aeabi_dadd+0x6a0>
 8000d10:	2040      	movs	r0, #64	; 0x40
 8000d12:	1a82      	subs	r2, r0, r2
 8000d14:	4093      	lsls	r3, r2
 8000d16:	464a      	mov	r2, r9
 8000d18:	431a      	orrs	r2, r3
 8000d1a:	4691      	mov	r9, r2
 8000d1c:	464d      	mov	r5, r9
 8000d1e:	1e6b      	subs	r3, r5, #1
 8000d20:	419d      	sbcs	r5, r3
 8000d22:	4335      	orrs	r5, r6
 8000d24:	e621      	b.n	800096a <__aeabi_dadd+0x2ee>
 8000d26:	0002      	movs	r2, r0
 8000d28:	2300      	movs	r3, #0
 8000d2a:	2100      	movs	r1, #0
 8000d2c:	e540      	b.n	80007b0 <__aeabi_dadd+0x134>
 8000d2e:	464a      	mov	r2, r9
 8000d30:	19d5      	adds	r5, r2, r7
 8000d32:	42bd      	cmp	r5, r7
 8000d34:	4189      	sbcs	r1, r1
 8000d36:	4463      	add	r3, ip
 8000d38:	4698      	mov	r8, r3
 8000d3a:	4249      	negs	r1, r1
 8000d3c:	4488      	add	r8, r1
 8000d3e:	e5b3      	b.n	80008a8 <__aeabi_dadd+0x22c>
 8000d40:	2100      	movs	r1, #0
 8000d42:	4a01      	ldr	r2, [pc, #4]	; (8000d48 <__aeabi_dadd+0x6cc>)
 8000d44:	000b      	movs	r3, r1
 8000d46:	e533      	b.n	80007b0 <__aeabi_dadd+0x134>
 8000d48:	000007ff 	.word	0x000007ff
 8000d4c:	ff7fffff 	.word	0xff7fffff

08000d50 <__aeabi_ddiv>:
 8000d50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d52:	4657      	mov	r7, sl
 8000d54:	464e      	mov	r6, r9
 8000d56:	4645      	mov	r5, r8
 8000d58:	46de      	mov	lr, fp
 8000d5a:	b5e0      	push	{r5, r6, r7, lr}
 8000d5c:	4681      	mov	r9, r0
 8000d5e:	0005      	movs	r5, r0
 8000d60:	030c      	lsls	r4, r1, #12
 8000d62:	0048      	lsls	r0, r1, #1
 8000d64:	4692      	mov	sl, r2
 8000d66:	001f      	movs	r7, r3
 8000d68:	b085      	sub	sp, #20
 8000d6a:	0b24      	lsrs	r4, r4, #12
 8000d6c:	0d40      	lsrs	r0, r0, #21
 8000d6e:	0fce      	lsrs	r6, r1, #31
 8000d70:	2800      	cmp	r0, #0
 8000d72:	d059      	beq.n	8000e28 <__aeabi_ddiv+0xd8>
 8000d74:	4b87      	ldr	r3, [pc, #540]	; (8000f94 <__aeabi_ddiv+0x244>)
 8000d76:	4298      	cmp	r0, r3
 8000d78:	d100      	bne.n	8000d7c <__aeabi_ddiv+0x2c>
 8000d7a:	e098      	b.n	8000eae <__aeabi_ddiv+0x15e>
 8000d7c:	0f6b      	lsrs	r3, r5, #29
 8000d7e:	00e4      	lsls	r4, r4, #3
 8000d80:	431c      	orrs	r4, r3
 8000d82:	2380      	movs	r3, #128	; 0x80
 8000d84:	041b      	lsls	r3, r3, #16
 8000d86:	4323      	orrs	r3, r4
 8000d88:	4698      	mov	r8, r3
 8000d8a:	4b83      	ldr	r3, [pc, #524]	; (8000f98 <__aeabi_ddiv+0x248>)
 8000d8c:	00ed      	lsls	r5, r5, #3
 8000d8e:	469b      	mov	fp, r3
 8000d90:	2300      	movs	r3, #0
 8000d92:	4699      	mov	r9, r3
 8000d94:	4483      	add	fp, r0
 8000d96:	9300      	str	r3, [sp, #0]
 8000d98:	033c      	lsls	r4, r7, #12
 8000d9a:	007b      	lsls	r3, r7, #1
 8000d9c:	4650      	mov	r0, sl
 8000d9e:	0b24      	lsrs	r4, r4, #12
 8000da0:	0d5b      	lsrs	r3, r3, #21
 8000da2:	0fff      	lsrs	r7, r7, #31
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	d067      	beq.n	8000e78 <__aeabi_ddiv+0x128>
 8000da8:	4a7a      	ldr	r2, [pc, #488]	; (8000f94 <__aeabi_ddiv+0x244>)
 8000daa:	4293      	cmp	r3, r2
 8000dac:	d018      	beq.n	8000de0 <__aeabi_ddiv+0x90>
 8000dae:	497a      	ldr	r1, [pc, #488]	; (8000f98 <__aeabi_ddiv+0x248>)
 8000db0:	0f42      	lsrs	r2, r0, #29
 8000db2:	468c      	mov	ip, r1
 8000db4:	00e4      	lsls	r4, r4, #3
 8000db6:	4659      	mov	r1, fp
 8000db8:	4314      	orrs	r4, r2
 8000dba:	2280      	movs	r2, #128	; 0x80
 8000dbc:	4463      	add	r3, ip
 8000dbe:	0412      	lsls	r2, r2, #16
 8000dc0:	1acb      	subs	r3, r1, r3
 8000dc2:	4314      	orrs	r4, r2
 8000dc4:	469b      	mov	fp, r3
 8000dc6:	00c2      	lsls	r2, r0, #3
 8000dc8:	2000      	movs	r0, #0
 8000dca:	0033      	movs	r3, r6
 8000dcc:	407b      	eors	r3, r7
 8000dce:	469a      	mov	sl, r3
 8000dd0:	464b      	mov	r3, r9
 8000dd2:	2b0f      	cmp	r3, #15
 8000dd4:	d900      	bls.n	8000dd8 <__aeabi_ddiv+0x88>
 8000dd6:	e0ef      	b.n	8000fb8 <__aeabi_ddiv+0x268>
 8000dd8:	4970      	ldr	r1, [pc, #448]	; (8000f9c <__aeabi_ddiv+0x24c>)
 8000dda:	009b      	lsls	r3, r3, #2
 8000ddc:	58cb      	ldr	r3, [r1, r3]
 8000dde:	469f      	mov	pc, r3
 8000de0:	4b6f      	ldr	r3, [pc, #444]	; (8000fa0 <__aeabi_ddiv+0x250>)
 8000de2:	4652      	mov	r2, sl
 8000de4:	469c      	mov	ip, r3
 8000de6:	4322      	orrs	r2, r4
 8000de8:	44e3      	add	fp, ip
 8000dea:	2a00      	cmp	r2, #0
 8000dec:	d000      	beq.n	8000df0 <__aeabi_ddiv+0xa0>
 8000dee:	e095      	b.n	8000f1c <__aeabi_ddiv+0x1cc>
 8000df0:	4649      	mov	r1, r9
 8000df2:	2302      	movs	r3, #2
 8000df4:	4319      	orrs	r1, r3
 8000df6:	4689      	mov	r9, r1
 8000df8:	2400      	movs	r4, #0
 8000dfa:	2002      	movs	r0, #2
 8000dfc:	e7e5      	b.n	8000dca <__aeabi_ddiv+0x7a>
 8000dfe:	2300      	movs	r3, #0
 8000e00:	2400      	movs	r4, #0
 8000e02:	2500      	movs	r5, #0
 8000e04:	4652      	mov	r2, sl
 8000e06:	051b      	lsls	r3, r3, #20
 8000e08:	4323      	orrs	r3, r4
 8000e0a:	07d2      	lsls	r2, r2, #31
 8000e0c:	4313      	orrs	r3, r2
 8000e0e:	0028      	movs	r0, r5
 8000e10:	0019      	movs	r1, r3
 8000e12:	b005      	add	sp, #20
 8000e14:	bcf0      	pop	{r4, r5, r6, r7}
 8000e16:	46bb      	mov	fp, r7
 8000e18:	46b2      	mov	sl, r6
 8000e1a:	46a9      	mov	r9, r5
 8000e1c:	46a0      	mov	r8, r4
 8000e1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e20:	2400      	movs	r4, #0
 8000e22:	2500      	movs	r5, #0
 8000e24:	4b5b      	ldr	r3, [pc, #364]	; (8000f94 <__aeabi_ddiv+0x244>)
 8000e26:	e7ed      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 8000e28:	464b      	mov	r3, r9
 8000e2a:	4323      	orrs	r3, r4
 8000e2c:	4698      	mov	r8, r3
 8000e2e:	d100      	bne.n	8000e32 <__aeabi_ddiv+0xe2>
 8000e30:	e089      	b.n	8000f46 <__aeabi_ddiv+0x1f6>
 8000e32:	2c00      	cmp	r4, #0
 8000e34:	d100      	bne.n	8000e38 <__aeabi_ddiv+0xe8>
 8000e36:	e1e0      	b.n	80011fa <__aeabi_ddiv+0x4aa>
 8000e38:	0020      	movs	r0, r4
 8000e3a:	f001 fa7f 	bl	800233c <__clzsi2>
 8000e3e:	0001      	movs	r1, r0
 8000e40:	0002      	movs	r2, r0
 8000e42:	390b      	subs	r1, #11
 8000e44:	231d      	movs	r3, #29
 8000e46:	1a5b      	subs	r3, r3, r1
 8000e48:	4649      	mov	r1, r9
 8000e4a:	0010      	movs	r0, r2
 8000e4c:	40d9      	lsrs	r1, r3
 8000e4e:	3808      	subs	r0, #8
 8000e50:	4084      	lsls	r4, r0
 8000e52:	000b      	movs	r3, r1
 8000e54:	464d      	mov	r5, r9
 8000e56:	4323      	orrs	r3, r4
 8000e58:	4698      	mov	r8, r3
 8000e5a:	4085      	lsls	r5, r0
 8000e5c:	4851      	ldr	r0, [pc, #324]	; (8000fa4 <__aeabi_ddiv+0x254>)
 8000e5e:	033c      	lsls	r4, r7, #12
 8000e60:	1a83      	subs	r3, r0, r2
 8000e62:	469b      	mov	fp, r3
 8000e64:	2300      	movs	r3, #0
 8000e66:	4699      	mov	r9, r3
 8000e68:	9300      	str	r3, [sp, #0]
 8000e6a:	007b      	lsls	r3, r7, #1
 8000e6c:	4650      	mov	r0, sl
 8000e6e:	0b24      	lsrs	r4, r4, #12
 8000e70:	0d5b      	lsrs	r3, r3, #21
 8000e72:	0fff      	lsrs	r7, r7, #31
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d197      	bne.n	8000da8 <__aeabi_ddiv+0x58>
 8000e78:	4652      	mov	r2, sl
 8000e7a:	4322      	orrs	r2, r4
 8000e7c:	d055      	beq.n	8000f2a <__aeabi_ddiv+0x1da>
 8000e7e:	2c00      	cmp	r4, #0
 8000e80:	d100      	bne.n	8000e84 <__aeabi_ddiv+0x134>
 8000e82:	e1ca      	b.n	800121a <__aeabi_ddiv+0x4ca>
 8000e84:	0020      	movs	r0, r4
 8000e86:	f001 fa59 	bl	800233c <__clzsi2>
 8000e8a:	0002      	movs	r2, r0
 8000e8c:	3a0b      	subs	r2, #11
 8000e8e:	231d      	movs	r3, #29
 8000e90:	0001      	movs	r1, r0
 8000e92:	1a9b      	subs	r3, r3, r2
 8000e94:	4652      	mov	r2, sl
 8000e96:	3908      	subs	r1, #8
 8000e98:	40da      	lsrs	r2, r3
 8000e9a:	408c      	lsls	r4, r1
 8000e9c:	4314      	orrs	r4, r2
 8000e9e:	4652      	mov	r2, sl
 8000ea0:	408a      	lsls	r2, r1
 8000ea2:	4b41      	ldr	r3, [pc, #260]	; (8000fa8 <__aeabi_ddiv+0x258>)
 8000ea4:	4458      	add	r0, fp
 8000ea6:	469b      	mov	fp, r3
 8000ea8:	4483      	add	fp, r0
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e78d      	b.n	8000dca <__aeabi_ddiv+0x7a>
 8000eae:	464b      	mov	r3, r9
 8000eb0:	4323      	orrs	r3, r4
 8000eb2:	4698      	mov	r8, r3
 8000eb4:	d140      	bne.n	8000f38 <__aeabi_ddiv+0x1e8>
 8000eb6:	2308      	movs	r3, #8
 8000eb8:	4699      	mov	r9, r3
 8000eba:	3b06      	subs	r3, #6
 8000ebc:	2500      	movs	r5, #0
 8000ebe:	4683      	mov	fp, r0
 8000ec0:	9300      	str	r3, [sp, #0]
 8000ec2:	e769      	b.n	8000d98 <__aeabi_ddiv+0x48>
 8000ec4:	46b2      	mov	sl, r6
 8000ec6:	9b00      	ldr	r3, [sp, #0]
 8000ec8:	2b02      	cmp	r3, #2
 8000eca:	d0a9      	beq.n	8000e20 <__aeabi_ddiv+0xd0>
 8000ecc:	2b03      	cmp	r3, #3
 8000ece:	d100      	bne.n	8000ed2 <__aeabi_ddiv+0x182>
 8000ed0:	e211      	b.n	80012f6 <__aeabi_ddiv+0x5a6>
 8000ed2:	2b01      	cmp	r3, #1
 8000ed4:	d093      	beq.n	8000dfe <__aeabi_ddiv+0xae>
 8000ed6:	4a35      	ldr	r2, [pc, #212]	; (8000fac <__aeabi_ddiv+0x25c>)
 8000ed8:	445a      	add	r2, fp
 8000eda:	2a00      	cmp	r2, #0
 8000edc:	dc00      	bgt.n	8000ee0 <__aeabi_ddiv+0x190>
 8000ede:	e13c      	b.n	800115a <__aeabi_ddiv+0x40a>
 8000ee0:	076b      	lsls	r3, r5, #29
 8000ee2:	d000      	beq.n	8000ee6 <__aeabi_ddiv+0x196>
 8000ee4:	e1a7      	b.n	8001236 <__aeabi_ddiv+0x4e6>
 8000ee6:	08ed      	lsrs	r5, r5, #3
 8000ee8:	4643      	mov	r3, r8
 8000eea:	01db      	lsls	r3, r3, #7
 8000eec:	d506      	bpl.n	8000efc <__aeabi_ddiv+0x1ac>
 8000eee:	4642      	mov	r2, r8
 8000ef0:	4b2f      	ldr	r3, [pc, #188]	; (8000fb0 <__aeabi_ddiv+0x260>)
 8000ef2:	401a      	ands	r2, r3
 8000ef4:	4690      	mov	r8, r2
 8000ef6:	2280      	movs	r2, #128	; 0x80
 8000ef8:	00d2      	lsls	r2, r2, #3
 8000efa:	445a      	add	r2, fp
 8000efc:	4b2d      	ldr	r3, [pc, #180]	; (8000fb4 <__aeabi_ddiv+0x264>)
 8000efe:	429a      	cmp	r2, r3
 8000f00:	dc8e      	bgt.n	8000e20 <__aeabi_ddiv+0xd0>
 8000f02:	4643      	mov	r3, r8
 8000f04:	0552      	lsls	r2, r2, #21
 8000f06:	0758      	lsls	r0, r3, #29
 8000f08:	025c      	lsls	r4, r3, #9
 8000f0a:	4305      	orrs	r5, r0
 8000f0c:	0b24      	lsrs	r4, r4, #12
 8000f0e:	0d53      	lsrs	r3, r2, #21
 8000f10:	e778      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 8000f12:	46ba      	mov	sl, r7
 8000f14:	46a0      	mov	r8, r4
 8000f16:	0015      	movs	r5, r2
 8000f18:	9000      	str	r0, [sp, #0]
 8000f1a:	e7d4      	b.n	8000ec6 <__aeabi_ddiv+0x176>
 8000f1c:	464a      	mov	r2, r9
 8000f1e:	2303      	movs	r3, #3
 8000f20:	431a      	orrs	r2, r3
 8000f22:	4691      	mov	r9, r2
 8000f24:	2003      	movs	r0, #3
 8000f26:	4652      	mov	r2, sl
 8000f28:	e74f      	b.n	8000dca <__aeabi_ddiv+0x7a>
 8000f2a:	4649      	mov	r1, r9
 8000f2c:	2301      	movs	r3, #1
 8000f2e:	4319      	orrs	r1, r3
 8000f30:	4689      	mov	r9, r1
 8000f32:	2400      	movs	r4, #0
 8000f34:	2001      	movs	r0, #1
 8000f36:	e748      	b.n	8000dca <__aeabi_ddiv+0x7a>
 8000f38:	230c      	movs	r3, #12
 8000f3a:	4699      	mov	r9, r3
 8000f3c:	3b09      	subs	r3, #9
 8000f3e:	46a0      	mov	r8, r4
 8000f40:	4683      	mov	fp, r0
 8000f42:	9300      	str	r3, [sp, #0]
 8000f44:	e728      	b.n	8000d98 <__aeabi_ddiv+0x48>
 8000f46:	2304      	movs	r3, #4
 8000f48:	4699      	mov	r9, r3
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	469b      	mov	fp, r3
 8000f4e:	3301      	adds	r3, #1
 8000f50:	2500      	movs	r5, #0
 8000f52:	9300      	str	r3, [sp, #0]
 8000f54:	e720      	b.n	8000d98 <__aeabi_ddiv+0x48>
 8000f56:	2300      	movs	r3, #0
 8000f58:	2480      	movs	r4, #128	; 0x80
 8000f5a:	469a      	mov	sl, r3
 8000f5c:	2500      	movs	r5, #0
 8000f5e:	4b0d      	ldr	r3, [pc, #52]	; (8000f94 <__aeabi_ddiv+0x244>)
 8000f60:	0324      	lsls	r4, r4, #12
 8000f62:	e74f      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 8000f64:	2380      	movs	r3, #128	; 0x80
 8000f66:	4641      	mov	r1, r8
 8000f68:	031b      	lsls	r3, r3, #12
 8000f6a:	4219      	tst	r1, r3
 8000f6c:	d008      	beq.n	8000f80 <__aeabi_ddiv+0x230>
 8000f6e:	421c      	tst	r4, r3
 8000f70:	d106      	bne.n	8000f80 <__aeabi_ddiv+0x230>
 8000f72:	431c      	orrs	r4, r3
 8000f74:	0324      	lsls	r4, r4, #12
 8000f76:	46ba      	mov	sl, r7
 8000f78:	0015      	movs	r5, r2
 8000f7a:	4b06      	ldr	r3, [pc, #24]	; (8000f94 <__aeabi_ddiv+0x244>)
 8000f7c:	0b24      	lsrs	r4, r4, #12
 8000f7e:	e741      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 8000f80:	2480      	movs	r4, #128	; 0x80
 8000f82:	4643      	mov	r3, r8
 8000f84:	0324      	lsls	r4, r4, #12
 8000f86:	431c      	orrs	r4, r3
 8000f88:	0324      	lsls	r4, r4, #12
 8000f8a:	46b2      	mov	sl, r6
 8000f8c:	4b01      	ldr	r3, [pc, #4]	; (8000f94 <__aeabi_ddiv+0x244>)
 8000f8e:	0b24      	lsrs	r4, r4, #12
 8000f90:	e738      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 8000f92:	46c0      	nop			; (mov r8, r8)
 8000f94:	000007ff 	.word	0x000007ff
 8000f98:	fffffc01 	.word	0xfffffc01
 8000f9c:	08007264 	.word	0x08007264
 8000fa0:	fffff801 	.word	0xfffff801
 8000fa4:	fffffc0d 	.word	0xfffffc0d
 8000fa8:	000003f3 	.word	0x000003f3
 8000fac:	000003ff 	.word	0x000003ff
 8000fb0:	feffffff 	.word	0xfeffffff
 8000fb4:	000007fe 	.word	0x000007fe
 8000fb8:	4544      	cmp	r4, r8
 8000fba:	d200      	bcs.n	8000fbe <__aeabi_ddiv+0x26e>
 8000fbc:	e116      	b.n	80011ec <__aeabi_ddiv+0x49c>
 8000fbe:	d100      	bne.n	8000fc2 <__aeabi_ddiv+0x272>
 8000fc0:	e111      	b.n	80011e6 <__aeabi_ddiv+0x496>
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	425b      	negs	r3, r3
 8000fc6:	469c      	mov	ip, r3
 8000fc8:	002e      	movs	r6, r5
 8000fca:	4640      	mov	r0, r8
 8000fcc:	2500      	movs	r5, #0
 8000fce:	44e3      	add	fp, ip
 8000fd0:	0223      	lsls	r3, r4, #8
 8000fd2:	0e14      	lsrs	r4, r2, #24
 8000fd4:	431c      	orrs	r4, r3
 8000fd6:	0c1b      	lsrs	r3, r3, #16
 8000fd8:	4699      	mov	r9, r3
 8000fda:	0423      	lsls	r3, r4, #16
 8000fdc:	0c1f      	lsrs	r7, r3, #16
 8000fde:	0212      	lsls	r2, r2, #8
 8000fe0:	4649      	mov	r1, r9
 8000fe2:	9200      	str	r2, [sp, #0]
 8000fe4:	9701      	str	r7, [sp, #4]
 8000fe6:	f7ff f92f 	bl	8000248 <__aeabi_uidivmod>
 8000fea:	0002      	movs	r2, r0
 8000fec:	437a      	muls	r2, r7
 8000fee:	040b      	lsls	r3, r1, #16
 8000ff0:	0c31      	lsrs	r1, r6, #16
 8000ff2:	4680      	mov	r8, r0
 8000ff4:	4319      	orrs	r1, r3
 8000ff6:	428a      	cmp	r2, r1
 8000ff8:	d90b      	bls.n	8001012 <__aeabi_ddiv+0x2c2>
 8000ffa:	2301      	movs	r3, #1
 8000ffc:	425b      	negs	r3, r3
 8000ffe:	469c      	mov	ip, r3
 8001000:	1909      	adds	r1, r1, r4
 8001002:	44e0      	add	r8, ip
 8001004:	428c      	cmp	r4, r1
 8001006:	d804      	bhi.n	8001012 <__aeabi_ddiv+0x2c2>
 8001008:	428a      	cmp	r2, r1
 800100a:	d902      	bls.n	8001012 <__aeabi_ddiv+0x2c2>
 800100c:	1e83      	subs	r3, r0, #2
 800100e:	4698      	mov	r8, r3
 8001010:	1909      	adds	r1, r1, r4
 8001012:	1a88      	subs	r0, r1, r2
 8001014:	4649      	mov	r1, r9
 8001016:	f7ff f917 	bl	8000248 <__aeabi_uidivmod>
 800101a:	0409      	lsls	r1, r1, #16
 800101c:	468c      	mov	ip, r1
 800101e:	0431      	lsls	r1, r6, #16
 8001020:	4666      	mov	r6, ip
 8001022:	9a01      	ldr	r2, [sp, #4]
 8001024:	0c09      	lsrs	r1, r1, #16
 8001026:	4342      	muls	r2, r0
 8001028:	0003      	movs	r3, r0
 800102a:	4331      	orrs	r1, r6
 800102c:	428a      	cmp	r2, r1
 800102e:	d904      	bls.n	800103a <__aeabi_ddiv+0x2ea>
 8001030:	1909      	adds	r1, r1, r4
 8001032:	3b01      	subs	r3, #1
 8001034:	428c      	cmp	r4, r1
 8001036:	d800      	bhi.n	800103a <__aeabi_ddiv+0x2ea>
 8001038:	e111      	b.n	800125e <__aeabi_ddiv+0x50e>
 800103a:	1a89      	subs	r1, r1, r2
 800103c:	4642      	mov	r2, r8
 800103e:	9e00      	ldr	r6, [sp, #0]
 8001040:	0412      	lsls	r2, r2, #16
 8001042:	431a      	orrs	r2, r3
 8001044:	0c33      	lsrs	r3, r6, #16
 8001046:	001f      	movs	r7, r3
 8001048:	0c10      	lsrs	r0, r2, #16
 800104a:	4690      	mov	r8, r2
 800104c:	9302      	str	r3, [sp, #8]
 800104e:	0413      	lsls	r3, r2, #16
 8001050:	0432      	lsls	r2, r6, #16
 8001052:	0c16      	lsrs	r6, r2, #16
 8001054:	0032      	movs	r2, r6
 8001056:	0c1b      	lsrs	r3, r3, #16
 8001058:	435a      	muls	r2, r3
 800105a:	9603      	str	r6, [sp, #12]
 800105c:	437b      	muls	r3, r7
 800105e:	4346      	muls	r6, r0
 8001060:	4378      	muls	r0, r7
 8001062:	0c17      	lsrs	r7, r2, #16
 8001064:	46bc      	mov	ip, r7
 8001066:	199b      	adds	r3, r3, r6
 8001068:	4463      	add	r3, ip
 800106a:	429e      	cmp	r6, r3
 800106c:	d903      	bls.n	8001076 <__aeabi_ddiv+0x326>
 800106e:	2680      	movs	r6, #128	; 0x80
 8001070:	0276      	lsls	r6, r6, #9
 8001072:	46b4      	mov	ip, r6
 8001074:	4460      	add	r0, ip
 8001076:	0c1e      	lsrs	r6, r3, #16
 8001078:	1830      	adds	r0, r6, r0
 800107a:	0416      	lsls	r6, r2, #16
 800107c:	041b      	lsls	r3, r3, #16
 800107e:	0c36      	lsrs	r6, r6, #16
 8001080:	199e      	adds	r6, r3, r6
 8001082:	4281      	cmp	r1, r0
 8001084:	d200      	bcs.n	8001088 <__aeabi_ddiv+0x338>
 8001086:	e09c      	b.n	80011c2 <__aeabi_ddiv+0x472>
 8001088:	d100      	bne.n	800108c <__aeabi_ddiv+0x33c>
 800108a:	e097      	b.n	80011bc <__aeabi_ddiv+0x46c>
 800108c:	1bae      	subs	r6, r5, r6
 800108e:	1a09      	subs	r1, r1, r0
 8001090:	42b5      	cmp	r5, r6
 8001092:	4180      	sbcs	r0, r0
 8001094:	4240      	negs	r0, r0
 8001096:	1a08      	subs	r0, r1, r0
 8001098:	4284      	cmp	r4, r0
 800109a:	d100      	bne.n	800109e <__aeabi_ddiv+0x34e>
 800109c:	e111      	b.n	80012c2 <__aeabi_ddiv+0x572>
 800109e:	4649      	mov	r1, r9
 80010a0:	f7ff f8d2 	bl	8000248 <__aeabi_uidivmod>
 80010a4:	9a01      	ldr	r2, [sp, #4]
 80010a6:	040b      	lsls	r3, r1, #16
 80010a8:	4342      	muls	r2, r0
 80010aa:	0c31      	lsrs	r1, r6, #16
 80010ac:	0005      	movs	r5, r0
 80010ae:	4319      	orrs	r1, r3
 80010b0:	428a      	cmp	r2, r1
 80010b2:	d907      	bls.n	80010c4 <__aeabi_ddiv+0x374>
 80010b4:	1909      	adds	r1, r1, r4
 80010b6:	3d01      	subs	r5, #1
 80010b8:	428c      	cmp	r4, r1
 80010ba:	d803      	bhi.n	80010c4 <__aeabi_ddiv+0x374>
 80010bc:	428a      	cmp	r2, r1
 80010be:	d901      	bls.n	80010c4 <__aeabi_ddiv+0x374>
 80010c0:	1e85      	subs	r5, r0, #2
 80010c2:	1909      	adds	r1, r1, r4
 80010c4:	1a88      	subs	r0, r1, r2
 80010c6:	4649      	mov	r1, r9
 80010c8:	f7ff f8be 	bl	8000248 <__aeabi_uidivmod>
 80010cc:	0409      	lsls	r1, r1, #16
 80010ce:	468c      	mov	ip, r1
 80010d0:	0431      	lsls	r1, r6, #16
 80010d2:	4666      	mov	r6, ip
 80010d4:	9a01      	ldr	r2, [sp, #4]
 80010d6:	0c09      	lsrs	r1, r1, #16
 80010d8:	4342      	muls	r2, r0
 80010da:	0003      	movs	r3, r0
 80010dc:	4331      	orrs	r1, r6
 80010de:	428a      	cmp	r2, r1
 80010e0:	d907      	bls.n	80010f2 <__aeabi_ddiv+0x3a2>
 80010e2:	1909      	adds	r1, r1, r4
 80010e4:	3b01      	subs	r3, #1
 80010e6:	428c      	cmp	r4, r1
 80010e8:	d803      	bhi.n	80010f2 <__aeabi_ddiv+0x3a2>
 80010ea:	428a      	cmp	r2, r1
 80010ec:	d901      	bls.n	80010f2 <__aeabi_ddiv+0x3a2>
 80010ee:	1e83      	subs	r3, r0, #2
 80010f0:	1909      	adds	r1, r1, r4
 80010f2:	9e03      	ldr	r6, [sp, #12]
 80010f4:	1a89      	subs	r1, r1, r2
 80010f6:	0032      	movs	r2, r6
 80010f8:	042d      	lsls	r5, r5, #16
 80010fa:	431d      	orrs	r5, r3
 80010fc:	9f02      	ldr	r7, [sp, #8]
 80010fe:	042b      	lsls	r3, r5, #16
 8001100:	0c1b      	lsrs	r3, r3, #16
 8001102:	435a      	muls	r2, r3
 8001104:	437b      	muls	r3, r7
 8001106:	469c      	mov	ip, r3
 8001108:	0c28      	lsrs	r0, r5, #16
 800110a:	4346      	muls	r6, r0
 800110c:	0c13      	lsrs	r3, r2, #16
 800110e:	44b4      	add	ip, r6
 8001110:	4463      	add	r3, ip
 8001112:	4378      	muls	r0, r7
 8001114:	429e      	cmp	r6, r3
 8001116:	d903      	bls.n	8001120 <__aeabi_ddiv+0x3d0>
 8001118:	2680      	movs	r6, #128	; 0x80
 800111a:	0276      	lsls	r6, r6, #9
 800111c:	46b4      	mov	ip, r6
 800111e:	4460      	add	r0, ip
 8001120:	0c1e      	lsrs	r6, r3, #16
 8001122:	0412      	lsls	r2, r2, #16
 8001124:	041b      	lsls	r3, r3, #16
 8001126:	0c12      	lsrs	r2, r2, #16
 8001128:	1830      	adds	r0, r6, r0
 800112a:	189b      	adds	r3, r3, r2
 800112c:	4281      	cmp	r1, r0
 800112e:	d306      	bcc.n	800113e <__aeabi_ddiv+0x3ee>
 8001130:	d002      	beq.n	8001138 <__aeabi_ddiv+0x3e8>
 8001132:	2301      	movs	r3, #1
 8001134:	431d      	orrs	r5, r3
 8001136:	e6ce      	b.n	8000ed6 <__aeabi_ddiv+0x186>
 8001138:	2b00      	cmp	r3, #0
 800113a:	d100      	bne.n	800113e <__aeabi_ddiv+0x3ee>
 800113c:	e6cb      	b.n	8000ed6 <__aeabi_ddiv+0x186>
 800113e:	1861      	adds	r1, r4, r1
 8001140:	1e6e      	subs	r6, r5, #1
 8001142:	42a1      	cmp	r1, r4
 8001144:	d200      	bcs.n	8001148 <__aeabi_ddiv+0x3f8>
 8001146:	e0a4      	b.n	8001292 <__aeabi_ddiv+0x542>
 8001148:	4281      	cmp	r1, r0
 800114a:	d200      	bcs.n	800114e <__aeabi_ddiv+0x3fe>
 800114c:	e0c9      	b.n	80012e2 <__aeabi_ddiv+0x592>
 800114e:	d100      	bne.n	8001152 <__aeabi_ddiv+0x402>
 8001150:	e0d9      	b.n	8001306 <__aeabi_ddiv+0x5b6>
 8001152:	0035      	movs	r5, r6
 8001154:	e7ed      	b.n	8001132 <__aeabi_ddiv+0x3e2>
 8001156:	2501      	movs	r5, #1
 8001158:	426d      	negs	r5, r5
 800115a:	2101      	movs	r1, #1
 800115c:	1a89      	subs	r1, r1, r2
 800115e:	2938      	cmp	r1, #56	; 0x38
 8001160:	dd00      	ble.n	8001164 <__aeabi_ddiv+0x414>
 8001162:	e64c      	b.n	8000dfe <__aeabi_ddiv+0xae>
 8001164:	291f      	cmp	r1, #31
 8001166:	dc00      	bgt.n	800116a <__aeabi_ddiv+0x41a>
 8001168:	e07f      	b.n	800126a <__aeabi_ddiv+0x51a>
 800116a:	231f      	movs	r3, #31
 800116c:	425b      	negs	r3, r3
 800116e:	1a9a      	subs	r2, r3, r2
 8001170:	4643      	mov	r3, r8
 8001172:	40d3      	lsrs	r3, r2
 8001174:	2920      	cmp	r1, #32
 8001176:	d004      	beq.n	8001182 <__aeabi_ddiv+0x432>
 8001178:	4644      	mov	r4, r8
 800117a:	4a65      	ldr	r2, [pc, #404]	; (8001310 <__aeabi_ddiv+0x5c0>)
 800117c:	445a      	add	r2, fp
 800117e:	4094      	lsls	r4, r2
 8001180:	4325      	orrs	r5, r4
 8001182:	1e6a      	subs	r2, r5, #1
 8001184:	4195      	sbcs	r5, r2
 8001186:	2207      	movs	r2, #7
 8001188:	432b      	orrs	r3, r5
 800118a:	0015      	movs	r5, r2
 800118c:	2400      	movs	r4, #0
 800118e:	401d      	ands	r5, r3
 8001190:	421a      	tst	r2, r3
 8001192:	d100      	bne.n	8001196 <__aeabi_ddiv+0x446>
 8001194:	e0a1      	b.n	80012da <__aeabi_ddiv+0x58a>
 8001196:	220f      	movs	r2, #15
 8001198:	2400      	movs	r4, #0
 800119a:	401a      	ands	r2, r3
 800119c:	2a04      	cmp	r2, #4
 800119e:	d100      	bne.n	80011a2 <__aeabi_ddiv+0x452>
 80011a0:	e098      	b.n	80012d4 <__aeabi_ddiv+0x584>
 80011a2:	1d1a      	adds	r2, r3, #4
 80011a4:	429a      	cmp	r2, r3
 80011a6:	419b      	sbcs	r3, r3
 80011a8:	425b      	negs	r3, r3
 80011aa:	18e4      	adds	r4, r4, r3
 80011ac:	0013      	movs	r3, r2
 80011ae:	0222      	lsls	r2, r4, #8
 80011b0:	d400      	bmi.n	80011b4 <__aeabi_ddiv+0x464>
 80011b2:	e08f      	b.n	80012d4 <__aeabi_ddiv+0x584>
 80011b4:	2301      	movs	r3, #1
 80011b6:	2400      	movs	r4, #0
 80011b8:	2500      	movs	r5, #0
 80011ba:	e623      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 80011bc:	42b5      	cmp	r5, r6
 80011be:	d300      	bcc.n	80011c2 <__aeabi_ddiv+0x472>
 80011c0:	e764      	b.n	800108c <__aeabi_ddiv+0x33c>
 80011c2:	4643      	mov	r3, r8
 80011c4:	1e5a      	subs	r2, r3, #1
 80011c6:	9b00      	ldr	r3, [sp, #0]
 80011c8:	469c      	mov	ip, r3
 80011ca:	4465      	add	r5, ip
 80011cc:	001f      	movs	r7, r3
 80011ce:	429d      	cmp	r5, r3
 80011d0:	419b      	sbcs	r3, r3
 80011d2:	425b      	negs	r3, r3
 80011d4:	191b      	adds	r3, r3, r4
 80011d6:	18c9      	adds	r1, r1, r3
 80011d8:	428c      	cmp	r4, r1
 80011da:	d23a      	bcs.n	8001252 <__aeabi_ddiv+0x502>
 80011dc:	4288      	cmp	r0, r1
 80011de:	d863      	bhi.n	80012a8 <__aeabi_ddiv+0x558>
 80011e0:	d060      	beq.n	80012a4 <__aeabi_ddiv+0x554>
 80011e2:	4690      	mov	r8, r2
 80011e4:	e752      	b.n	800108c <__aeabi_ddiv+0x33c>
 80011e6:	42aa      	cmp	r2, r5
 80011e8:	d900      	bls.n	80011ec <__aeabi_ddiv+0x49c>
 80011ea:	e6ea      	b.n	8000fc2 <__aeabi_ddiv+0x272>
 80011ec:	4643      	mov	r3, r8
 80011ee:	07de      	lsls	r6, r3, #31
 80011f0:	0858      	lsrs	r0, r3, #1
 80011f2:	086b      	lsrs	r3, r5, #1
 80011f4:	431e      	orrs	r6, r3
 80011f6:	07ed      	lsls	r5, r5, #31
 80011f8:	e6ea      	b.n	8000fd0 <__aeabi_ddiv+0x280>
 80011fa:	4648      	mov	r0, r9
 80011fc:	f001 f89e 	bl	800233c <__clzsi2>
 8001200:	0001      	movs	r1, r0
 8001202:	0002      	movs	r2, r0
 8001204:	3115      	adds	r1, #21
 8001206:	3220      	adds	r2, #32
 8001208:	291c      	cmp	r1, #28
 800120a:	dc00      	bgt.n	800120e <__aeabi_ddiv+0x4be>
 800120c:	e61a      	b.n	8000e44 <__aeabi_ddiv+0xf4>
 800120e:	464b      	mov	r3, r9
 8001210:	3808      	subs	r0, #8
 8001212:	4083      	lsls	r3, r0
 8001214:	2500      	movs	r5, #0
 8001216:	4698      	mov	r8, r3
 8001218:	e620      	b.n	8000e5c <__aeabi_ddiv+0x10c>
 800121a:	f001 f88f 	bl	800233c <__clzsi2>
 800121e:	0003      	movs	r3, r0
 8001220:	001a      	movs	r2, r3
 8001222:	3215      	adds	r2, #21
 8001224:	3020      	adds	r0, #32
 8001226:	2a1c      	cmp	r2, #28
 8001228:	dc00      	bgt.n	800122c <__aeabi_ddiv+0x4dc>
 800122a:	e630      	b.n	8000e8e <__aeabi_ddiv+0x13e>
 800122c:	4654      	mov	r4, sl
 800122e:	3b08      	subs	r3, #8
 8001230:	2200      	movs	r2, #0
 8001232:	409c      	lsls	r4, r3
 8001234:	e635      	b.n	8000ea2 <__aeabi_ddiv+0x152>
 8001236:	230f      	movs	r3, #15
 8001238:	402b      	ands	r3, r5
 800123a:	2b04      	cmp	r3, #4
 800123c:	d100      	bne.n	8001240 <__aeabi_ddiv+0x4f0>
 800123e:	e652      	b.n	8000ee6 <__aeabi_ddiv+0x196>
 8001240:	2305      	movs	r3, #5
 8001242:	425b      	negs	r3, r3
 8001244:	42ab      	cmp	r3, r5
 8001246:	419b      	sbcs	r3, r3
 8001248:	3504      	adds	r5, #4
 800124a:	425b      	negs	r3, r3
 800124c:	08ed      	lsrs	r5, r5, #3
 800124e:	4498      	add	r8, r3
 8001250:	e64a      	b.n	8000ee8 <__aeabi_ddiv+0x198>
 8001252:	428c      	cmp	r4, r1
 8001254:	d1c5      	bne.n	80011e2 <__aeabi_ddiv+0x492>
 8001256:	42af      	cmp	r7, r5
 8001258:	d9c0      	bls.n	80011dc <__aeabi_ddiv+0x48c>
 800125a:	4690      	mov	r8, r2
 800125c:	e716      	b.n	800108c <__aeabi_ddiv+0x33c>
 800125e:	428a      	cmp	r2, r1
 8001260:	d800      	bhi.n	8001264 <__aeabi_ddiv+0x514>
 8001262:	e6ea      	b.n	800103a <__aeabi_ddiv+0x2ea>
 8001264:	1e83      	subs	r3, r0, #2
 8001266:	1909      	adds	r1, r1, r4
 8001268:	e6e7      	b.n	800103a <__aeabi_ddiv+0x2ea>
 800126a:	4a2a      	ldr	r2, [pc, #168]	; (8001314 <__aeabi_ddiv+0x5c4>)
 800126c:	0028      	movs	r0, r5
 800126e:	445a      	add	r2, fp
 8001270:	4643      	mov	r3, r8
 8001272:	4095      	lsls	r5, r2
 8001274:	4093      	lsls	r3, r2
 8001276:	40c8      	lsrs	r0, r1
 8001278:	1e6a      	subs	r2, r5, #1
 800127a:	4195      	sbcs	r5, r2
 800127c:	4644      	mov	r4, r8
 800127e:	4303      	orrs	r3, r0
 8001280:	432b      	orrs	r3, r5
 8001282:	40cc      	lsrs	r4, r1
 8001284:	075a      	lsls	r2, r3, #29
 8001286:	d092      	beq.n	80011ae <__aeabi_ddiv+0x45e>
 8001288:	220f      	movs	r2, #15
 800128a:	401a      	ands	r2, r3
 800128c:	2a04      	cmp	r2, #4
 800128e:	d188      	bne.n	80011a2 <__aeabi_ddiv+0x452>
 8001290:	e78d      	b.n	80011ae <__aeabi_ddiv+0x45e>
 8001292:	0035      	movs	r5, r6
 8001294:	4281      	cmp	r1, r0
 8001296:	d000      	beq.n	800129a <__aeabi_ddiv+0x54a>
 8001298:	e74b      	b.n	8001132 <__aeabi_ddiv+0x3e2>
 800129a:	9a00      	ldr	r2, [sp, #0]
 800129c:	4293      	cmp	r3, r2
 800129e:	d000      	beq.n	80012a2 <__aeabi_ddiv+0x552>
 80012a0:	e747      	b.n	8001132 <__aeabi_ddiv+0x3e2>
 80012a2:	e618      	b.n	8000ed6 <__aeabi_ddiv+0x186>
 80012a4:	42ae      	cmp	r6, r5
 80012a6:	d99c      	bls.n	80011e2 <__aeabi_ddiv+0x492>
 80012a8:	2302      	movs	r3, #2
 80012aa:	425b      	negs	r3, r3
 80012ac:	469c      	mov	ip, r3
 80012ae:	9b00      	ldr	r3, [sp, #0]
 80012b0:	44e0      	add	r8, ip
 80012b2:	469c      	mov	ip, r3
 80012b4:	4465      	add	r5, ip
 80012b6:	429d      	cmp	r5, r3
 80012b8:	419b      	sbcs	r3, r3
 80012ba:	425b      	negs	r3, r3
 80012bc:	191b      	adds	r3, r3, r4
 80012be:	18c9      	adds	r1, r1, r3
 80012c0:	e6e4      	b.n	800108c <__aeabi_ddiv+0x33c>
 80012c2:	4a15      	ldr	r2, [pc, #84]	; (8001318 <__aeabi_ddiv+0x5c8>)
 80012c4:	445a      	add	r2, fp
 80012c6:	2a00      	cmp	r2, #0
 80012c8:	dc00      	bgt.n	80012cc <__aeabi_ddiv+0x57c>
 80012ca:	e744      	b.n	8001156 <__aeabi_ddiv+0x406>
 80012cc:	2301      	movs	r3, #1
 80012ce:	2500      	movs	r5, #0
 80012d0:	4498      	add	r8, r3
 80012d2:	e609      	b.n	8000ee8 <__aeabi_ddiv+0x198>
 80012d4:	0765      	lsls	r5, r4, #29
 80012d6:	0264      	lsls	r4, r4, #9
 80012d8:	0b24      	lsrs	r4, r4, #12
 80012da:	08db      	lsrs	r3, r3, #3
 80012dc:	431d      	orrs	r5, r3
 80012de:	2300      	movs	r3, #0
 80012e0:	e590      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 80012e2:	9e00      	ldr	r6, [sp, #0]
 80012e4:	3d02      	subs	r5, #2
 80012e6:	0072      	lsls	r2, r6, #1
 80012e8:	42b2      	cmp	r2, r6
 80012ea:	41bf      	sbcs	r7, r7
 80012ec:	427f      	negs	r7, r7
 80012ee:	193c      	adds	r4, r7, r4
 80012f0:	1909      	adds	r1, r1, r4
 80012f2:	9200      	str	r2, [sp, #0]
 80012f4:	e7ce      	b.n	8001294 <__aeabi_ddiv+0x544>
 80012f6:	2480      	movs	r4, #128	; 0x80
 80012f8:	4643      	mov	r3, r8
 80012fa:	0324      	lsls	r4, r4, #12
 80012fc:	431c      	orrs	r4, r3
 80012fe:	0324      	lsls	r4, r4, #12
 8001300:	4b06      	ldr	r3, [pc, #24]	; (800131c <__aeabi_ddiv+0x5cc>)
 8001302:	0b24      	lsrs	r4, r4, #12
 8001304:	e57e      	b.n	8000e04 <__aeabi_ddiv+0xb4>
 8001306:	9a00      	ldr	r2, [sp, #0]
 8001308:	429a      	cmp	r2, r3
 800130a:	d3ea      	bcc.n	80012e2 <__aeabi_ddiv+0x592>
 800130c:	0035      	movs	r5, r6
 800130e:	e7c4      	b.n	800129a <__aeabi_ddiv+0x54a>
 8001310:	0000043e 	.word	0x0000043e
 8001314:	0000041e 	.word	0x0000041e
 8001318:	000003ff 	.word	0x000003ff
 800131c:	000007ff 	.word	0x000007ff

08001320 <__eqdf2>:
 8001320:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001322:	464f      	mov	r7, r9
 8001324:	4646      	mov	r6, r8
 8001326:	46d6      	mov	lr, sl
 8001328:	4694      	mov	ip, r2
 800132a:	4691      	mov	r9, r2
 800132c:	031a      	lsls	r2, r3, #12
 800132e:	0b12      	lsrs	r2, r2, #12
 8001330:	4d18      	ldr	r5, [pc, #96]	; (8001394 <__eqdf2+0x74>)
 8001332:	b5c0      	push	{r6, r7, lr}
 8001334:	004c      	lsls	r4, r1, #1
 8001336:	030f      	lsls	r7, r1, #12
 8001338:	4692      	mov	sl, r2
 800133a:	005a      	lsls	r2, r3, #1
 800133c:	0006      	movs	r6, r0
 800133e:	4680      	mov	r8, r0
 8001340:	0b3f      	lsrs	r7, r7, #12
 8001342:	2001      	movs	r0, #1
 8001344:	0d64      	lsrs	r4, r4, #21
 8001346:	0fc9      	lsrs	r1, r1, #31
 8001348:	0d52      	lsrs	r2, r2, #21
 800134a:	0fdb      	lsrs	r3, r3, #31
 800134c:	42ac      	cmp	r4, r5
 800134e:	d00a      	beq.n	8001366 <__eqdf2+0x46>
 8001350:	42aa      	cmp	r2, r5
 8001352:	d003      	beq.n	800135c <__eqdf2+0x3c>
 8001354:	4294      	cmp	r4, r2
 8001356:	d101      	bne.n	800135c <__eqdf2+0x3c>
 8001358:	4557      	cmp	r7, sl
 800135a:	d00d      	beq.n	8001378 <__eqdf2+0x58>
 800135c:	bce0      	pop	{r5, r6, r7}
 800135e:	46ba      	mov	sl, r7
 8001360:	46b1      	mov	r9, r6
 8001362:	46a8      	mov	r8, r5
 8001364:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001366:	003d      	movs	r5, r7
 8001368:	4335      	orrs	r5, r6
 800136a:	d1f7      	bne.n	800135c <__eqdf2+0x3c>
 800136c:	42a2      	cmp	r2, r4
 800136e:	d1f5      	bne.n	800135c <__eqdf2+0x3c>
 8001370:	4652      	mov	r2, sl
 8001372:	4665      	mov	r5, ip
 8001374:	432a      	orrs	r2, r5
 8001376:	d1f1      	bne.n	800135c <__eqdf2+0x3c>
 8001378:	2001      	movs	r0, #1
 800137a:	45c8      	cmp	r8, r9
 800137c:	d1ee      	bne.n	800135c <__eqdf2+0x3c>
 800137e:	4299      	cmp	r1, r3
 8001380:	d006      	beq.n	8001390 <__eqdf2+0x70>
 8001382:	2c00      	cmp	r4, #0
 8001384:	d1ea      	bne.n	800135c <__eqdf2+0x3c>
 8001386:	433e      	orrs	r6, r7
 8001388:	0030      	movs	r0, r6
 800138a:	1e46      	subs	r6, r0, #1
 800138c:	41b0      	sbcs	r0, r6
 800138e:	e7e5      	b.n	800135c <__eqdf2+0x3c>
 8001390:	2000      	movs	r0, #0
 8001392:	e7e3      	b.n	800135c <__eqdf2+0x3c>
 8001394:	000007ff 	.word	0x000007ff

08001398 <__gedf2>:
 8001398:	b5f0      	push	{r4, r5, r6, r7, lr}
 800139a:	464e      	mov	r6, r9
 800139c:	4645      	mov	r5, r8
 800139e:	4657      	mov	r7, sl
 80013a0:	46de      	mov	lr, fp
 80013a2:	0004      	movs	r4, r0
 80013a4:	0018      	movs	r0, r3
 80013a6:	b5e0      	push	{r5, r6, r7, lr}
 80013a8:	0016      	movs	r6, r2
 80013aa:	031b      	lsls	r3, r3, #12
 80013ac:	0b1b      	lsrs	r3, r3, #12
 80013ae:	4d32      	ldr	r5, [pc, #200]	; (8001478 <__gedf2+0xe0>)
 80013b0:	030f      	lsls	r7, r1, #12
 80013b2:	004a      	lsls	r2, r1, #1
 80013b4:	4699      	mov	r9, r3
 80013b6:	0043      	lsls	r3, r0, #1
 80013b8:	46a4      	mov	ip, r4
 80013ba:	46b0      	mov	r8, r6
 80013bc:	0b3f      	lsrs	r7, r7, #12
 80013be:	0d52      	lsrs	r2, r2, #21
 80013c0:	0fc9      	lsrs	r1, r1, #31
 80013c2:	0d5b      	lsrs	r3, r3, #21
 80013c4:	0fc0      	lsrs	r0, r0, #31
 80013c6:	42aa      	cmp	r2, r5
 80013c8:	d029      	beq.n	800141e <__gedf2+0x86>
 80013ca:	42ab      	cmp	r3, r5
 80013cc:	d018      	beq.n	8001400 <__gedf2+0x68>
 80013ce:	2a00      	cmp	r2, #0
 80013d0:	d12a      	bne.n	8001428 <__gedf2+0x90>
 80013d2:	433c      	orrs	r4, r7
 80013d4:	46a3      	mov	fp, r4
 80013d6:	4265      	negs	r5, r4
 80013d8:	4165      	adcs	r5, r4
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d102      	bne.n	80013e4 <__gedf2+0x4c>
 80013de:	464c      	mov	r4, r9
 80013e0:	4326      	orrs	r6, r4
 80013e2:	d027      	beq.n	8001434 <__gedf2+0x9c>
 80013e4:	2d00      	cmp	r5, #0
 80013e6:	d115      	bne.n	8001414 <__gedf2+0x7c>
 80013e8:	4281      	cmp	r1, r0
 80013ea:	d028      	beq.n	800143e <__gedf2+0xa6>
 80013ec:	2002      	movs	r0, #2
 80013ee:	3901      	subs	r1, #1
 80013f0:	4008      	ands	r0, r1
 80013f2:	3801      	subs	r0, #1
 80013f4:	bcf0      	pop	{r4, r5, r6, r7}
 80013f6:	46bb      	mov	fp, r7
 80013f8:	46b2      	mov	sl, r6
 80013fa:	46a9      	mov	r9, r5
 80013fc:	46a0      	mov	r8, r4
 80013fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001400:	464d      	mov	r5, r9
 8001402:	432e      	orrs	r6, r5
 8001404:	d12f      	bne.n	8001466 <__gedf2+0xce>
 8001406:	2a00      	cmp	r2, #0
 8001408:	d1ee      	bne.n	80013e8 <__gedf2+0x50>
 800140a:	433c      	orrs	r4, r7
 800140c:	4265      	negs	r5, r4
 800140e:	4165      	adcs	r5, r4
 8001410:	2d00      	cmp	r5, #0
 8001412:	d0e9      	beq.n	80013e8 <__gedf2+0x50>
 8001414:	2800      	cmp	r0, #0
 8001416:	d1ed      	bne.n	80013f4 <__gedf2+0x5c>
 8001418:	2001      	movs	r0, #1
 800141a:	4240      	negs	r0, r0
 800141c:	e7ea      	b.n	80013f4 <__gedf2+0x5c>
 800141e:	003d      	movs	r5, r7
 8001420:	4325      	orrs	r5, r4
 8001422:	d120      	bne.n	8001466 <__gedf2+0xce>
 8001424:	4293      	cmp	r3, r2
 8001426:	d0eb      	beq.n	8001400 <__gedf2+0x68>
 8001428:	2b00      	cmp	r3, #0
 800142a:	d1dd      	bne.n	80013e8 <__gedf2+0x50>
 800142c:	464c      	mov	r4, r9
 800142e:	4326      	orrs	r6, r4
 8001430:	d1da      	bne.n	80013e8 <__gedf2+0x50>
 8001432:	e7db      	b.n	80013ec <__gedf2+0x54>
 8001434:	465b      	mov	r3, fp
 8001436:	2000      	movs	r0, #0
 8001438:	2b00      	cmp	r3, #0
 800143a:	d0db      	beq.n	80013f4 <__gedf2+0x5c>
 800143c:	e7d6      	b.n	80013ec <__gedf2+0x54>
 800143e:	429a      	cmp	r2, r3
 8001440:	dc0a      	bgt.n	8001458 <__gedf2+0xc0>
 8001442:	dbe7      	blt.n	8001414 <__gedf2+0x7c>
 8001444:	454f      	cmp	r7, r9
 8001446:	d8d1      	bhi.n	80013ec <__gedf2+0x54>
 8001448:	d010      	beq.n	800146c <__gedf2+0xd4>
 800144a:	2000      	movs	r0, #0
 800144c:	454f      	cmp	r7, r9
 800144e:	d2d1      	bcs.n	80013f4 <__gedf2+0x5c>
 8001450:	2900      	cmp	r1, #0
 8001452:	d0e1      	beq.n	8001418 <__gedf2+0x80>
 8001454:	0008      	movs	r0, r1
 8001456:	e7cd      	b.n	80013f4 <__gedf2+0x5c>
 8001458:	4243      	negs	r3, r0
 800145a:	4158      	adcs	r0, r3
 800145c:	2302      	movs	r3, #2
 800145e:	4240      	negs	r0, r0
 8001460:	4018      	ands	r0, r3
 8001462:	3801      	subs	r0, #1
 8001464:	e7c6      	b.n	80013f4 <__gedf2+0x5c>
 8001466:	2002      	movs	r0, #2
 8001468:	4240      	negs	r0, r0
 800146a:	e7c3      	b.n	80013f4 <__gedf2+0x5c>
 800146c:	45c4      	cmp	ip, r8
 800146e:	d8bd      	bhi.n	80013ec <__gedf2+0x54>
 8001470:	2000      	movs	r0, #0
 8001472:	45c4      	cmp	ip, r8
 8001474:	d2be      	bcs.n	80013f4 <__gedf2+0x5c>
 8001476:	e7eb      	b.n	8001450 <__gedf2+0xb8>
 8001478:	000007ff 	.word	0x000007ff

0800147c <__ledf2>:
 800147c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800147e:	464e      	mov	r6, r9
 8001480:	4645      	mov	r5, r8
 8001482:	4657      	mov	r7, sl
 8001484:	46de      	mov	lr, fp
 8001486:	0004      	movs	r4, r0
 8001488:	0018      	movs	r0, r3
 800148a:	b5e0      	push	{r5, r6, r7, lr}
 800148c:	0016      	movs	r6, r2
 800148e:	031b      	lsls	r3, r3, #12
 8001490:	0b1b      	lsrs	r3, r3, #12
 8001492:	4d31      	ldr	r5, [pc, #196]	; (8001558 <__ledf2+0xdc>)
 8001494:	030f      	lsls	r7, r1, #12
 8001496:	004a      	lsls	r2, r1, #1
 8001498:	4699      	mov	r9, r3
 800149a:	0043      	lsls	r3, r0, #1
 800149c:	46a4      	mov	ip, r4
 800149e:	46b0      	mov	r8, r6
 80014a0:	0b3f      	lsrs	r7, r7, #12
 80014a2:	0d52      	lsrs	r2, r2, #21
 80014a4:	0fc9      	lsrs	r1, r1, #31
 80014a6:	0d5b      	lsrs	r3, r3, #21
 80014a8:	0fc0      	lsrs	r0, r0, #31
 80014aa:	42aa      	cmp	r2, r5
 80014ac:	d011      	beq.n	80014d2 <__ledf2+0x56>
 80014ae:	42ab      	cmp	r3, r5
 80014b0:	d014      	beq.n	80014dc <__ledf2+0x60>
 80014b2:	2a00      	cmp	r2, #0
 80014b4:	d12f      	bne.n	8001516 <__ledf2+0x9a>
 80014b6:	433c      	orrs	r4, r7
 80014b8:	46a3      	mov	fp, r4
 80014ba:	4265      	negs	r5, r4
 80014bc:	4165      	adcs	r5, r4
 80014be:	2b00      	cmp	r3, #0
 80014c0:	d114      	bne.n	80014ec <__ledf2+0x70>
 80014c2:	464c      	mov	r4, r9
 80014c4:	4326      	orrs	r6, r4
 80014c6:	d111      	bne.n	80014ec <__ledf2+0x70>
 80014c8:	465b      	mov	r3, fp
 80014ca:	2000      	movs	r0, #0
 80014cc:	2b00      	cmp	r3, #0
 80014ce:	d017      	beq.n	8001500 <__ledf2+0x84>
 80014d0:	e010      	b.n	80014f4 <__ledf2+0x78>
 80014d2:	003d      	movs	r5, r7
 80014d4:	4325      	orrs	r5, r4
 80014d6:	d112      	bne.n	80014fe <__ledf2+0x82>
 80014d8:	4293      	cmp	r3, r2
 80014da:	d11c      	bne.n	8001516 <__ledf2+0x9a>
 80014dc:	464d      	mov	r5, r9
 80014de:	432e      	orrs	r6, r5
 80014e0:	d10d      	bne.n	80014fe <__ledf2+0x82>
 80014e2:	2a00      	cmp	r2, #0
 80014e4:	d104      	bne.n	80014f0 <__ledf2+0x74>
 80014e6:	433c      	orrs	r4, r7
 80014e8:	4265      	negs	r5, r4
 80014ea:	4165      	adcs	r5, r4
 80014ec:	2d00      	cmp	r5, #0
 80014ee:	d10d      	bne.n	800150c <__ledf2+0x90>
 80014f0:	4281      	cmp	r1, r0
 80014f2:	d016      	beq.n	8001522 <__ledf2+0xa6>
 80014f4:	2002      	movs	r0, #2
 80014f6:	3901      	subs	r1, #1
 80014f8:	4008      	ands	r0, r1
 80014fa:	3801      	subs	r0, #1
 80014fc:	e000      	b.n	8001500 <__ledf2+0x84>
 80014fe:	2002      	movs	r0, #2
 8001500:	bcf0      	pop	{r4, r5, r6, r7}
 8001502:	46bb      	mov	fp, r7
 8001504:	46b2      	mov	sl, r6
 8001506:	46a9      	mov	r9, r5
 8001508:	46a0      	mov	r8, r4
 800150a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800150c:	2800      	cmp	r0, #0
 800150e:	d1f7      	bne.n	8001500 <__ledf2+0x84>
 8001510:	2001      	movs	r0, #1
 8001512:	4240      	negs	r0, r0
 8001514:	e7f4      	b.n	8001500 <__ledf2+0x84>
 8001516:	2b00      	cmp	r3, #0
 8001518:	d1ea      	bne.n	80014f0 <__ledf2+0x74>
 800151a:	464c      	mov	r4, r9
 800151c:	4326      	orrs	r6, r4
 800151e:	d1e7      	bne.n	80014f0 <__ledf2+0x74>
 8001520:	e7e8      	b.n	80014f4 <__ledf2+0x78>
 8001522:	429a      	cmp	r2, r3
 8001524:	dd06      	ble.n	8001534 <__ledf2+0xb8>
 8001526:	4243      	negs	r3, r0
 8001528:	4158      	adcs	r0, r3
 800152a:	2302      	movs	r3, #2
 800152c:	4240      	negs	r0, r0
 800152e:	4018      	ands	r0, r3
 8001530:	3801      	subs	r0, #1
 8001532:	e7e5      	b.n	8001500 <__ledf2+0x84>
 8001534:	429a      	cmp	r2, r3
 8001536:	dbe9      	blt.n	800150c <__ledf2+0x90>
 8001538:	454f      	cmp	r7, r9
 800153a:	d8db      	bhi.n	80014f4 <__ledf2+0x78>
 800153c:	d006      	beq.n	800154c <__ledf2+0xd0>
 800153e:	2000      	movs	r0, #0
 8001540:	454f      	cmp	r7, r9
 8001542:	d2dd      	bcs.n	8001500 <__ledf2+0x84>
 8001544:	2900      	cmp	r1, #0
 8001546:	d0e3      	beq.n	8001510 <__ledf2+0x94>
 8001548:	0008      	movs	r0, r1
 800154a:	e7d9      	b.n	8001500 <__ledf2+0x84>
 800154c:	45c4      	cmp	ip, r8
 800154e:	d8d1      	bhi.n	80014f4 <__ledf2+0x78>
 8001550:	2000      	movs	r0, #0
 8001552:	45c4      	cmp	ip, r8
 8001554:	d2d4      	bcs.n	8001500 <__ledf2+0x84>
 8001556:	e7f5      	b.n	8001544 <__ledf2+0xc8>
 8001558:	000007ff 	.word	0x000007ff

0800155c <__aeabi_dmul>:
 800155c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800155e:	4657      	mov	r7, sl
 8001560:	464e      	mov	r6, r9
 8001562:	4645      	mov	r5, r8
 8001564:	46de      	mov	lr, fp
 8001566:	b5e0      	push	{r5, r6, r7, lr}
 8001568:	4698      	mov	r8, r3
 800156a:	030c      	lsls	r4, r1, #12
 800156c:	004b      	lsls	r3, r1, #1
 800156e:	0006      	movs	r6, r0
 8001570:	4692      	mov	sl, r2
 8001572:	b087      	sub	sp, #28
 8001574:	0b24      	lsrs	r4, r4, #12
 8001576:	0d5b      	lsrs	r3, r3, #21
 8001578:	0fcf      	lsrs	r7, r1, #31
 800157a:	2b00      	cmp	r3, #0
 800157c:	d06c      	beq.n	8001658 <__aeabi_dmul+0xfc>
 800157e:	4add      	ldr	r2, [pc, #884]	; (80018f4 <__aeabi_dmul+0x398>)
 8001580:	4293      	cmp	r3, r2
 8001582:	d100      	bne.n	8001586 <__aeabi_dmul+0x2a>
 8001584:	e086      	b.n	8001694 <__aeabi_dmul+0x138>
 8001586:	0f42      	lsrs	r2, r0, #29
 8001588:	00e4      	lsls	r4, r4, #3
 800158a:	4314      	orrs	r4, r2
 800158c:	2280      	movs	r2, #128	; 0x80
 800158e:	0412      	lsls	r2, r2, #16
 8001590:	4314      	orrs	r4, r2
 8001592:	4ad9      	ldr	r2, [pc, #868]	; (80018f8 <__aeabi_dmul+0x39c>)
 8001594:	00c5      	lsls	r5, r0, #3
 8001596:	4694      	mov	ip, r2
 8001598:	4463      	add	r3, ip
 800159a:	9300      	str	r3, [sp, #0]
 800159c:	2300      	movs	r3, #0
 800159e:	4699      	mov	r9, r3
 80015a0:	469b      	mov	fp, r3
 80015a2:	4643      	mov	r3, r8
 80015a4:	4642      	mov	r2, r8
 80015a6:	031e      	lsls	r6, r3, #12
 80015a8:	0fd2      	lsrs	r2, r2, #31
 80015aa:	005b      	lsls	r3, r3, #1
 80015ac:	4650      	mov	r0, sl
 80015ae:	4690      	mov	r8, r2
 80015b0:	0b36      	lsrs	r6, r6, #12
 80015b2:	0d5b      	lsrs	r3, r3, #21
 80015b4:	d100      	bne.n	80015b8 <__aeabi_dmul+0x5c>
 80015b6:	e078      	b.n	80016aa <__aeabi_dmul+0x14e>
 80015b8:	4ace      	ldr	r2, [pc, #824]	; (80018f4 <__aeabi_dmul+0x398>)
 80015ba:	4293      	cmp	r3, r2
 80015bc:	d01d      	beq.n	80015fa <__aeabi_dmul+0x9e>
 80015be:	49ce      	ldr	r1, [pc, #824]	; (80018f8 <__aeabi_dmul+0x39c>)
 80015c0:	0f42      	lsrs	r2, r0, #29
 80015c2:	468c      	mov	ip, r1
 80015c4:	9900      	ldr	r1, [sp, #0]
 80015c6:	4463      	add	r3, ip
 80015c8:	00f6      	lsls	r6, r6, #3
 80015ca:	468c      	mov	ip, r1
 80015cc:	4316      	orrs	r6, r2
 80015ce:	2280      	movs	r2, #128	; 0x80
 80015d0:	449c      	add	ip, r3
 80015d2:	0412      	lsls	r2, r2, #16
 80015d4:	4663      	mov	r3, ip
 80015d6:	4316      	orrs	r6, r2
 80015d8:	00c2      	lsls	r2, r0, #3
 80015da:	2000      	movs	r0, #0
 80015dc:	9300      	str	r3, [sp, #0]
 80015de:	9900      	ldr	r1, [sp, #0]
 80015e0:	4643      	mov	r3, r8
 80015e2:	3101      	adds	r1, #1
 80015e4:	468c      	mov	ip, r1
 80015e6:	4649      	mov	r1, r9
 80015e8:	407b      	eors	r3, r7
 80015ea:	9301      	str	r3, [sp, #4]
 80015ec:	290f      	cmp	r1, #15
 80015ee:	d900      	bls.n	80015f2 <__aeabi_dmul+0x96>
 80015f0:	e07e      	b.n	80016f0 <__aeabi_dmul+0x194>
 80015f2:	4bc2      	ldr	r3, [pc, #776]	; (80018fc <__aeabi_dmul+0x3a0>)
 80015f4:	0089      	lsls	r1, r1, #2
 80015f6:	5859      	ldr	r1, [r3, r1]
 80015f8:	468f      	mov	pc, r1
 80015fa:	4652      	mov	r2, sl
 80015fc:	9b00      	ldr	r3, [sp, #0]
 80015fe:	4332      	orrs	r2, r6
 8001600:	d000      	beq.n	8001604 <__aeabi_dmul+0xa8>
 8001602:	e156      	b.n	80018b2 <__aeabi_dmul+0x356>
 8001604:	49bb      	ldr	r1, [pc, #748]	; (80018f4 <__aeabi_dmul+0x398>)
 8001606:	2600      	movs	r6, #0
 8001608:	468c      	mov	ip, r1
 800160a:	4463      	add	r3, ip
 800160c:	4649      	mov	r1, r9
 800160e:	9300      	str	r3, [sp, #0]
 8001610:	2302      	movs	r3, #2
 8001612:	4319      	orrs	r1, r3
 8001614:	4689      	mov	r9, r1
 8001616:	2002      	movs	r0, #2
 8001618:	e7e1      	b.n	80015de <__aeabi_dmul+0x82>
 800161a:	4643      	mov	r3, r8
 800161c:	9301      	str	r3, [sp, #4]
 800161e:	0034      	movs	r4, r6
 8001620:	0015      	movs	r5, r2
 8001622:	4683      	mov	fp, r0
 8001624:	465b      	mov	r3, fp
 8001626:	2b02      	cmp	r3, #2
 8001628:	d05e      	beq.n	80016e8 <__aeabi_dmul+0x18c>
 800162a:	2b03      	cmp	r3, #3
 800162c:	d100      	bne.n	8001630 <__aeabi_dmul+0xd4>
 800162e:	e1f3      	b.n	8001a18 <__aeabi_dmul+0x4bc>
 8001630:	2b01      	cmp	r3, #1
 8001632:	d000      	beq.n	8001636 <__aeabi_dmul+0xda>
 8001634:	e118      	b.n	8001868 <__aeabi_dmul+0x30c>
 8001636:	2200      	movs	r2, #0
 8001638:	2400      	movs	r4, #0
 800163a:	2500      	movs	r5, #0
 800163c:	9b01      	ldr	r3, [sp, #4]
 800163e:	0512      	lsls	r2, r2, #20
 8001640:	4322      	orrs	r2, r4
 8001642:	07db      	lsls	r3, r3, #31
 8001644:	431a      	orrs	r2, r3
 8001646:	0028      	movs	r0, r5
 8001648:	0011      	movs	r1, r2
 800164a:	b007      	add	sp, #28
 800164c:	bcf0      	pop	{r4, r5, r6, r7}
 800164e:	46bb      	mov	fp, r7
 8001650:	46b2      	mov	sl, r6
 8001652:	46a9      	mov	r9, r5
 8001654:	46a0      	mov	r8, r4
 8001656:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001658:	0025      	movs	r5, r4
 800165a:	4305      	orrs	r5, r0
 800165c:	d100      	bne.n	8001660 <__aeabi_dmul+0x104>
 800165e:	e141      	b.n	80018e4 <__aeabi_dmul+0x388>
 8001660:	2c00      	cmp	r4, #0
 8001662:	d100      	bne.n	8001666 <__aeabi_dmul+0x10a>
 8001664:	e1ad      	b.n	80019c2 <__aeabi_dmul+0x466>
 8001666:	0020      	movs	r0, r4
 8001668:	f000 fe68 	bl	800233c <__clzsi2>
 800166c:	0001      	movs	r1, r0
 800166e:	0002      	movs	r2, r0
 8001670:	390b      	subs	r1, #11
 8001672:	231d      	movs	r3, #29
 8001674:	0010      	movs	r0, r2
 8001676:	1a5b      	subs	r3, r3, r1
 8001678:	0031      	movs	r1, r6
 800167a:	0035      	movs	r5, r6
 800167c:	3808      	subs	r0, #8
 800167e:	4084      	lsls	r4, r0
 8001680:	40d9      	lsrs	r1, r3
 8001682:	4085      	lsls	r5, r0
 8001684:	430c      	orrs	r4, r1
 8001686:	489e      	ldr	r0, [pc, #632]	; (8001900 <__aeabi_dmul+0x3a4>)
 8001688:	1a83      	subs	r3, r0, r2
 800168a:	9300      	str	r3, [sp, #0]
 800168c:	2300      	movs	r3, #0
 800168e:	4699      	mov	r9, r3
 8001690:	469b      	mov	fp, r3
 8001692:	e786      	b.n	80015a2 <__aeabi_dmul+0x46>
 8001694:	0005      	movs	r5, r0
 8001696:	4325      	orrs	r5, r4
 8001698:	d000      	beq.n	800169c <__aeabi_dmul+0x140>
 800169a:	e11c      	b.n	80018d6 <__aeabi_dmul+0x37a>
 800169c:	2208      	movs	r2, #8
 800169e:	9300      	str	r3, [sp, #0]
 80016a0:	2302      	movs	r3, #2
 80016a2:	2400      	movs	r4, #0
 80016a4:	4691      	mov	r9, r2
 80016a6:	469b      	mov	fp, r3
 80016a8:	e77b      	b.n	80015a2 <__aeabi_dmul+0x46>
 80016aa:	4652      	mov	r2, sl
 80016ac:	4332      	orrs	r2, r6
 80016ae:	d100      	bne.n	80016b2 <__aeabi_dmul+0x156>
 80016b0:	e10a      	b.n	80018c8 <__aeabi_dmul+0x36c>
 80016b2:	2e00      	cmp	r6, #0
 80016b4:	d100      	bne.n	80016b8 <__aeabi_dmul+0x15c>
 80016b6:	e176      	b.n	80019a6 <__aeabi_dmul+0x44a>
 80016b8:	0030      	movs	r0, r6
 80016ba:	f000 fe3f 	bl	800233c <__clzsi2>
 80016be:	0002      	movs	r2, r0
 80016c0:	3a0b      	subs	r2, #11
 80016c2:	231d      	movs	r3, #29
 80016c4:	0001      	movs	r1, r0
 80016c6:	1a9b      	subs	r3, r3, r2
 80016c8:	4652      	mov	r2, sl
 80016ca:	3908      	subs	r1, #8
 80016cc:	40da      	lsrs	r2, r3
 80016ce:	408e      	lsls	r6, r1
 80016d0:	4316      	orrs	r6, r2
 80016d2:	4652      	mov	r2, sl
 80016d4:	408a      	lsls	r2, r1
 80016d6:	9b00      	ldr	r3, [sp, #0]
 80016d8:	4989      	ldr	r1, [pc, #548]	; (8001900 <__aeabi_dmul+0x3a4>)
 80016da:	1a18      	subs	r0, r3, r0
 80016dc:	0003      	movs	r3, r0
 80016de:	468c      	mov	ip, r1
 80016e0:	4463      	add	r3, ip
 80016e2:	2000      	movs	r0, #0
 80016e4:	9300      	str	r3, [sp, #0]
 80016e6:	e77a      	b.n	80015de <__aeabi_dmul+0x82>
 80016e8:	2400      	movs	r4, #0
 80016ea:	2500      	movs	r5, #0
 80016ec:	4a81      	ldr	r2, [pc, #516]	; (80018f4 <__aeabi_dmul+0x398>)
 80016ee:	e7a5      	b.n	800163c <__aeabi_dmul+0xe0>
 80016f0:	0c2f      	lsrs	r7, r5, #16
 80016f2:	042d      	lsls	r5, r5, #16
 80016f4:	0c2d      	lsrs	r5, r5, #16
 80016f6:	002b      	movs	r3, r5
 80016f8:	0c11      	lsrs	r1, r2, #16
 80016fa:	0412      	lsls	r2, r2, #16
 80016fc:	0c12      	lsrs	r2, r2, #16
 80016fe:	4353      	muls	r3, r2
 8001700:	4698      	mov	r8, r3
 8001702:	0013      	movs	r3, r2
 8001704:	0028      	movs	r0, r5
 8001706:	437b      	muls	r3, r7
 8001708:	4699      	mov	r9, r3
 800170a:	4348      	muls	r0, r1
 800170c:	4448      	add	r0, r9
 800170e:	4683      	mov	fp, r0
 8001710:	4640      	mov	r0, r8
 8001712:	000b      	movs	r3, r1
 8001714:	0c00      	lsrs	r0, r0, #16
 8001716:	4682      	mov	sl, r0
 8001718:	4658      	mov	r0, fp
 800171a:	437b      	muls	r3, r7
 800171c:	4450      	add	r0, sl
 800171e:	9302      	str	r3, [sp, #8]
 8001720:	4581      	cmp	r9, r0
 8001722:	d906      	bls.n	8001732 <__aeabi_dmul+0x1d6>
 8001724:	469a      	mov	sl, r3
 8001726:	2380      	movs	r3, #128	; 0x80
 8001728:	025b      	lsls	r3, r3, #9
 800172a:	4699      	mov	r9, r3
 800172c:	44ca      	add	sl, r9
 800172e:	4653      	mov	r3, sl
 8001730:	9302      	str	r3, [sp, #8]
 8001732:	0c03      	lsrs	r3, r0, #16
 8001734:	469b      	mov	fp, r3
 8001736:	4643      	mov	r3, r8
 8001738:	041b      	lsls	r3, r3, #16
 800173a:	0400      	lsls	r0, r0, #16
 800173c:	0c1b      	lsrs	r3, r3, #16
 800173e:	4698      	mov	r8, r3
 8001740:	0003      	movs	r3, r0
 8001742:	4443      	add	r3, r8
 8001744:	9304      	str	r3, [sp, #16]
 8001746:	0c33      	lsrs	r3, r6, #16
 8001748:	4699      	mov	r9, r3
 800174a:	002b      	movs	r3, r5
 800174c:	0436      	lsls	r6, r6, #16
 800174e:	0c36      	lsrs	r6, r6, #16
 8001750:	4373      	muls	r3, r6
 8001752:	4698      	mov	r8, r3
 8001754:	0033      	movs	r3, r6
 8001756:	437b      	muls	r3, r7
 8001758:	469a      	mov	sl, r3
 800175a:	464b      	mov	r3, r9
 800175c:	435d      	muls	r5, r3
 800175e:	435f      	muls	r7, r3
 8001760:	4643      	mov	r3, r8
 8001762:	4455      	add	r5, sl
 8001764:	0c18      	lsrs	r0, r3, #16
 8001766:	1940      	adds	r0, r0, r5
 8001768:	4582      	cmp	sl, r0
 800176a:	d903      	bls.n	8001774 <__aeabi_dmul+0x218>
 800176c:	2380      	movs	r3, #128	; 0x80
 800176e:	025b      	lsls	r3, r3, #9
 8001770:	469a      	mov	sl, r3
 8001772:	4457      	add	r7, sl
 8001774:	0c05      	lsrs	r5, r0, #16
 8001776:	19eb      	adds	r3, r5, r7
 8001778:	9305      	str	r3, [sp, #20]
 800177a:	4643      	mov	r3, r8
 800177c:	041d      	lsls	r5, r3, #16
 800177e:	0c2d      	lsrs	r5, r5, #16
 8001780:	0400      	lsls	r0, r0, #16
 8001782:	1940      	adds	r0, r0, r5
 8001784:	0c25      	lsrs	r5, r4, #16
 8001786:	0424      	lsls	r4, r4, #16
 8001788:	0c24      	lsrs	r4, r4, #16
 800178a:	0027      	movs	r7, r4
 800178c:	4357      	muls	r7, r2
 800178e:	436a      	muls	r2, r5
 8001790:	4690      	mov	r8, r2
 8001792:	002a      	movs	r2, r5
 8001794:	0c3b      	lsrs	r3, r7, #16
 8001796:	469a      	mov	sl, r3
 8001798:	434a      	muls	r2, r1
 800179a:	4361      	muls	r1, r4
 800179c:	4441      	add	r1, r8
 800179e:	4451      	add	r1, sl
 80017a0:	4483      	add	fp, r0
 80017a2:	4588      	cmp	r8, r1
 80017a4:	d903      	bls.n	80017ae <__aeabi_dmul+0x252>
 80017a6:	2380      	movs	r3, #128	; 0x80
 80017a8:	025b      	lsls	r3, r3, #9
 80017aa:	4698      	mov	r8, r3
 80017ac:	4442      	add	r2, r8
 80017ae:	043f      	lsls	r7, r7, #16
 80017b0:	0c0b      	lsrs	r3, r1, #16
 80017b2:	0c3f      	lsrs	r7, r7, #16
 80017b4:	0409      	lsls	r1, r1, #16
 80017b6:	19c9      	adds	r1, r1, r7
 80017b8:	0027      	movs	r7, r4
 80017ba:	4698      	mov	r8, r3
 80017bc:	464b      	mov	r3, r9
 80017be:	4377      	muls	r7, r6
 80017c0:	435c      	muls	r4, r3
 80017c2:	436e      	muls	r6, r5
 80017c4:	435d      	muls	r5, r3
 80017c6:	0c3b      	lsrs	r3, r7, #16
 80017c8:	4699      	mov	r9, r3
 80017ca:	19a4      	adds	r4, r4, r6
 80017cc:	444c      	add	r4, r9
 80017ce:	4442      	add	r2, r8
 80017d0:	9503      	str	r5, [sp, #12]
 80017d2:	42a6      	cmp	r6, r4
 80017d4:	d904      	bls.n	80017e0 <__aeabi_dmul+0x284>
 80017d6:	2380      	movs	r3, #128	; 0x80
 80017d8:	025b      	lsls	r3, r3, #9
 80017da:	4698      	mov	r8, r3
 80017dc:	4445      	add	r5, r8
 80017de:	9503      	str	r5, [sp, #12]
 80017e0:	9b02      	ldr	r3, [sp, #8]
 80017e2:	043f      	lsls	r7, r7, #16
 80017e4:	445b      	add	r3, fp
 80017e6:	001e      	movs	r6, r3
 80017e8:	4283      	cmp	r3, r0
 80017ea:	4180      	sbcs	r0, r0
 80017ec:	0423      	lsls	r3, r4, #16
 80017ee:	4698      	mov	r8, r3
 80017f0:	9b05      	ldr	r3, [sp, #20]
 80017f2:	0c3f      	lsrs	r7, r7, #16
 80017f4:	4447      	add	r7, r8
 80017f6:	4698      	mov	r8, r3
 80017f8:	1876      	adds	r6, r6, r1
 80017fa:	428e      	cmp	r6, r1
 80017fc:	4189      	sbcs	r1, r1
 80017fe:	4447      	add	r7, r8
 8001800:	4240      	negs	r0, r0
 8001802:	183d      	adds	r5, r7, r0
 8001804:	46a8      	mov	r8, r5
 8001806:	4693      	mov	fp, r2
 8001808:	4249      	negs	r1, r1
 800180a:	468a      	mov	sl, r1
 800180c:	44c3      	add	fp, r8
 800180e:	429f      	cmp	r7, r3
 8001810:	41bf      	sbcs	r7, r7
 8001812:	4580      	cmp	r8, r0
 8001814:	4180      	sbcs	r0, r0
 8001816:	9b03      	ldr	r3, [sp, #12]
 8001818:	44da      	add	sl, fp
 800181a:	4698      	mov	r8, r3
 800181c:	4653      	mov	r3, sl
 800181e:	4240      	negs	r0, r0
 8001820:	427f      	negs	r7, r7
 8001822:	4307      	orrs	r7, r0
 8001824:	0c24      	lsrs	r4, r4, #16
 8001826:	4593      	cmp	fp, r2
 8001828:	4192      	sbcs	r2, r2
 800182a:	458a      	cmp	sl, r1
 800182c:	4189      	sbcs	r1, r1
 800182e:	193f      	adds	r7, r7, r4
 8001830:	0ddc      	lsrs	r4, r3, #23
 8001832:	9b04      	ldr	r3, [sp, #16]
 8001834:	0275      	lsls	r5, r6, #9
 8001836:	431d      	orrs	r5, r3
 8001838:	1e68      	subs	r0, r5, #1
 800183a:	4185      	sbcs	r5, r0
 800183c:	4653      	mov	r3, sl
 800183e:	4252      	negs	r2, r2
 8001840:	4249      	negs	r1, r1
 8001842:	430a      	orrs	r2, r1
 8001844:	18bf      	adds	r7, r7, r2
 8001846:	4447      	add	r7, r8
 8001848:	0df6      	lsrs	r6, r6, #23
 800184a:	027f      	lsls	r7, r7, #9
 800184c:	4335      	orrs	r5, r6
 800184e:	025a      	lsls	r2, r3, #9
 8001850:	433c      	orrs	r4, r7
 8001852:	4315      	orrs	r5, r2
 8001854:	01fb      	lsls	r3, r7, #7
 8001856:	d400      	bmi.n	800185a <__aeabi_dmul+0x2fe>
 8001858:	e0c1      	b.n	80019de <__aeabi_dmul+0x482>
 800185a:	2101      	movs	r1, #1
 800185c:	086a      	lsrs	r2, r5, #1
 800185e:	400d      	ands	r5, r1
 8001860:	4315      	orrs	r5, r2
 8001862:	07e2      	lsls	r2, r4, #31
 8001864:	4315      	orrs	r5, r2
 8001866:	0864      	lsrs	r4, r4, #1
 8001868:	4926      	ldr	r1, [pc, #152]	; (8001904 <__aeabi_dmul+0x3a8>)
 800186a:	4461      	add	r1, ip
 800186c:	2900      	cmp	r1, #0
 800186e:	dd56      	ble.n	800191e <__aeabi_dmul+0x3c2>
 8001870:	076b      	lsls	r3, r5, #29
 8001872:	d009      	beq.n	8001888 <__aeabi_dmul+0x32c>
 8001874:	220f      	movs	r2, #15
 8001876:	402a      	ands	r2, r5
 8001878:	2a04      	cmp	r2, #4
 800187a:	d005      	beq.n	8001888 <__aeabi_dmul+0x32c>
 800187c:	1d2a      	adds	r2, r5, #4
 800187e:	42aa      	cmp	r2, r5
 8001880:	41ad      	sbcs	r5, r5
 8001882:	426d      	negs	r5, r5
 8001884:	1964      	adds	r4, r4, r5
 8001886:	0015      	movs	r5, r2
 8001888:	01e3      	lsls	r3, r4, #7
 800188a:	d504      	bpl.n	8001896 <__aeabi_dmul+0x33a>
 800188c:	2180      	movs	r1, #128	; 0x80
 800188e:	4a1e      	ldr	r2, [pc, #120]	; (8001908 <__aeabi_dmul+0x3ac>)
 8001890:	00c9      	lsls	r1, r1, #3
 8001892:	4014      	ands	r4, r2
 8001894:	4461      	add	r1, ip
 8001896:	4a1d      	ldr	r2, [pc, #116]	; (800190c <__aeabi_dmul+0x3b0>)
 8001898:	4291      	cmp	r1, r2
 800189a:	dd00      	ble.n	800189e <__aeabi_dmul+0x342>
 800189c:	e724      	b.n	80016e8 <__aeabi_dmul+0x18c>
 800189e:	0762      	lsls	r2, r4, #29
 80018a0:	08ed      	lsrs	r5, r5, #3
 80018a2:	0264      	lsls	r4, r4, #9
 80018a4:	0549      	lsls	r1, r1, #21
 80018a6:	4315      	orrs	r5, r2
 80018a8:	0b24      	lsrs	r4, r4, #12
 80018aa:	0d4a      	lsrs	r2, r1, #21
 80018ac:	e6c6      	b.n	800163c <__aeabi_dmul+0xe0>
 80018ae:	9701      	str	r7, [sp, #4]
 80018b0:	e6b8      	b.n	8001624 <__aeabi_dmul+0xc8>
 80018b2:	4a10      	ldr	r2, [pc, #64]	; (80018f4 <__aeabi_dmul+0x398>)
 80018b4:	2003      	movs	r0, #3
 80018b6:	4694      	mov	ip, r2
 80018b8:	4463      	add	r3, ip
 80018ba:	464a      	mov	r2, r9
 80018bc:	9300      	str	r3, [sp, #0]
 80018be:	2303      	movs	r3, #3
 80018c0:	431a      	orrs	r2, r3
 80018c2:	4691      	mov	r9, r2
 80018c4:	4652      	mov	r2, sl
 80018c6:	e68a      	b.n	80015de <__aeabi_dmul+0x82>
 80018c8:	4649      	mov	r1, r9
 80018ca:	2301      	movs	r3, #1
 80018cc:	4319      	orrs	r1, r3
 80018ce:	4689      	mov	r9, r1
 80018d0:	2600      	movs	r6, #0
 80018d2:	2001      	movs	r0, #1
 80018d4:	e683      	b.n	80015de <__aeabi_dmul+0x82>
 80018d6:	220c      	movs	r2, #12
 80018d8:	9300      	str	r3, [sp, #0]
 80018da:	2303      	movs	r3, #3
 80018dc:	0005      	movs	r5, r0
 80018de:	4691      	mov	r9, r2
 80018e0:	469b      	mov	fp, r3
 80018e2:	e65e      	b.n	80015a2 <__aeabi_dmul+0x46>
 80018e4:	2304      	movs	r3, #4
 80018e6:	4699      	mov	r9, r3
 80018e8:	2300      	movs	r3, #0
 80018ea:	9300      	str	r3, [sp, #0]
 80018ec:	3301      	adds	r3, #1
 80018ee:	2400      	movs	r4, #0
 80018f0:	469b      	mov	fp, r3
 80018f2:	e656      	b.n	80015a2 <__aeabi_dmul+0x46>
 80018f4:	000007ff 	.word	0x000007ff
 80018f8:	fffffc01 	.word	0xfffffc01
 80018fc:	080072a4 	.word	0x080072a4
 8001900:	fffffc0d 	.word	0xfffffc0d
 8001904:	000003ff 	.word	0x000003ff
 8001908:	feffffff 	.word	0xfeffffff
 800190c:	000007fe 	.word	0x000007fe
 8001910:	2300      	movs	r3, #0
 8001912:	2480      	movs	r4, #128	; 0x80
 8001914:	2500      	movs	r5, #0
 8001916:	4a44      	ldr	r2, [pc, #272]	; (8001a28 <__aeabi_dmul+0x4cc>)
 8001918:	9301      	str	r3, [sp, #4]
 800191a:	0324      	lsls	r4, r4, #12
 800191c:	e68e      	b.n	800163c <__aeabi_dmul+0xe0>
 800191e:	2001      	movs	r0, #1
 8001920:	1a40      	subs	r0, r0, r1
 8001922:	2838      	cmp	r0, #56	; 0x38
 8001924:	dd00      	ble.n	8001928 <__aeabi_dmul+0x3cc>
 8001926:	e686      	b.n	8001636 <__aeabi_dmul+0xda>
 8001928:	281f      	cmp	r0, #31
 800192a:	dd5b      	ble.n	80019e4 <__aeabi_dmul+0x488>
 800192c:	221f      	movs	r2, #31
 800192e:	0023      	movs	r3, r4
 8001930:	4252      	negs	r2, r2
 8001932:	1a51      	subs	r1, r2, r1
 8001934:	40cb      	lsrs	r3, r1
 8001936:	0019      	movs	r1, r3
 8001938:	2820      	cmp	r0, #32
 800193a:	d003      	beq.n	8001944 <__aeabi_dmul+0x3e8>
 800193c:	4a3b      	ldr	r2, [pc, #236]	; (8001a2c <__aeabi_dmul+0x4d0>)
 800193e:	4462      	add	r2, ip
 8001940:	4094      	lsls	r4, r2
 8001942:	4325      	orrs	r5, r4
 8001944:	1e6a      	subs	r2, r5, #1
 8001946:	4195      	sbcs	r5, r2
 8001948:	002a      	movs	r2, r5
 800194a:	430a      	orrs	r2, r1
 800194c:	2107      	movs	r1, #7
 800194e:	000d      	movs	r5, r1
 8001950:	2400      	movs	r4, #0
 8001952:	4015      	ands	r5, r2
 8001954:	4211      	tst	r1, r2
 8001956:	d05b      	beq.n	8001a10 <__aeabi_dmul+0x4b4>
 8001958:	210f      	movs	r1, #15
 800195a:	2400      	movs	r4, #0
 800195c:	4011      	ands	r1, r2
 800195e:	2904      	cmp	r1, #4
 8001960:	d053      	beq.n	8001a0a <__aeabi_dmul+0x4ae>
 8001962:	1d11      	adds	r1, r2, #4
 8001964:	4291      	cmp	r1, r2
 8001966:	4192      	sbcs	r2, r2
 8001968:	4252      	negs	r2, r2
 800196a:	18a4      	adds	r4, r4, r2
 800196c:	000a      	movs	r2, r1
 800196e:	0223      	lsls	r3, r4, #8
 8001970:	d54b      	bpl.n	8001a0a <__aeabi_dmul+0x4ae>
 8001972:	2201      	movs	r2, #1
 8001974:	2400      	movs	r4, #0
 8001976:	2500      	movs	r5, #0
 8001978:	e660      	b.n	800163c <__aeabi_dmul+0xe0>
 800197a:	2380      	movs	r3, #128	; 0x80
 800197c:	031b      	lsls	r3, r3, #12
 800197e:	421c      	tst	r4, r3
 8001980:	d009      	beq.n	8001996 <__aeabi_dmul+0x43a>
 8001982:	421e      	tst	r6, r3
 8001984:	d107      	bne.n	8001996 <__aeabi_dmul+0x43a>
 8001986:	4333      	orrs	r3, r6
 8001988:	031c      	lsls	r4, r3, #12
 800198a:	4643      	mov	r3, r8
 800198c:	0015      	movs	r5, r2
 800198e:	0b24      	lsrs	r4, r4, #12
 8001990:	4a25      	ldr	r2, [pc, #148]	; (8001a28 <__aeabi_dmul+0x4cc>)
 8001992:	9301      	str	r3, [sp, #4]
 8001994:	e652      	b.n	800163c <__aeabi_dmul+0xe0>
 8001996:	2280      	movs	r2, #128	; 0x80
 8001998:	0312      	lsls	r2, r2, #12
 800199a:	4314      	orrs	r4, r2
 800199c:	0324      	lsls	r4, r4, #12
 800199e:	4a22      	ldr	r2, [pc, #136]	; (8001a28 <__aeabi_dmul+0x4cc>)
 80019a0:	0b24      	lsrs	r4, r4, #12
 80019a2:	9701      	str	r7, [sp, #4]
 80019a4:	e64a      	b.n	800163c <__aeabi_dmul+0xe0>
 80019a6:	f000 fcc9 	bl	800233c <__clzsi2>
 80019aa:	0003      	movs	r3, r0
 80019ac:	001a      	movs	r2, r3
 80019ae:	3215      	adds	r2, #21
 80019b0:	3020      	adds	r0, #32
 80019b2:	2a1c      	cmp	r2, #28
 80019b4:	dc00      	bgt.n	80019b8 <__aeabi_dmul+0x45c>
 80019b6:	e684      	b.n	80016c2 <__aeabi_dmul+0x166>
 80019b8:	4656      	mov	r6, sl
 80019ba:	3b08      	subs	r3, #8
 80019bc:	2200      	movs	r2, #0
 80019be:	409e      	lsls	r6, r3
 80019c0:	e689      	b.n	80016d6 <__aeabi_dmul+0x17a>
 80019c2:	f000 fcbb 	bl	800233c <__clzsi2>
 80019c6:	0001      	movs	r1, r0
 80019c8:	0002      	movs	r2, r0
 80019ca:	3115      	adds	r1, #21
 80019cc:	3220      	adds	r2, #32
 80019ce:	291c      	cmp	r1, #28
 80019d0:	dc00      	bgt.n	80019d4 <__aeabi_dmul+0x478>
 80019d2:	e64e      	b.n	8001672 <__aeabi_dmul+0x116>
 80019d4:	0034      	movs	r4, r6
 80019d6:	3808      	subs	r0, #8
 80019d8:	2500      	movs	r5, #0
 80019da:	4084      	lsls	r4, r0
 80019dc:	e653      	b.n	8001686 <__aeabi_dmul+0x12a>
 80019de:	9b00      	ldr	r3, [sp, #0]
 80019e0:	469c      	mov	ip, r3
 80019e2:	e741      	b.n	8001868 <__aeabi_dmul+0x30c>
 80019e4:	4912      	ldr	r1, [pc, #72]	; (8001a30 <__aeabi_dmul+0x4d4>)
 80019e6:	0022      	movs	r2, r4
 80019e8:	4461      	add	r1, ip
 80019ea:	002e      	movs	r6, r5
 80019ec:	408d      	lsls	r5, r1
 80019ee:	408a      	lsls	r2, r1
 80019f0:	40c6      	lsrs	r6, r0
 80019f2:	1e69      	subs	r1, r5, #1
 80019f4:	418d      	sbcs	r5, r1
 80019f6:	4332      	orrs	r2, r6
 80019f8:	432a      	orrs	r2, r5
 80019fa:	40c4      	lsrs	r4, r0
 80019fc:	0753      	lsls	r3, r2, #29
 80019fe:	d0b6      	beq.n	800196e <__aeabi_dmul+0x412>
 8001a00:	210f      	movs	r1, #15
 8001a02:	4011      	ands	r1, r2
 8001a04:	2904      	cmp	r1, #4
 8001a06:	d1ac      	bne.n	8001962 <__aeabi_dmul+0x406>
 8001a08:	e7b1      	b.n	800196e <__aeabi_dmul+0x412>
 8001a0a:	0765      	lsls	r5, r4, #29
 8001a0c:	0264      	lsls	r4, r4, #9
 8001a0e:	0b24      	lsrs	r4, r4, #12
 8001a10:	08d2      	lsrs	r2, r2, #3
 8001a12:	4315      	orrs	r5, r2
 8001a14:	2200      	movs	r2, #0
 8001a16:	e611      	b.n	800163c <__aeabi_dmul+0xe0>
 8001a18:	2280      	movs	r2, #128	; 0x80
 8001a1a:	0312      	lsls	r2, r2, #12
 8001a1c:	4314      	orrs	r4, r2
 8001a1e:	0324      	lsls	r4, r4, #12
 8001a20:	4a01      	ldr	r2, [pc, #4]	; (8001a28 <__aeabi_dmul+0x4cc>)
 8001a22:	0b24      	lsrs	r4, r4, #12
 8001a24:	e60a      	b.n	800163c <__aeabi_dmul+0xe0>
 8001a26:	46c0      	nop			; (mov r8, r8)
 8001a28:	000007ff 	.word	0x000007ff
 8001a2c:	0000043e 	.word	0x0000043e
 8001a30:	0000041e 	.word	0x0000041e

08001a34 <__aeabi_dsub>:
 8001a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a36:	4657      	mov	r7, sl
 8001a38:	464e      	mov	r6, r9
 8001a3a:	4645      	mov	r5, r8
 8001a3c:	46de      	mov	lr, fp
 8001a3e:	0004      	movs	r4, r0
 8001a40:	b5e0      	push	{r5, r6, r7, lr}
 8001a42:	001f      	movs	r7, r3
 8001a44:	0010      	movs	r0, r2
 8001a46:	030b      	lsls	r3, r1, #12
 8001a48:	0f62      	lsrs	r2, r4, #29
 8001a4a:	004e      	lsls	r6, r1, #1
 8001a4c:	0fcd      	lsrs	r5, r1, #31
 8001a4e:	0a5b      	lsrs	r3, r3, #9
 8001a50:	0339      	lsls	r1, r7, #12
 8001a52:	4313      	orrs	r3, r2
 8001a54:	0a49      	lsrs	r1, r1, #9
 8001a56:	00e2      	lsls	r2, r4, #3
 8001a58:	0f44      	lsrs	r4, r0, #29
 8001a5a:	4321      	orrs	r1, r4
 8001a5c:	4cc2      	ldr	r4, [pc, #776]	; (8001d68 <__aeabi_dsub+0x334>)
 8001a5e:	4691      	mov	r9, r2
 8001a60:	4692      	mov	sl, r2
 8001a62:	00c0      	lsls	r0, r0, #3
 8001a64:	007a      	lsls	r2, r7, #1
 8001a66:	4680      	mov	r8, r0
 8001a68:	0d76      	lsrs	r6, r6, #21
 8001a6a:	0d52      	lsrs	r2, r2, #21
 8001a6c:	0fff      	lsrs	r7, r7, #31
 8001a6e:	42a2      	cmp	r2, r4
 8001a70:	d100      	bne.n	8001a74 <__aeabi_dsub+0x40>
 8001a72:	e0b4      	b.n	8001bde <__aeabi_dsub+0x1aa>
 8001a74:	2401      	movs	r4, #1
 8001a76:	4067      	eors	r7, r4
 8001a78:	46bb      	mov	fp, r7
 8001a7a:	42bd      	cmp	r5, r7
 8001a7c:	d100      	bne.n	8001a80 <__aeabi_dsub+0x4c>
 8001a7e:	e088      	b.n	8001b92 <__aeabi_dsub+0x15e>
 8001a80:	1ab4      	subs	r4, r6, r2
 8001a82:	46a4      	mov	ip, r4
 8001a84:	2c00      	cmp	r4, #0
 8001a86:	dc00      	bgt.n	8001a8a <__aeabi_dsub+0x56>
 8001a88:	e0b2      	b.n	8001bf0 <__aeabi_dsub+0x1bc>
 8001a8a:	2a00      	cmp	r2, #0
 8001a8c:	d100      	bne.n	8001a90 <__aeabi_dsub+0x5c>
 8001a8e:	e0c5      	b.n	8001c1c <__aeabi_dsub+0x1e8>
 8001a90:	4ab5      	ldr	r2, [pc, #724]	; (8001d68 <__aeabi_dsub+0x334>)
 8001a92:	4296      	cmp	r6, r2
 8001a94:	d100      	bne.n	8001a98 <__aeabi_dsub+0x64>
 8001a96:	e28b      	b.n	8001fb0 <__aeabi_dsub+0x57c>
 8001a98:	2280      	movs	r2, #128	; 0x80
 8001a9a:	0412      	lsls	r2, r2, #16
 8001a9c:	4311      	orrs	r1, r2
 8001a9e:	4662      	mov	r2, ip
 8001aa0:	2a38      	cmp	r2, #56	; 0x38
 8001aa2:	dd00      	ble.n	8001aa6 <__aeabi_dsub+0x72>
 8001aa4:	e1a1      	b.n	8001dea <__aeabi_dsub+0x3b6>
 8001aa6:	2a1f      	cmp	r2, #31
 8001aa8:	dd00      	ble.n	8001aac <__aeabi_dsub+0x78>
 8001aaa:	e216      	b.n	8001eda <__aeabi_dsub+0x4a6>
 8001aac:	2720      	movs	r7, #32
 8001aae:	000c      	movs	r4, r1
 8001ab0:	1abf      	subs	r7, r7, r2
 8001ab2:	40bc      	lsls	r4, r7
 8001ab4:	0002      	movs	r2, r0
 8001ab6:	46a0      	mov	r8, r4
 8001ab8:	4664      	mov	r4, ip
 8001aba:	40b8      	lsls	r0, r7
 8001abc:	40e2      	lsrs	r2, r4
 8001abe:	4644      	mov	r4, r8
 8001ac0:	4314      	orrs	r4, r2
 8001ac2:	0002      	movs	r2, r0
 8001ac4:	1e50      	subs	r0, r2, #1
 8001ac6:	4182      	sbcs	r2, r0
 8001ac8:	4660      	mov	r0, ip
 8001aca:	40c1      	lsrs	r1, r0
 8001acc:	4322      	orrs	r2, r4
 8001ace:	1a5b      	subs	r3, r3, r1
 8001ad0:	4649      	mov	r1, r9
 8001ad2:	1a8c      	subs	r4, r1, r2
 8001ad4:	45a1      	cmp	r9, r4
 8001ad6:	4192      	sbcs	r2, r2
 8001ad8:	4252      	negs	r2, r2
 8001ada:	1a9b      	subs	r3, r3, r2
 8001adc:	4698      	mov	r8, r3
 8001ade:	4643      	mov	r3, r8
 8001ae0:	021b      	lsls	r3, r3, #8
 8001ae2:	d400      	bmi.n	8001ae6 <__aeabi_dsub+0xb2>
 8001ae4:	e117      	b.n	8001d16 <__aeabi_dsub+0x2e2>
 8001ae6:	4643      	mov	r3, r8
 8001ae8:	025b      	lsls	r3, r3, #9
 8001aea:	0a5b      	lsrs	r3, r3, #9
 8001aec:	4698      	mov	r8, r3
 8001aee:	4643      	mov	r3, r8
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d100      	bne.n	8001af6 <__aeabi_dsub+0xc2>
 8001af4:	e16c      	b.n	8001dd0 <__aeabi_dsub+0x39c>
 8001af6:	4640      	mov	r0, r8
 8001af8:	f000 fc20 	bl	800233c <__clzsi2>
 8001afc:	0002      	movs	r2, r0
 8001afe:	3a08      	subs	r2, #8
 8001b00:	2120      	movs	r1, #32
 8001b02:	0020      	movs	r0, r4
 8001b04:	4643      	mov	r3, r8
 8001b06:	1a89      	subs	r1, r1, r2
 8001b08:	4093      	lsls	r3, r2
 8001b0a:	40c8      	lsrs	r0, r1
 8001b0c:	4094      	lsls	r4, r2
 8001b0e:	4303      	orrs	r3, r0
 8001b10:	4296      	cmp	r6, r2
 8001b12:	dd00      	ble.n	8001b16 <__aeabi_dsub+0xe2>
 8001b14:	e157      	b.n	8001dc6 <__aeabi_dsub+0x392>
 8001b16:	1b96      	subs	r6, r2, r6
 8001b18:	1c71      	adds	r1, r6, #1
 8001b1a:	291f      	cmp	r1, #31
 8001b1c:	dd00      	ble.n	8001b20 <__aeabi_dsub+0xec>
 8001b1e:	e1cb      	b.n	8001eb8 <__aeabi_dsub+0x484>
 8001b20:	2220      	movs	r2, #32
 8001b22:	0018      	movs	r0, r3
 8001b24:	0026      	movs	r6, r4
 8001b26:	1a52      	subs	r2, r2, r1
 8001b28:	4094      	lsls	r4, r2
 8001b2a:	4090      	lsls	r0, r2
 8001b2c:	40ce      	lsrs	r6, r1
 8001b2e:	40cb      	lsrs	r3, r1
 8001b30:	1e62      	subs	r2, r4, #1
 8001b32:	4194      	sbcs	r4, r2
 8001b34:	4330      	orrs	r0, r6
 8001b36:	4698      	mov	r8, r3
 8001b38:	2600      	movs	r6, #0
 8001b3a:	4304      	orrs	r4, r0
 8001b3c:	0763      	lsls	r3, r4, #29
 8001b3e:	d009      	beq.n	8001b54 <__aeabi_dsub+0x120>
 8001b40:	230f      	movs	r3, #15
 8001b42:	4023      	ands	r3, r4
 8001b44:	2b04      	cmp	r3, #4
 8001b46:	d005      	beq.n	8001b54 <__aeabi_dsub+0x120>
 8001b48:	1d23      	adds	r3, r4, #4
 8001b4a:	42a3      	cmp	r3, r4
 8001b4c:	41a4      	sbcs	r4, r4
 8001b4e:	4264      	negs	r4, r4
 8001b50:	44a0      	add	r8, r4
 8001b52:	001c      	movs	r4, r3
 8001b54:	4643      	mov	r3, r8
 8001b56:	021b      	lsls	r3, r3, #8
 8001b58:	d400      	bmi.n	8001b5c <__aeabi_dsub+0x128>
 8001b5a:	e0df      	b.n	8001d1c <__aeabi_dsub+0x2e8>
 8001b5c:	4b82      	ldr	r3, [pc, #520]	; (8001d68 <__aeabi_dsub+0x334>)
 8001b5e:	3601      	adds	r6, #1
 8001b60:	429e      	cmp	r6, r3
 8001b62:	d100      	bne.n	8001b66 <__aeabi_dsub+0x132>
 8001b64:	e0fb      	b.n	8001d5e <__aeabi_dsub+0x32a>
 8001b66:	4642      	mov	r2, r8
 8001b68:	4b80      	ldr	r3, [pc, #512]	; (8001d6c <__aeabi_dsub+0x338>)
 8001b6a:	08e4      	lsrs	r4, r4, #3
 8001b6c:	401a      	ands	r2, r3
 8001b6e:	0013      	movs	r3, r2
 8001b70:	0571      	lsls	r1, r6, #21
 8001b72:	0752      	lsls	r2, r2, #29
 8001b74:	025b      	lsls	r3, r3, #9
 8001b76:	4322      	orrs	r2, r4
 8001b78:	0b1b      	lsrs	r3, r3, #12
 8001b7a:	0d49      	lsrs	r1, r1, #21
 8001b7c:	0509      	lsls	r1, r1, #20
 8001b7e:	07ed      	lsls	r5, r5, #31
 8001b80:	4319      	orrs	r1, r3
 8001b82:	4329      	orrs	r1, r5
 8001b84:	0010      	movs	r0, r2
 8001b86:	bcf0      	pop	{r4, r5, r6, r7}
 8001b88:	46bb      	mov	fp, r7
 8001b8a:	46b2      	mov	sl, r6
 8001b8c:	46a9      	mov	r9, r5
 8001b8e:	46a0      	mov	r8, r4
 8001b90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b92:	1ab4      	subs	r4, r6, r2
 8001b94:	46a4      	mov	ip, r4
 8001b96:	2c00      	cmp	r4, #0
 8001b98:	dd58      	ble.n	8001c4c <__aeabi_dsub+0x218>
 8001b9a:	2a00      	cmp	r2, #0
 8001b9c:	d100      	bne.n	8001ba0 <__aeabi_dsub+0x16c>
 8001b9e:	e09e      	b.n	8001cde <__aeabi_dsub+0x2aa>
 8001ba0:	4a71      	ldr	r2, [pc, #452]	; (8001d68 <__aeabi_dsub+0x334>)
 8001ba2:	4296      	cmp	r6, r2
 8001ba4:	d100      	bne.n	8001ba8 <__aeabi_dsub+0x174>
 8001ba6:	e13b      	b.n	8001e20 <__aeabi_dsub+0x3ec>
 8001ba8:	2280      	movs	r2, #128	; 0x80
 8001baa:	0412      	lsls	r2, r2, #16
 8001bac:	4311      	orrs	r1, r2
 8001bae:	4662      	mov	r2, ip
 8001bb0:	2a38      	cmp	r2, #56	; 0x38
 8001bb2:	dd00      	ble.n	8001bb6 <__aeabi_dsub+0x182>
 8001bb4:	e0c1      	b.n	8001d3a <__aeabi_dsub+0x306>
 8001bb6:	2a1f      	cmp	r2, #31
 8001bb8:	dc00      	bgt.n	8001bbc <__aeabi_dsub+0x188>
 8001bba:	e1bb      	b.n	8001f34 <__aeabi_dsub+0x500>
 8001bbc:	000c      	movs	r4, r1
 8001bbe:	3a20      	subs	r2, #32
 8001bc0:	40d4      	lsrs	r4, r2
 8001bc2:	0022      	movs	r2, r4
 8001bc4:	4664      	mov	r4, ip
 8001bc6:	2c20      	cmp	r4, #32
 8001bc8:	d004      	beq.n	8001bd4 <__aeabi_dsub+0x1a0>
 8001bca:	2740      	movs	r7, #64	; 0x40
 8001bcc:	1b3f      	subs	r7, r7, r4
 8001bce:	40b9      	lsls	r1, r7
 8001bd0:	4308      	orrs	r0, r1
 8001bd2:	4680      	mov	r8, r0
 8001bd4:	4644      	mov	r4, r8
 8001bd6:	1e61      	subs	r1, r4, #1
 8001bd8:	418c      	sbcs	r4, r1
 8001bda:	4314      	orrs	r4, r2
 8001bdc:	e0b1      	b.n	8001d42 <__aeabi_dsub+0x30e>
 8001bde:	000c      	movs	r4, r1
 8001be0:	4304      	orrs	r4, r0
 8001be2:	d02a      	beq.n	8001c3a <__aeabi_dsub+0x206>
 8001be4:	46bb      	mov	fp, r7
 8001be6:	42bd      	cmp	r5, r7
 8001be8:	d02d      	beq.n	8001c46 <__aeabi_dsub+0x212>
 8001bea:	4c61      	ldr	r4, [pc, #388]	; (8001d70 <__aeabi_dsub+0x33c>)
 8001bec:	46a4      	mov	ip, r4
 8001bee:	44b4      	add	ip, r6
 8001bf0:	4664      	mov	r4, ip
 8001bf2:	2c00      	cmp	r4, #0
 8001bf4:	d05c      	beq.n	8001cb0 <__aeabi_dsub+0x27c>
 8001bf6:	1b94      	subs	r4, r2, r6
 8001bf8:	46a4      	mov	ip, r4
 8001bfa:	2e00      	cmp	r6, #0
 8001bfc:	d000      	beq.n	8001c00 <__aeabi_dsub+0x1cc>
 8001bfe:	e115      	b.n	8001e2c <__aeabi_dsub+0x3f8>
 8001c00:	464d      	mov	r5, r9
 8001c02:	431d      	orrs	r5, r3
 8001c04:	d100      	bne.n	8001c08 <__aeabi_dsub+0x1d4>
 8001c06:	e1c3      	b.n	8001f90 <__aeabi_dsub+0x55c>
 8001c08:	1e65      	subs	r5, r4, #1
 8001c0a:	2c01      	cmp	r4, #1
 8001c0c:	d100      	bne.n	8001c10 <__aeabi_dsub+0x1dc>
 8001c0e:	e20c      	b.n	800202a <__aeabi_dsub+0x5f6>
 8001c10:	4e55      	ldr	r6, [pc, #340]	; (8001d68 <__aeabi_dsub+0x334>)
 8001c12:	42b4      	cmp	r4, r6
 8001c14:	d100      	bne.n	8001c18 <__aeabi_dsub+0x1e4>
 8001c16:	e1f8      	b.n	800200a <__aeabi_dsub+0x5d6>
 8001c18:	46ac      	mov	ip, r5
 8001c1a:	e10e      	b.n	8001e3a <__aeabi_dsub+0x406>
 8001c1c:	000a      	movs	r2, r1
 8001c1e:	4302      	orrs	r2, r0
 8001c20:	d100      	bne.n	8001c24 <__aeabi_dsub+0x1f0>
 8001c22:	e136      	b.n	8001e92 <__aeabi_dsub+0x45e>
 8001c24:	0022      	movs	r2, r4
 8001c26:	3a01      	subs	r2, #1
 8001c28:	2c01      	cmp	r4, #1
 8001c2a:	d100      	bne.n	8001c2e <__aeabi_dsub+0x1fa>
 8001c2c:	e1c6      	b.n	8001fbc <__aeabi_dsub+0x588>
 8001c2e:	4c4e      	ldr	r4, [pc, #312]	; (8001d68 <__aeabi_dsub+0x334>)
 8001c30:	45a4      	cmp	ip, r4
 8001c32:	d100      	bne.n	8001c36 <__aeabi_dsub+0x202>
 8001c34:	e0f4      	b.n	8001e20 <__aeabi_dsub+0x3ec>
 8001c36:	4694      	mov	ip, r2
 8001c38:	e731      	b.n	8001a9e <__aeabi_dsub+0x6a>
 8001c3a:	2401      	movs	r4, #1
 8001c3c:	4067      	eors	r7, r4
 8001c3e:	46bb      	mov	fp, r7
 8001c40:	42bd      	cmp	r5, r7
 8001c42:	d000      	beq.n	8001c46 <__aeabi_dsub+0x212>
 8001c44:	e71c      	b.n	8001a80 <__aeabi_dsub+0x4c>
 8001c46:	4c4a      	ldr	r4, [pc, #296]	; (8001d70 <__aeabi_dsub+0x33c>)
 8001c48:	46a4      	mov	ip, r4
 8001c4a:	44b4      	add	ip, r6
 8001c4c:	4664      	mov	r4, ip
 8001c4e:	2c00      	cmp	r4, #0
 8001c50:	d100      	bne.n	8001c54 <__aeabi_dsub+0x220>
 8001c52:	e0cf      	b.n	8001df4 <__aeabi_dsub+0x3c0>
 8001c54:	1b94      	subs	r4, r2, r6
 8001c56:	46a4      	mov	ip, r4
 8001c58:	2e00      	cmp	r6, #0
 8001c5a:	d100      	bne.n	8001c5e <__aeabi_dsub+0x22a>
 8001c5c:	e15c      	b.n	8001f18 <__aeabi_dsub+0x4e4>
 8001c5e:	4e42      	ldr	r6, [pc, #264]	; (8001d68 <__aeabi_dsub+0x334>)
 8001c60:	42b2      	cmp	r2, r6
 8001c62:	d100      	bne.n	8001c66 <__aeabi_dsub+0x232>
 8001c64:	e1ec      	b.n	8002040 <__aeabi_dsub+0x60c>
 8001c66:	2680      	movs	r6, #128	; 0x80
 8001c68:	0436      	lsls	r6, r6, #16
 8001c6a:	4333      	orrs	r3, r6
 8001c6c:	4664      	mov	r4, ip
 8001c6e:	2c38      	cmp	r4, #56	; 0x38
 8001c70:	dd00      	ble.n	8001c74 <__aeabi_dsub+0x240>
 8001c72:	e1b3      	b.n	8001fdc <__aeabi_dsub+0x5a8>
 8001c74:	2c1f      	cmp	r4, #31
 8001c76:	dd00      	ble.n	8001c7a <__aeabi_dsub+0x246>
 8001c78:	e238      	b.n	80020ec <__aeabi_dsub+0x6b8>
 8001c7a:	2620      	movs	r6, #32
 8001c7c:	1b36      	subs	r6, r6, r4
 8001c7e:	001c      	movs	r4, r3
 8001c80:	40b4      	lsls	r4, r6
 8001c82:	464f      	mov	r7, r9
 8001c84:	46a0      	mov	r8, r4
 8001c86:	4664      	mov	r4, ip
 8001c88:	40e7      	lsrs	r7, r4
 8001c8a:	4644      	mov	r4, r8
 8001c8c:	433c      	orrs	r4, r7
 8001c8e:	464f      	mov	r7, r9
 8001c90:	40b7      	lsls	r7, r6
 8001c92:	003e      	movs	r6, r7
 8001c94:	1e77      	subs	r7, r6, #1
 8001c96:	41be      	sbcs	r6, r7
 8001c98:	4334      	orrs	r4, r6
 8001c9a:	4666      	mov	r6, ip
 8001c9c:	40f3      	lsrs	r3, r6
 8001c9e:	18c9      	adds	r1, r1, r3
 8001ca0:	1824      	adds	r4, r4, r0
 8001ca2:	4284      	cmp	r4, r0
 8001ca4:	419b      	sbcs	r3, r3
 8001ca6:	425b      	negs	r3, r3
 8001ca8:	4698      	mov	r8, r3
 8001caa:	0016      	movs	r6, r2
 8001cac:	4488      	add	r8, r1
 8001cae:	e04e      	b.n	8001d4e <__aeabi_dsub+0x31a>
 8001cb0:	4a30      	ldr	r2, [pc, #192]	; (8001d74 <__aeabi_dsub+0x340>)
 8001cb2:	1c74      	adds	r4, r6, #1
 8001cb4:	4214      	tst	r4, r2
 8001cb6:	d000      	beq.n	8001cba <__aeabi_dsub+0x286>
 8001cb8:	e0d6      	b.n	8001e68 <__aeabi_dsub+0x434>
 8001cba:	464a      	mov	r2, r9
 8001cbc:	431a      	orrs	r2, r3
 8001cbe:	2e00      	cmp	r6, #0
 8001cc0:	d000      	beq.n	8001cc4 <__aeabi_dsub+0x290>
 8001cc2:	e15b      	b.n	8001f7c <__aeabi_dsub+0x548>
 8001cc4:	2a00      	cmp	r2, #0
 8001cc6:	d100      	bne.n	8001cca <__aeabi_dsub+0x296>
 8001cc8:	e1a5      	b.n	8002016 <__aeabi_dsub+0x5e2>
 8001cca:	000a      	movs	r2, r1
 8001ccc:	4302      	orrs	r2, r0
 8001cce:	d000      	beq.n	8001cd2 <__aeabi_dsub+0x29e>
 8001cd0:	e1bb      	b.n	800204a <__aeabi_dsub+0x616>
 8001cd2:	464a      	mov	r2, r9
 8001cd4:	0759      	lsls	r1, r3, #29
 8001cd6:	08d2      	lsrs	r2, r2, #3
 8001cd8:	430a      	orrs	r2, r1
 8001cda:	08db      	lsrs	r3, r3, #3
 8001cdc:	e027      	b.n	8001d2e <__aeabi_dsub+0x2fa>
 8001cde:	000a      	movs	r2, r1
 8001ce0:	4302      	orrs	r2, r0
 8001ce2:	d100      	bne.n	8001ce6 <__aeabi_dsub+0x2b2>
 8001ce4:	e174      	b.n	8001fd0 <__aeabi_dsub+0x59c>
 8001ce6:	0022      	movs	r2, r4
 8001ce8:	3a01      	subs	r2, #1
 8001cea:	2c01      	cmp	r4, #1
 8001cec:	d005      	beq.n	8001cfa <__aeabi_dsub+0x2c6>
 8001cee:	4c1e      	ldr	r4, [pc, #120]	; (8001d68 <__aeabi_dsub+0x334>)
 8001cf0:	45a4      	cmp	ip, r4
 8001cf2:	d100      	bne.n	8001cf6 <__aeabi_dsub+0x2c2>
 8001cf4:	e094      	b.n	8001e20 <__aeabi_dsub+0x3ec>
 8001cf6:	4694      	mov	ip, r2
 8001cf8:	e759      	b.n	8001bae <__aeabi_dsub+0x17a>
 8001cfa:	4448      	add	r0, r9
 8001cfc:	4548      	cmp	r0, r9
 8001cfe:	4192      	sbcs	r2, r2
 8001d00:	185b      	adds	r3, r3, r1
 8001d02:	4698      	mov	r8, r3
 8001d04:	0004      	movs	r4, r0
 8001d06:	4252      	negs	r2, r2
 8001d08:	4490      	add	r8, r2
 8001d0a:	4643      	mov	r3, r8
 8001d0c:	2602      	movs	r6, #2
 8001d0e:	021b      	lsls	r3, r3, #8
 8001d10:	d500      	bpl.n	8001d14 <__aeabi_dsub+0x2e0>
 8001d12:	e0c4      	b.n	8001e9e <__aeabi_dsub+0x46a>
 8001d14:	3e01      	subs	r6, #1
 8001d16:	0763      	lsls	r3, r4, #29
 8001d18:	d000      	beq.n	8001d1c <__aeabi_dsub+0x2e8>
 8001d1a:	e711      	b.n	8001b40 <__aeabi_dsub+0x10c>
 8001d1c:	4643      	mov	r3, r8
 8001d1e:	46b4      	mov	ip, r6
 8001d20:	0759      	lsls	r1, r3, #29
 8001d22:	08e2      	lsrs	r2, r4, #3
 8001d24:	430a      	orrs	r2, r1
 8001d26:	08db      	lsrs	r3, r3, #3
 8001d28:	490f      	ldr	r1, [pc, #60]	; (8001d68 <__aeabi_dsub+0x334>)
 8001d2a:	458c      	cmp	ip, r1
 8001d2c:	d040      	beq.n	8001db0 <__aeabi_dsub+0x37c>
 8001d2e:	4661      	mov	r1, ip
 8001d30:	031b      	lsls	r3, r3, #12
 8001d32:	0549      	lsls	r1, r1, #21
 8001d34:	0b1b      	lsrs	r3, r3, #12
 8001d36:	0d49      	lsrs	r1, r1, #21
 8001d38:	e720      	b.n	8001b7c <__aeabi_dsub+0x148>
 8001d3a:	4301      	orrs	r1, r0
 8001d3c:	000c      	movs	r4, r1
 8001d3e:	1e61      	subs	r1, r4, #1
 8001d40:	418c      	sbcs	r4, r1
 8001d42:	444c      	add	r4, r9
 8001d44:	454c      	cmp	r4, r9
 8001d46:	4192      	sbcs	r2, r2
 8001d48:	4252      	negs	r2, r2
 8001d4a:	4690      	mov	r8, r2
 8001d4c:	4498      	add	r8, r3
 8001d4e:	4643      	mov	r3, r8
 8001d50:	021b      	lsls	r3, r3, #8
 8001d52:	d5e0      	bpl.n	8001d16 <__aeabi_dsub+0x2e2>
 8001d54:	4b04      	ldr	r3, [pc, #16]	; (8001d68 <__aeabi_dsub+0x334>)
 8001d56:	3601      	adds	r6, #1
 8001d58:	429e      	cmp	r6, r3
 8001d5a:	d000      	beq.n	8001d5e <__aeabi_dsub+0x32a>
 8001d5c:	e09f      	b.n	8001e9e <__aeabi_dsub+0x46a>
 8001d5e:	0031      	movs	r1, r6
 8001d60:	2300      	movs	r3, #0
 8001d62:	2200      	movs	r2, #0
 8001d64:	e70a      	b.n	8001b7c <__aeabi_dsub+0x148>
 8001d66:	46c0      	nop			; (mov r8, r8)
 8001d68:	000007ff 	.word	0x000007ff
 8001d6c:	ff7fffff 	.word	0xff7fffff
 8001d70:	fffff801 	.word	0xfffff801
 8001d74:	000007fe 	.word	0x000007fe
 8001d78:	2a00      	cmp	r2, #0
 8001d7a:	d100      	bne.n	8001d7e <__aeabi_dsub+0x34a>
 8001d7c:	e160      	b.n	8002040 <__aeabi_dsub+0x60c>
 8001d7e:	000a      	movs	r2, r1
 8001d80:	4302      	orrs	r2, r0
 8001d82:	d04d      	beq.n	8001e20 <__aeabi_dsub+0x3ec>
 8001d84:	464a      	mov	r2, r9
 8001d86:	075c      	lsls	r4, r3, #29
 8001d88:	08d2      	lsrs	r2, r2, #3
 8001d8a:	4322      	orrs	r2, r4
 8001d8c:	2480      	movs	r4, #128	; 0x80
 8001d8e:	08db      	lsrs	r3, r3, #3
 8001d90:	0324      	lsls	r4, r4, #12
 8001d92:	4223      	tst	r3, r4
 8001d94:	d007      	beq.n	8001da6 <__aeabi_dsub+0x372>
 8001d96:	08ce      	lsrs	r6, r1, #3
 8001d98:	4226      	tst	r6, r4
 8001d9a:	d104      	bne.n	8001da6 <__aeabi_dsub+0x372>
 8001d9c:	465d      	mov	r5, fp
 8001d9e:	0033      	movs	r3, r6
 8001da0:	08c2      	lsrs	r2, r0, #3
 8001da2:	0749      	lsls	r1, r1, #29
 8001da4:	430a      	orrs	r2, r1
 8001da6:	0f51      	lsrs	r1, r2, #29
 8001da8:	00d2      	lsls	r2, r2, #3
 8001daa:	08d2      	lsrs	r2, r2, #3
 8001dac:	0749      	lsls	r1, r1, #29
 8001dae:	430a      	orrs	r2, r1
 8001db0:	0011      	movs	r1, r2
 8001db2:	4319      	orrs	r1, r3
 8001db4:	d100      	bne.n	8001db8 <__aeabi_dsub+0x384>
 8001db6:	e1c8      	b.n	800214a <__aeabi_dsub+0x716>
 8001db8:	2180      	movs	r1, #128	; 0x80
 8001dba:	0309      	lsls	r1, r1, #12
 8001dbc:	430b      	orrs	r3, r1
 8001dbe:	031b      	lsls	r3, r3, #12
 8001dc0:	49d5      	ldr	r1, [pc, #852]	; (8002118 <__aeabi_dsub+0x6e4>)
 8001dc2:	0b1b      	lsrs	r3, r3, #12
 8001dc4:	e6da      	b.n	8001b7c <__aeabi_dsub+0x148>
 8001dc6:	49d5      	ldr	r1, [pc, #852]	; (800211c <__aeabi_dsub+0x6e8>)
 8001dc8:	1ab6      	subs	r6, r6, r2
 8001dca:	400b      	ands	r3, r1
 8001dcc:	4698      	mov	r8, r3
 8001dce:	e6b5      	b.n	8001b3c <__aeabi_dsub+0x108>
 8001dd0:	0020      	movs	r0, r4
 8001dd2:	f000 fab3 	bl	800233c <__clzsi2>
 8001dd6:	0002      	movs	r2, r0
 8001dd8:	3218      	adds	r2, #24
 8001dda:	2a1f      	cmp	r2, #31
 8001ddc:	dc00      	bgt.n	8001de0 <__aeabi_dsub+0x3ac>
 8001dde:	e68f      	b.n	8001b00 <__aeabi_dsub+0xcc>
 8001de0:	0023      	movs	r3, r4
 8001de2:	3808      	subs	r0, #8
 8001de4:	4083      	lsls	r3, r0
 8001de6:	2400      	movs	r4, #0
 8001de8:	e692      	b.n	8001b10 <__aeabi_dsub+0xdc>
 8001dea:	4308      	orrs	r0, r1
 8001dec:	0002      	movs	r2, r0
 8001dee:	1e50      	subs	r0, r2, #1
 8001df0:	4182      	sbcs	r2, r0
 8001df2:	e66d      	b.n	8001ad0 <__aeabi_dsub+0x9c>
 8001df4:	4cca      	ldr	r4, [pc, #808]	; (8002120 <__aeabi_dsub+0x6ec>)
 8001df6:	1c72      	adds	r2, r6, #1
 8001df8:	4222      	tst	r2, r4
 8001dfa:	d000      	beq.n	8001dfe <__aeabi_dsub+0x3ca>
 8001dfc:	e0ad      	b.n	8001f5a <__aeabi_dsub+0x526>
 8001dfe:	464a      	mov	r2, r9
 8001e00:	431a      	orrs	r2, r3
 8001e02:	2e00      	cmp	r6, #0
 8001e04:	d1b8      	bne.n	8001d78 <__aeabi_dsub+0x344>
 8001e06:	2a00      	cmp	r2, #0
 8001e08:	d100      	bne.n	8001e0c <__aeabi_dsub+0x3d8>
 8001e0a:	e158      	b.n	80020be <__aeabi_dsub+0x68a>
 8001e0c:	000a      	movs	r2, r1
 8001e0e:	4302      	orrs	r2, r0
 8001e10:	d000      	beq.n	8001e14 <__aeabi_dsub+0x3e0>
 8001e12:	e159      	b.n	80020c8 <__aeabi_dsub+0x694>
 8001e14:	464a      	mov	r2, r9
 8001e16:	0759      	lsls	r1, r3, #29
 8001e18:	08d2      	lsrs	r2, r2, #3
 8001e1a:	430a      	orrs	r2, r1
 8001e1c:	08db      	lsrs	r3, r3, #3
 8001e1e:	e786      	b.n	8001d2e <__aeabi_dsub+0x2fa>
 8001e20:	464a      	mov	r2, r9
 8001e22:	0759      	lsls	r1, r3, #29
 8001e24:	08d2      	lsrs	r2, r2, #3
 8001e26:	430a      	orrs	r2, r1
 8001e28:	08db      	lsrs	r3, r3, #3
 8001e2a:	e7c1      	b.n	8001db0 <__aeabi_dsub+0x37c>
 8001e2c:	4dba      	ldr	r5, [pc, #744]	; (8002118 <__aeabi_dsub+0x6e4>)
 8001e2e:	42aa      	cmp	r2, r5
 8001e30:	d100      	bne.n	8001e34 <__aeabi_dsub+0x400>
 8001e32:	e11e      	b.n	8002072 <__aeabi_dsub+0x63e>
 8001e34:	2580      	movs	r5, #128	; 0x80
 8001e36:	042d      	lsls	r5, r5, #16
 8001e38:	432b      	orrs	r3, r5
 8001e3a:	4664      	mov	r4, ip
 8001e3c:	2c38      	cmp	r4, #56	; 0x38
 8001e3e:	dc5d      	bgt.n	8001efc <__aeabi_dsub+0x4c8>
 8001e40:	2c1f      	cmp	r4, #31
 8001e42:	dd00      	ble.n	8001e46 <__aeabi_dsub+0x412>
 8001e44:	e0d0      	b.n	8001fe8 <__aeabi_dsub+0x5b4>
 8001e46:	2520      	movs	r5, #32
 8001e48:	4667      	mov	r7, ip
 8001e4a:	1b2d      	subs	r5, r5, r4
 8001e4c:	464e      	mov	r6, r9
 8001e4e:	001c      	movs	r4, r3
 8001e50:	40fe      	lsrs	r6, r7
 8001e52:	40ac      	lsls	r4, r5
 8001e54:	4334      	orrs	r4, r6
 8001e56:	464e      	mov	r6, r9
 8001e58:	40ae      	lsls	r6, r5
 8001e5a:	0035      	movs	r5, r6
 8001e5c:	40fb      	lsrs	r3, r7
 8001e5e:	1e6e      	subs	r6, r5, #1
 8001e60:	41b5      	sbcs	r5, r6
 8001e62:	1ac9      	subs	r1, r1, r3
 8001e64:	432c      	orrs	r4, r5
 8001e66:	e04e      	b.n	8001f06 <__aeabi_dsub+0x4d2>
 8001e68:	464a      	mov	r2, r9
 8001e6a:	1a14      	subs	r4, r2, r0
 8001e6c:	45a1      	cmp	r9, r4
 8001e6e:	4192      	sbcs	r2, r2
 8001e70:	4252      	negs	r2, r2
 8001e72:	4690      	mov	r8, r2
 8001e74:	1a5f      	subs	r7, r3, r1
 8001e76:	003a      	movs	r2, r7
 8001e78:	4647      	mov	r7, r8
 8001e7a:	1bd2      	subs	r2, r2, r7
 8001e7c:	4690      	mov	r8, r2
 8001e7e:	0212      	lsls	r2, r2, #8
 8001e80:	d500      	bpl.n	8001e84 <__aeabi_dsub+0x450>
 8001e82:	e08b      	b.n	8001f9c <__aeabi_dsub+0x568>
 8001e84:	4642      	mov	r2, r8
 8001e86:	4322      	orrs	r2, r4
 8001e88:	d000      	beq.n	8001e8c <__aeabi_dsub+0x458>
 8001e8a:	e630      	b.n	8001aee <__aeabi_dsub+0xba>
 8001e8c:	2300      	movs	r3, #0
 8001e8e:	2500      	movs	r5, #0
 8001e90:	e74d      	b.n	8001d2e <__aeabi_dsub+0x2fa>
 8001e92:	464a      	mov	r2, r9
 8001e94:	0759      	lsls	r1, r3, #29
 8001e96:	08d2      	lsrs	r2, r2, #3
 8001e98:	430a      	orrs	r2, r1
 8001e9a:	08db      	lsrs	r3, r3, #3
 8001e9c:	e744      	b.n	8001d28 <__aeabi_dsub+0x2f4>
 8001e9e:	4642      	mov	r2, r8
 8001ea0:	4b9e      	ldr	r3, [pc, #632]	; (800211c <__aeabi_dsub+0x6e8>)
 8001ea2:	0861      	lsrs	r1, r4, #1
 8001ea4:	401a      	ands	r2, r3
 8001ea6:	0013      	movs	r3, r2
 8001ea8:	2201      	movs	r2, #1
 8001eaa:	4014      	ands	r4, r2
 8001eac:	430c      	orrs	r4, r1
 8001eae:	07da      	lsls	r2, r3, #31
 8001eb0:	085b      	lsrs	r3, r3, #1
 8001eb2:	4698      	mov	r8, r3
 8001eb4:	4314      	orrs	r4, r2
 8001eb6:	e641      	b.n	8001b3c <__aeabi_dsub+0x108>
 8001eb8:	001a      	movs	r2, r3
 8001eba:	3e1f      	subs	r6, #31
 8001ebc:	40f2      	lsrs	r2, r6
 8001ebe:	0016      	movs	r6, r2
 8001ec0:	2920      	cmp	r1, #32
 8001ec2:	d003      	beq.n	8001ecc <__aeabi_dsub+0x498>
 8001ec4:	2240      	movs	r2, #64	; 0x40
 8001ec6:	1a51      	subs	r1, r2, r1
 8001ec8:	408b      	lsls	r3, r1
 8001eca:	431c      	orrs	r4, r3
 8001ecc:	1e62      	subs	r2, r4, #1
 8001ece:	4194      	sbcs	r4, r2
 8001ed0:	2300      	movs	r3, #0
 8001ed2:	4334      	orrs	r4, r6
 8001ed4:	4698      	mov	r8, r3
 8001ed6:	2600      	movs	r6, #0
 8001ed8:	e71d      	b.n	8001d16 <__aeabi_dsub+0x2e2>
 8001eda:	000c      	movs	r4, r1
 8001edc:	3a20      	subs	r2, #32
 8001ede:	40d4      	lsrs	r4, r2
 8001ee0:	0022      	movs	r2, r4
 8001ee2:	4664      	mov	r4, ip
 8001ee4:	2c20      	cmp	r4, #32
 8001ee6:	d004      	beq.n	8001ef2 <__aeabi_dsub+0x4be>
 8001ee8:	2740      	movs	r7, #64	; 0x40
 8001eea:	1b3f      	subs	r7, r7, r4
 8001eec:	40b9      	lsls	r1, r7
 8001eee:	4308      	orrs	r0, r1
 8001ef0:	4680      	mov	r8, r0
 8001ef2:	4644      	mov	r4, r8
 8001ef4:	1e61      	subs	r1, r4, #1
 8001ef6:	418c      	sbcs	r4, r1
 8001ef8:	4322      	orrs	r2, r4
 8001efa:	e5e9      	b.n	8001ad0 <__aeabi_dsub+0x9c>
 8001efc:	464c      	mov	r4, r9
 8001efe:	4323      	orrs	r3, r4
 8001f00:	001c      	movs	r4, r3
 8001f02:	1e63      	subs	r3, r4, #1
 8001f04:	419c      	sbcs	r4, r3
 8001f06:	1b04      	subs	r4, r0, r4
 8001f08:	42a0      	cmp	r0, r4
 8001f0a:	419b      	sbcs	r3, r3
 8001f0c:	425b      	negs	r3, r3
 8001f0e:	1acb      	subs	r3, r1, r3
 8001f10:	4698      	mov	r8, r3
 8001f12:	465d      	mov	r5, fp
 8001f14:	0016      	movs	r6, r2
 8001f16:	e5e2      	b.n	8001ade <__aeabi_dsub+0xaa>
 8001f18:	464e      	mov	r6, r9
 8001f1a:	431e      	orrs	r6, r3
 8001f1c:	d100      	bne.n	8001f20 <__aeabi_dsub+0x4ec>
 8001f1e:	e0ae      	b.n	800207e <__aeabi_dsub+0x64a>
 8001f20:	1e66      	subs	r6, r4, #1
 8001f22:	2c01      	cmp	r4, #1
 8001f24:	d100      	bne.n	8001f28 <__aeabi_dsub+0x4f4>
 8001f26:	e0fd      	b.n	8002124 <__aeabi_dsub+0x6f0>
 8001f28:	4f7b      	ldr	r7, [pc, #492]	; (8002118 <__aeabi_dsub+0x6e4>)
 8001f2a:	42bc      	cmp	r4, r7
 8001f2c:	d100      	bne.n	8001f30 <__aeabi_dsub+0x4fc>
 8001f2e:	e107      	b.n	8002140 <__aeabi_dsub+0x70c>
 8001f30:	46b4      	mov	ip, r6
 8001f32:	e69b      	b.n	8001c6c <__aeabi_dsub+0x238>
 8001f34:	4664      	mov	r4, ip
 8001f36:	2220      	movs	r2, #32
 8001f38:	1b12      	subs	r2, r2, r4
 8001f3a:	000c      	movs	r4, r1
 8001f3c:	4094      	lsls	r4, r2
 8001f3e:	0007      	movs	r7, r0
 8001f40:	4090      	lsls	r0, r2
 8001f42:	46a0      	mov	r8, r4
 8001f44:	4664      	mov	r4, ip
 8001f46:	1e42      	subs	r2, r0, #1
 8001f48:	4190      	sbcs	r0, r2
 8001f4a:	4662      	mov	r2, ip
 8001f4c:	40e7      	lsrs	r7, r4
 8001f4e:	4644      	mov	r4, r8
 8001f50:	40d1      	lsrs	r1, r2
 8001f52:	433c      	orrs	r4, r7
 8001f54:	4304      	orrs	r4, r0
 8001f56:	185b      	adds	r3, r3, r1
 8001f58:	e6f3      	b.n	8001d42 <__aeabi_dsub+0x30e>
 8001f5a:	4c6f      	ldr	r4, [pc, #444]	; (8002118 <__aeabi_dsub+0x6e4>)
 8001f5c:	42a2      	cmp	r2, r4
 8001f5e:	d100      	bne.n	8001f62 <__aeabi_dsub+0x52e>
 8001f60:	e0d5      	b.n	800210e <__aeabi_dsub+0x6da>
 8001f62:	4448      	add	r0, r9
 8001f64:	185b      	adds	r3, r3, r1
 8001f66:	4548      	cmp	r0, r9
 8001f68:	4189      	sbcs	r1, r1
 8001f6a:	4249      	negs	r1, r1
 8001f6c:	185b      	adds	r3, r3, r1
 8001f6e:	07dc      	lsls	r4, r3, #31
 8001f70:	0840      	lsrs	r0, r0, #1
 8001f72:	085b      	lsrs	r3, r3, #1
 8001f74:	4698      	mov	r8, r3
 8001f76:	0016      	movs	r6, r2
 8001f78:	4304      	orrs	r4, r0
 8001f7a:	e6cc      	b.n	8001d16 <__aeabi_dsub+0x2e2>
 8001f7c:	2a00      	cmp	r2, #0
 8001f7e:	d000      	beq.n	8001f82 <__aeabi_dsub+0x54e>
 8001f80:	e082      	b.n	8002088 <__aeabi_dsub+0x654>
 8001f82:	000a      	movs	r2, r1
 8001f84:	4302      	orrs	r2, r0
 8001f86:	d140      	bne.n	800200a <__aeabi_dsub+0x5d6>
 8001f88:	2380      	movs	r3, #128	; 0x80
 8001f8a:	2500      	movs	r5, #0
 8001f8c:	031b      	lsls	r3, r3, #12
 8001f8e:	e713      	b.n	8001db8 <__aeabi_dsub+0x384>
 8001f90:	074b      	lsls	r3, r1, #29
 8001f92:	08c2      	lsrs	r2, r0, #3
 8001f94:	431a      	orrs	r2, r3
 8001f96:	465d      	mov	r5, fp
 8001f98:	08cb      	lsrs	r3, r1, #3
 8001f9a:	e6c5      	b.n	8001d28 <__aeabi_dsub+0x2f4>
 8001f9c:	464a      	mov	r2, r9
 8001f9e:	1a84      	subs	r4, r0, r2
 8001fa0:	42a0      	cmp	r0, r4
 8001fa2:	4192      	sbcs	r2, r2
 8001fa4:	1acb      	subs	r3, r1, r3
 8001fa6:	4252      	negs	r2, r2
 8001fa8:	1a9b      	subs	r3, r3, r2
 8001faa:	4698      	mov	r8, r3
 8001fac:	465d      	mov	r5, fp
 8001fae:	e59e      	b.n	8001aee <__aeabi_dsub+0xba>
 8001fb0:	464a      	mov	r2, r9
 8001fb2:	0759      	lsls	r1, r3, #29
 8001fb4:	08d2      	lsrs	r2, r2, #3
 8001fb6:	430a      	orrs	r2, r1
 8001fb8:	08db      	lsrs	r3, r3, #3
 8001fba:	e6f9      	b.n	8001db0 <__aeabi_dsub+0x37c>
 8001fbc:	464a      	mov	r2, r9
 8001fbe:	1a14      	subs	r4, r2, r0
 8001fc0:	45a1      	cmp	r9, r4
 8001fc2:	4192      	sbcs	r2, r2
 8001fc4:	1a5b      	subs	r3, r3, r1
 8001fc6:	4252      	negs	r2, r2
 8001fc8:	1a9b      	subs	r3, r3, r2
 8001fca:	4698      	mov	r8, r3
 8001fcc:	2601      	movs	r6, #1
 8001fce:	e586      	b.n	8001ade <__aeabi_dsub+0xaa>
 8001fd0:	464a      	mov	r2, r9
 8001fd2:	0759      	lsls	r1, r3, #29
 8001fd4:	08d2      	lsrs	r2, r2, #3
 8001fd6:	430a      	orrs	r2, r1
 8001fd8:	08db      	lsrs	r3, r3, #3
 8001fda:	e6a5      	b.n	8001d28 <__aeabi_dsub+0x2f4>
 8001fdc:	464c      	mov	r4, r9
 8001fde:	4323      	orrs	r3, r4
 8001fe0:	001c      	movs	r4, r3
 8001fe2:	1e63      	subs	r3, r4, #1
 8001fe4:	419c      	sbcs	r4, r3
 8001fe6:	e65b      	b.n	8001ca0 <__aeabi_dsub+0x26c>
 8001fe8:	4665      	mov	r5, ip
 8001fea:	001e      	movs	r6, r3
 8001fec:	3d20      	subs	r5, #32
 8001fee:	40ee      	lsrs	r6, r5
 8001ff0:	2c20      	cmp	r4, #32
 8001ff2:	d005      	beq.n	8002000 <__aeabi_dsub+0x5cc>
 8001ff4:	2540      	movs	r5, #64	; 0x40
 8001ff6:	1b2d      	subs	r5, r5, r4
 8001ff8:	40ab      	lsls	r3, r5
 8001ffa:	464c      	mov	r4, r9
 8001ffc:	431c      	orrs	r4, r3
 8001ffe:	46a2      	mov	sl, r4
 8002000:	4654      	mov	r4, sl
 8002002:	1e63      	subs	r3, r4, #1
 8002004:	419c      	sbcs	r4, r3
 8002006:	4334      	orrs	r4, r6
 8002008:	e77d      	b.n	8001f06 <__aeabi_dsub+0x4d2>
 800200a:	074b      	lsls	r3, r1, #29
 800200c:	08c2      	lsrs	r2, r0, #3
 800200e:	431a      	orrs	r2, r3
 8002010:	465d      	mov	r5, fp
 8002012:	08cb      	lsrs	r3, r1, #3
 8002014:	e6cc      	b.n	8001db0 <__aeabi_dsub+0x37c>
 8002016:	000a      	movs	r2, r1
 8002018:	4302      	orrs	r2, r0
 800201a:	d100      	bne.n	800201e <__aeabi_dsub+0x5ea>
 800201c:	e736      	b.n	8001e8c <__aeabi_dsub+0x458>
 800201e:	074b      	lsls	r3, r1, #29
 8002020:	08c2      	lsrs	r2, r0, #3
 8002022:	431a      	orrs	r2, r3
 8002024:	465d      	mov	r5, fp
 8002026:	08cb      	lsrs	r3, r1, #3
 8002028:	e681      	b.n	8001d2e <__aeabi_dsub+0x2fa>
 800202a:	464a      	mov	r2, r9
 800202c:	1a84      	subs	r4, r0, r2
 800202e:	42a0      	cmp	r0, r4
 8002030:	4192      	sbcs	r2, r2
 8002032:	1acb      	subs	r3, r1, r3
 8002034:	4252      	negs	r2, r2
 8002036:	1a9b      	subs	r3, r3, r2
 8002038:	4698      	mov	r8, r3
 800203a:	465d      	mov	r5, fp
 800203c:	2601      	movs	r6, #1
 800203e:	e54e      	b.n	8001ade <__aeabi_dsub+0xaa>
 8002040:	074b      	lsls	r3, r1, #29
 8002042:	08c2      	lsrs	r2, r0, #3
 8002044:	431a      	orrs	r2, r3
 8002046:	08cb      	lsrs	r3, r1, #3
 8002048:	e6b2      	b.n	8001db0 <__aeabi_dsub+0x37c>
 800204a:	464a      	mov	r2, r9
 800204c:	1a14      	subs	r4, r2, r0
 800204e:	45a1      	cmp	r9, r4
 8002050:	4192      	sbcs	r2, r2
 8002052:	1a5f      	subs	r7, r3, r1
 8002054:	4252      	negs	r2, r2
 8002056:	1aba      	subs	r2, r7, r2
 8002058:	4690      	mov	r8, r2
 800205a:	0212      	lsls	r2, r2, #8
 800205c:	d56b      	bpl.n	8002136 <__aeabi_dsub+0x702>
 800205e:	464a      	mov	r2, r9
 8002060:	1a84      	subs	r4, r0, r2
 8002062:	42a0      	cmp	r0, r4
 8002064:	4192      	sbcs	r2, r2
 8002066:	1acb      	subs	r3, r1, r3
 8002068:	4252      	negs	r2, r2
 800206a:	1a9b      	subs	r3, r3, r2
 800206c:	4698      	mov	r8, r3
 800206e:	465d      	mov	r5, fp
 8002070:	e564      	b.n	8001b3c <__aeabi_dsub+0x108>
 8002072:	074b      	lsls	r3, r1, #29
 8002074:	08c2      	lsrs	r2, r0, #3
 8002076:	431a      	orrs	r2, r3
 8002078:	465d      	mov	r5, fp
 800207a:	08cb      	lsrs	r3, r1, #3
 800207c:	e698      	b.n	8001db0 <__aeabi_dsub+0x37c>
 800207e:	074b      	lsls	r3, r1, #29
 8002080:	08c2      	lsrs	r2, r0, #3
 8002082:	431a      	orrs	r2, r3
 8002084:	08cb      	lsrs	r3, r1, #3
 8002086:	e64f      	b.n	8001d28 <__aeabi_dsub+0x2f4>
 8002088:	000a      	movs	r2, r1
 800208a:	4302      	orrs	r2, r0
 800208c:	d090      	beq.n	8001fb0 <__aeabi_dsub+0x57c>
 800208e:	464a      	mov	r2, r9
 8002090:	075c      	lsls	r4, r3, #29
 8002092:	08d2      	lsrs	r2, r2, #3
 8002094:	4314      	orrs	r4, r2
 8002096:	2280      	movs	r2, #128	; 0x80
 8002098:	08db      	lsrs	r3, r3, #3
 800209a:	0312      	lsls	r2, r2, #12
 800209c:	4213      	tst	r3, r2
 800209e:	d008      	beq.n	80020b2 <__aeabi_dsub+0x67e>
 80020a0:	08ce      	lsrs	r6, r1, #3
 80020a2:	4216      	tst	r6, r2
 80020a4:	d105      	bne.n	80020b2 <__aeabi_dsub+0x67e>
 80020a6:	08c0      	lsrs	r0, r0, #3
 80020a8:	0749      	lsls	r1, r1, #29
 80020aa:	4308      	orrs	r0, r1
 80020ac:	0004      	movs	r4, r0
 80020ae:	465d      	mov	r5, fp
 80020b0:	0033      	movs	r3, r6
 80020b2:	0f61      	lsrs	r1, r4, #29
 80020b4:	00e2      	lsls	r2, r4, #3
 80020b6:	0749      	lsls	r1, r1, #29
 80020b8:	08d2      	lsrs	r2, r2, #3
 80020ba:	430a      	orrs	r2, r1
 80020bc:	e678      	b.n	8001db0 <__aeabi_dsub+0x37c>
 80020be:	074b      	lsls	r3, r1, #29
 80020c0:	08c2      	lsrs	r2, r0, #3
 80020c2:	431a      	orrs	r2, r3
 80020c4:	08cb      	lsrs	r3, r1, #3
 80020c6:	e632      	b.n	8001d2e <__aeabi_dsub+0x2fa>
 80020c8:	4448      	add	r0, r9
 80020ca:	185b      	adds	r3, r3, r1
 80020cc:	4548      	cmp	r0, r9
 80020ce:	4192      	sbcs	r2, r2
 80020d0:	4698      	mov	r8, r3
 80020d2:	4252      	negs	r2, r2
 80020d4:	4490      	add	r8, r2
 80020d6:	4643      	mov	r3, r8
 80020d8:	0004      	movs	r4, r0
 80020da:	021b      	lsls	r3, r3, #8
 80020dc:	d400      	bmi.n	80020e0 <__aeabi_dsub+0x6ac>
 80020de:	e61a      	b.n	8001d16 <__aeabi_dsub+0x2e2>
 80020e0:	4642      	mov	r2, r8
 80020e2:	4b0e      	ldr	r3, [pc, #56]	; (800211c <__aeabi_dsub+0x6e8>)
 80020e4:	2601      	movs	r6, #1
 80020e6:	401a      	ands	r2, r3
 80020e8:	4690      	mov	r8, r2
 80020ea:	e614      	b.n	8001d16 <__aeabi_dsub+0x2e2>
 80020ec:	4666      	mov	r6, ip
 80020ee:	001f      	movs	r7, r3
 80020f0:	3e20      	subs	r6, #32
 80020f2:	40f7      	lsrs	r7, r6
 80020f4:	2c20      	cmp	r4, #32
 80020f6:	d005      	beq.n	8002104 <__aeabi_dsub+0x6d0>
 80020f8:	2640      	movs	r6, #64	; 0x40
 80020fa:	1b36      	subs	r6, r6, r4
 80020fc:	40b3      	lsls	r3, r6
 80020fe:	464c      	mov	r4, r9
 8002100:	431c      	orrs	r4, r3
 8002102:	46a2      	mov	sl, r4
 8002104:	4654      	mov	r4, sl
 8002106:	1e63      	subs	r3, r4, #1
 8002108:	419c      	sbcs	r4, r3
 800210a:	433c      	orrs	r4, r7
 800210c:	e5c8      	b.n	8001ca0 <__aeabi_dsub+0x26c>
 800210e:	0011      	movs	r1, r2
 8002110:	2300      	movs	r3, #0
 8002112:	2200      	movs	r2, #0
 8002114:	e532      	b.n	8001b7c <__aeabi_dsub+0x148>
 8002116:	46c0      	nop			; (mov r8, r8)
 8002118:	000007ff 	.word	0x000007ff
 800211c:	ff7fffff 	.word	0xff7fffff
 8002120:	000007fe 	.word	0x000007fe
 8002124:	464a      	mov	r2, r9
 8002126:	1814      	adds	r4, r2, r0
 8002128:	4284      	cmp	r4, r0
 800212a:	4192      	sbcs	r2, r2
 800212c:	185b      	adds	r3, r3, r1
 800212e:	4698      	mov	r8, r3
 8002130:	4252      	negs	r2, r2
 8002132:	4490      	add	r8, r2
 8002134:	e5e9      	b.n	8001d0a <__aeabi_dsub+0x2d6>
 8002136:	4642      	mov	r2, r8
 8002138:	4322      	orrs	r2, r4
 800213a:	d100      	bne.n	800213e <__aeabi_dsub+0x70a>
 800213c:	e6a6      	b.n	8001e8c <__aeabi_dsub+0x458>
 800213e:	e5ea      	b.n	8001d16 <__aeabi_dsub+0x2e2>
 8002140:	074b      	lsls	r3, r1, #29
 8002142:	08c2      	lsrs	r2, r0, #3
 8002144:	431a      	orrs	r2, r3
 8002146:	08cb      	lsrs	r3, r1, #3
 8002148:	e632      	b.n	8001db0 <__aeabi_dsub+0x37c>
 800214a:	2200      	movs	r2, #0
 800214c:	4901      	ldr	r1, [pc, #4]	; (8002154 <__aeabi_dsub+0x720>)
 800214e:	0013      	movs	r3, r2
 8002150:	e514      	b.n	8001b7c <__aeabi_dsub+0x148>
 8002152:	46c0      	nop			; (mov r8, r8)
 8002154:	000007ff 	.word	0x000007ff

08002158 <__aeabi_dcmpun>:
 8002158:	b570      	push	{r4, r5, r6, lr}
 800215a:	0005      	movs	r5, r0
 800215c:	480c      	ldr	r0, [pc, #48]	; (8002190 <__aeabi_dcmpun+0x38>)
 800215e:	030c      	lsls	r4, r1, #12
 8002160:	0016      	movs	r6, r2
 8002162:	0049      	lsls	r1, r1, #1
 8002164:	031a      	lsls	r2, r3, #12
 8002166:	005b      	lsls	r3, r3, #1
 8002168:	0b24      	lsrs	r4, r4, #12
 800216a:	0d49      	lsrs	r1, r1, #21
 800216c:	0b12      	lsrs	r2, r2, #12
 800216e:	0d5b      	lsrs	r3, r3, #21
 8002170:	4281      	cmp	r1, r0
 8002172:	d008      	beq.n	8002186 <__aeabi_dcmpun+0x2e>
 8002174:	4906      	ldr	r1, [pc, #24]	; (8002190 <__aeabi_dcmpun+0x38>)
 8002176:	2000      	movs	r0, #0
 8002178:	428b      	cmp	r3, r1
 800217a:	d103      	bne.n	8002184 <__aeabi_dcmpun+0x2c>
 800217c:	4332      	orrs	r2, r6
 800217e:	0010      	movs	r0, r2
 8002180:	1e42      	subs	r2, r0, #1
 8002182:	4190      	sbcs	r0, r2
 8002184:	bd70      	pop	{r4, r5, r6, pc}
 8002186:	2001      	movs	r0, #1
 8002188:	432c      	orrs	r4, r5
 800218a:	d1fb      	bne.n	8002184 <__aeabi_dcmpun+0x2c>
 800218c:	e7f2      	b.n	8002174 <__aeabi_dcmpun+0x1c>
 800218e:	46c0      	nop			; (mov r8, r8)
 8002190:	000007ff 	.word	0x000007ff

08002194 <__aeabi_d2iz>:
 8002194:	000a      	movs	r2, r1
 8002196:	b530      	push	{r4, r5, lr}
 8002198:	4c13      	ldr	r4, [pc, #76]	; (80021e8 <__aeabi_d2iz+0x54>)
 800219a:	0053      	lsls	r3, r2, #1
 800219c:	0309      	lsls	r1, r1, #12
 800219e:	0005      	movs	r5, r0
 80021a0:	0b09      	lsrs	r1, r1, #12
 80021a2:	2000      	movs	r0, #0
 80021a4:	0d5b      	lsrs	r3, r3, #21
 80021a6:	0fd2      	lsrs	r2, r2, #31
 80021a8:	42a3      	cmp	r3, r4
 80021aa:	dd04      	ble.n	80021b6 <__aeabi_d2iz+0x22>
 80021ac:	480f      	ldr	r0, [pc, #60]	; (80021ec <__aeabi_d2iz+0x58>)
 80021ae:	4283      	cmp	r3, r0
 80021b0:	dd02      	ble.n	80021b8 <__aeabi_d2iz+0x24>
 80021b2:	4b0f      	ldr	r3, [pc, #60]	; (80021f0 <__aeabi_d2iz+0x5c>)
 80021b4:	18d0      	adds	r0, r2, r3
 80021b6:	bd30      	pop	{r4, r5, pc}
 80021b8:	2080      	movs	r0, #128	; 0x80
 80021ba:	0340      	lsls	r0, r0, #13
 80021bc:	4301      	orrs	r1, r0
 80021be:	480d      	ldr	r0, [pc, #52]	; (80021f4 <__aeabi_d2iz+0x60>)
 80021c0:	1ac0      	subs	r0, r0, r3
 80021c2:	281f      	cmp	r0, #31
 80021c4:	dd08      	ble.n	80021d8 <__aeabi_d2iz+0x44>
 80021c6:	480c      	ldr	r0, [pc, #48]	; (80021f8 <__aeabi_d2iz+0x64>)
 80021c8:	1ac3      	subs	r3, r0, r3
 80021ca:	40d9      	lsrs	r1, r3
 80021cc:	000b      	movs	r3, r1
 80021ce:	4258      	negs	r0, r3
 80021d0:	2a00      	cmp	r2, #0
 80021d2:	d1f0      	bne.n	80021b6 <__aeabi_d2iz+0x22>
 80021d4:	0018      	movs	r0, r3
 80021d6:	e7ee      	b.n	80021b6 <__aeabi_d2iz+0x22>
 80021d8:	4c08      	ldr	r4, [pc, #32]	; (80021fc <__aeabi_d2iz+0x68>)
 80021da:	40c5      	lsrs	r5, r0
 80021dc:	46a4      	mov	ip, r4
 80021de:	4463      	add	r3, ip
 80021e0:	4099      	lsls	r1, r3
 80021e2:	000b      	movs	r3, r1
 80021e4:	432b      	orrs	r3, r5
 80021e6:	e7f2      	b.n	80021ce <__aeabi_d2iz+0x3a>
 80021e8:	000003fe 	.word	0x000003fe
 80021ec:	0000041d 	.word	0x0000041d
 80021f0:	7fffffff 	.word	0x7fffffff
 80021f4:	00000433 	.word	0x00000433
 80021f8:	00000413 	.word	0x00000413
 80021fc:	fffffbed 	.word	0xfffffbed

08002200 <__aeabi_i2d>:
 8002200:	b570      	push	{r4, r5, r6, lr}
 8002202:	2800      	cmp	r0, #0
 8002204:	d016      	beq.n	8002234 <__aeabi_i2d+0x34>
 8002206:	17c3      	asrs	r3, r0, #31
 8002208:	18c5      	adds	r5, r0, r3
 800220a:	405d      	eors	r5, r3
 800220c:	0fc4      	lsrs	r4, r0, #31
 800220e:	0028      	movs	r0, r5
 8002210:	f000 f894 	bl	800233c <__clzsi2>
 8002214:	4a11      	ldr	r2, [pc, #68]	; (800225c <__aeabi_i2d+0x5c>)
 8002216:	1a12      	subs	r2, r2, r0
 8002218:	280a      	cmp	r0, #10
 800221a:	dc16      	bgt.n	800224a <__aeabi_i2d+0x4a>
 800221c:	0003      	movs	r3, r0
 800221e:	002e      	movs	r6, r5
 8002220:	3315      	adds	r3, #21
 8002222:	409e      	lsls	r6, r3
 8002224:	230b      	movs	r3, #11
 8002226:	1a18      	subs	r0, r3, r0
 8002228:	40c5      	lsrs	r5, r0
 800222a:	0553      	lsls	r3, r2, #21
 800222c:	032d      	lsls	r5, r5, #12
 800222e:	0b2d      	lsrs	r5, r5, #12
 8002230:	0d5b      	lsrs	r3, r3, #21
 8002232:	e003      	b.n	800223c <__aeabi_i2d+0x3c>
 8002234:	2400      	movs	r4, #0
 8002236:	2300      	movs	r3, #0
 8002238:	2500      	movs	r5, #0
 800223a:	2600      	movs	r6, #0
 800223c:	051b      	lsls	r3, r3, #20
 800223e:	432b      	orrs	r3, r5
 8002240:	07e4      	lsls	r4, r4, #31
 8002242:	4323      	orrs	r3, r4
 8002244:	0030      	movs	r0, r6
 8002246:	0019      	movs	r1, r3
 8002248:	bd70      	pop	{r4, r5, r6, pc}
 800224a:	380b      	subs	r0, #11
 800224c:	4085      	lsls	r5, r0
 800224e:	0553      	lsls	r3, r2, #21
 8002250:	032d      	lsls	r5, r5, #12
 8002252:	2600      	movs	r6, #0
 8002254:	0b2d      	lsrs	r5, r5, #12
 8002256:	0d5b      	lsrs	r3, r3, #21
 8002258:	e7f0      	b.n	800223c <__aeabi_i2d+0x3c>
 800225a:	46c0      	nop			; (mov r8, r8)
 800225c:	0000041e 	.word	0x0000041e

08002260 <__aeabi_ui2d>:
 8002260:	b510      	push	{r4, lr}
 8002262:	1e04      	subs	r4, r0, #0
 8002264:	d010      	beq.n	8002288 <__aeabi_ui2d+0x28>
 8002266:	f000 f869 	bl	800233c <__clzsi2>
 800226a:	4b0f      	ldr	r3, [pc, #60]	; (80022a8 <__aeabi_ui2d+0x48>)
 800226c:	1a1b      	subs	r3, r3, r0
 800226e:	280a      	cmp	r0, #10
 8002270:	dc11      	bgt.n	8002296 <__aeabi_ui2d+0x36>
 8002272:	220b      	movs	r2, #11
 8002274:	0021      	movs	r1, r4
 8002276:	1a12      	subs	r2, r2, r0
 8002278:	40d1      	lsrs	r1, r2
 800227a:	3015      	adds	r0, #21
 800227c:	030a      	lsls	r2, r1, #12
 800227e:	055b      	lsls	r3, r3, #21
 8002280:	4084      	lsls	r4, r0
 8002282:	0b12      	lsrs	r2, r2, #12
 8002284:	0d5b      	lsrs	r3, r3, #21
 8002286:	e001      	b.n	800228c <__aeabi_ui2d+0x2c>
 8002288:	2300      	movs	r3, #0
 800228a:	2200      	movs	r2, #0
 800228c:	051b      	lsls	r3, r3, #20
 800228e:	4313      	orrs	r3, r2
 8002290:	0020      	movs	r0, r4
 8002292:	0019      	movs	r1, r3
 8002294:	bd10      	pop	{r4, pc}
 8002296:	0022      	movs	r2, r4
 8002298:	380b      	subs	r0, #11
 800229a:	4082      	lsls	r2, r0
 800229c:	055b      	lsls	r3, r3, #21
 800229e:	0312      	lsls	r2, r2, #12
 80022a0:	2400      	movs	r4, #0
 80022a2:	0b12      	lsrs	r2, r2, #12
 80022a4:	0d5b      	lsrs	r3, r3, #21
 80022a6:	e7f1      	b.n	800228c <__aeabi_ui2d+0x2c>
 80022a8:	0000041e 	.word	0x0000041e

080022ac <__aeabi_f2d>:
 80022ac:	b570      	push	{r4, r5, r6, lr}
 80022ae:	0043      	lsls	r3, r0, #1
 80022b0:	0246      	lsls	r6, r0, #9
 80022b2:	0fc4      	lsrs	r4, r0, #31
 80022b4:	20fe      	movs	r0, #254	; 0xfe
 80022b6:	0e1b      	lsrs	r3, r3, #24
 80022b8:	1c59      	adds	r1, r3, #1
 80022ba:	0a75      	lsrs	r5, r6, #9
 80022bc:	4208      	tst	r0, r1
 80022be:	d00c      	beq.n	80022da <__aeabi_f2d+0x2e>
 80022c0:	22e0      	movs	r2, #224	; 0xe0
 80022c2:	0092      	lsls	r2, r2, #2
 80022c4:	4694      	mov	ip, r2
 80022c6:	076d      	lsls	r5, r5, #29
 80022c8:	0b36      	lsrs	r6, r6, #12
 80022ca:	4463      	add	r3, ip
 80022cc:	051b      	lsls	r3, r3, #20
 80022ce:	4333      	orrs	r3, r6
 80022d0:	07e4      	lsls	r4, r4, #31
 80022d2:	4323      	orrs	r3, r4
 80022d4:	0028      	movs	r0, r5
 80022d6:	0019      	movs	r1, r3
 80022d8:	bd70      	pop	{r4, r5, r6, pc}
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d114      	bne.n	8002308 <__aeabi_f2d+0x5c>
 80022de:	2d00      	cmp	r5, #0
 80022e0:	d01b      	beq.n	800231a <__aeabi_f2d+0x6e>
 80022e2:	0028      	movs	r0, r5
 80022e4:	f000 f82a 	bl	800233c <__clzsi2>
 80022e8:	280a      	cmp	r0, #10
 80022ea:	dc1c      	bgt.n	8002326 <__aeabi_f2d+0x7a>
 80022ec:	230b      	movs	r3, #11
 80022ee:	002a      	movs	r2, r5
 80022f0:	1a1b      	subs	r3, r3, r0
 80022f2:	40da      	lsrs	r2, r3
 80022f4:	0003      	movs	r3, r0
 80022f6:	3315      	adds	r3, #21
 80022f8:	409d      	lsls	r5, r3
 80022fa:	4b0e      	ldr	r3, [pc, #56]	; (8002334 <__aeabi_f2d+0x88>)
 80022fc:	0312      	lsls	r2, r2, #12
 80022fe:	1a1b      	subs	r3, r3, r0
 8002300:	055b      	lsls	r3, r3, #21
 8002302:	0b16      	lsrs	r6, r2, #12
 8002304:	0d5b      	lsrs	r3, r3, #21
 8002306:	e7e1      	b.n	80022cc <__aeabi_f2d+0x20>
 8002308:	2d00      	cmp	r5, #0
 800230a:	d009      	beq.n	8002320 <__aeabi_f2d+0x74>
 800230c:	0b32      	lsrs	r2, r6, #12
 800230e:	2680      	movs	r6, #128	; 0x80
 8002310:	0336      	lsls	r6, r6, #12
 8002312:	4b09      	ldr	r3, [pc, #36]	; (8002338 <__aeabi_f2d+0x8c>)
 8002314:	076d      	lsls	r5, r5, #29
 8002316:	4316      	orrs	r6, r2
 8002318:	e7d8      	b.n	80022cc <__aeabi_f2d+0x20>
 800231a:	2300      	movs	r3, #0
 800231c:	2600      	movs	r6, #0
 800231e:	e7d5      	b.n	80022cc <__aeabi_f2d+0x20>
 8002320:	2600      	movs	r6, #0
 8002322:	4b05      	ldr	r3, [pc, #20]	; (8002338 <__aeabi_f2d+0x8c>)
 8002324:	e7d2      	b.n	80022cc <__aeabi_f2d+0x20>
 8002326:	0003      	movs	r3, r0
 8002328:	002a      	movs	r2, r5
 800232a:	3b0b      	subs	r3, #11
 800232c:	409a      	lsls	r2, r3
 800232e:	2500      	movs	r5, #0
 8002330:	e7e3      	b.n	80022fa <__aeabi_f2d+0x4e>
 8002332:	46c0      	nop			; (mov r8, r8)
 8002334:	00000389 	.word	0x00000389
 8002338:	000007ff 	.word	0x000007ff

0800233c <__clzsi2>:
 800233c:	211c      	movs	r1, #28
 800233e:	2301      	movs	r3, #1
 8002340:	041b      	lsls	r3, r3, #16
 8002342:	4298      	cmp	r0, r3
 8002344:	d301      	bcc.n	800234a <__clzsi2+0xe>
 8002346:	0c00      	lsrs	r0, r0, #16
 8002348:	3910      	subs	r1, #16
 800234a:	0a1b      	lsrs	r3, r3, #8
 800234c:	4298      	cmp	r0, r3
 800234e:	d301      	bcc.n	8002354 <__clzsi2+0x18>
 8002350:	0a00      	lsrs	r0, r0, #8
 8002352:	3908      	subs	r1, #8
 8002354:	091b      	lsrs	r3, r3, #4
 8002356:	4298      	cmp	r0, r3
 8002358:	d301      	bcc.n	800235e <__clzsi2+0x22>
 800235a:	0900      	lsrs	r0, r0, #4
 800235c:	3904      	subs	r1, #4
 800235e:	a202      	add	r2, pc, #8	; (adr r2, 8002368 <__clzsi2+0x2c>)
 8002360:	5c10      	ldrb	r0, [r2, r0]
 8002362:	1840      	adds	r0, r0, r1
 8002364:	4770      	bx	lr
 8002366:	46c0      	nop			; (mov r8, r8)
 8002368:	02020304 	.word	0x02020304
 800236c:	01010101 	.word	0x01010101
	...

08002378 <__clzdi2>:
 8002378:	b510      	push	{r4, lr}
 800237a:	2900      	cmp	r1, #0
 800237c:	d103      	bne.n	8002386 <__clzdi2+0xe>
 800237e:	f7ff ffdd 	bl	800233c <__clzsi2>
 8002382:	3020      	adds	r0, #32
 8002384:	e002      	b.n	800238c <__clzdi2+0x14>
 8002386:	1c08      	adds	r0, r1, #0
 8002388:	f7ff ffd8 	bl	800233c <__clzsi2>
 800238c:	bd10      	pop	{r4, pc}
 800238e:	46c0      	nop			; (mov r8, r8)

08002390 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002390:	b590      	push	{r4, r7, lr}
 8002392:	b085      	sub	sp, #20
 8002394:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002396:	f000 fa95 	bl	80028c4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800239a:	f000 f871 	bl	8002480 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800239e:	f000 f8eb 	bl	8002578 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80023a2:	f000 f8b5 	bl	8002510 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */

    // dbg_tx() example implementation
    //requires add "-u_printf_float" flag in: Other flag/Miscellaneous/MCU GCC Linker/Settings/C/C++ Build/Properties of the Test004 project
    sprintf ( (char *)uart_tx_buff , "Value of %s is: %f\r\n" , s , f ) ;
 80023a6:	4b2f      	ldr	r3, [pc, #188]	; (8002464 <main+0xd4>)
 80023a8:	681c      	ldr	r4, [r3, #0]
 80023aa:	4b2f      	ldr	r3, [pc, #188]	; (8002468 <main+0xd8>)
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	1c18      	adds	r0, r3, #0
 80023b0:	f7ff ff7c 	bl	80022ac <__aeabi_f2d>
 80023b4:	0002      	movs	r2, r0
 80023b6:	000b      	movs	r3, r1
 80023b8:	492c      	ldr	r1, [pc, #176]	; (800246c <main+0xdc>)
 80023ba:	482d      	ldr	r0, [pc, #180]	; (8002470 <main+0xe0>)
 80023bc:	9200      	str	r2, [sp, #0]
 80023be:	9301      	str	r3, [sp, #4]
 80023c0:	0022      	movs	r2, r4
 80023c2:	f002 fc37 	bl	8004c34 <siprintf>
    dbg_tx ( uart_tx_buff , (uint16_t)strlen ( (const char*)uart_tx_buff ) ) ;
 80023c6:	4b2a      	ldr	r3, [pc, #168]	; (8002470 <main+0xe0>)
 80023c8:	0018      	movs	r0, r3
 80023ca:	f7fd fe9b 	bl	8000104 <strlen>
 80023ce:	0003      	movs	r3, r0
 80023d0:	b29a      	uxth	r2, r3
 80023d2:	4b27      	ldr	r3, [pc, #156]	; (8002470 <main+0xe0>)
 80023d4:	0011      	movs	r1, r2
 80023d6:	0018      	movs	r0, r3
 80023d8:	f000 f8e4 	bl	80025a4 <dbg_tx>

    uint16_t s_strlen = (uint16_t) strlen ( (const char*) uart_tx_buff ) ;
 80023dc:	4b24      	ldr	r3, [pc, #144]	; (8002470 <main+0xe0>)
 80023de:	0018      	movs	r0, r3
 80023e0:	f7fd fe90 	bl	8000104 <strlen>
 80023e4:	0002      	movs	r2, r0
 80023e6:	1dbb      	adds	r3, r7, #6
 80023e8:	801a      	strh	r2, [r3, #0]
    uint16_t s_sizeof = (uint16_t) sizeof ( uart_tx_buff ) ;
 80023ea:	1d3b      	adds	r3, r7, #4
 80023ec:	2264      	movs	r2, #100	; 0x64
 80023ee:	801a      	strh	r2, [r3, #0]
    uint16_t s_sizeof2 = (uint16_t) ( sizeof ( uart_tx_buff ) / sizeof ( uart_tx_buff[0] ) ) ;
 80023f0:	1cbb      	adds	r3, r7, #2
 80023f2:	2264      	movs	r2, #100	; 0x64
 80023f4:	801a      	strh	r2, [r3, #0]

    sprintf ( (char *)uart_tx_buff , "Value of strlen is: %d\r\n" , s_strlen ) ;
 80023f6:	1dbb      	adds	r3, r7, #6
 80023f8:	881a      	ldrh	r2, [r3, #0]
 80023fa:	491e      	ldr	r1, [pc, #120]	; (8002474 <main+0xe4>)
 80023fc:	4b1c      	ldr	r3, [pc, #112]	; (8002470 <main+0xe0>)
 80023fe:	0018      	movs	r0, r3
 8002400:	f002 fc18 	bl	8004c34 <siprintf>
    dbg_tx ( uart_tx_buff , (uint16_t)strlen ( (const char*)uart_tx_buff ) ) ;
 8002404:	4b1a      	ldr	r3, [pc, #104]	; (8002470 <main+0xe0>)
 8002406:	0018      	movs	r0, r3
 8002408:	f7fd fe7c 	bl	8000104 <strlen>
 800240c:	0003      	movs	r3, r0
 800240e:	b29a      	uxth	r2, r3
 8002410:	4b17      	ldr	r3, [pc, #92]	; (8002470 <main+0xe0>)
 8002412:	0011      	movs	r1, r2
 8002414:	0018      	movs	r0, r3
 8002416:	f000 f8c5 	bl	80025a4 <dbg_tx>
    sprintf ( (char *)uart_tx_buff , "Value of sizeof is: %d\r\n" , s_sizeof ) ;
 800241a:	1d3b      	adds	r3, r7, #4
 800241c:	881a      	ldrh	r2, [r3, #0]
 800241e:	4916      	ldr	r1, [pc, #88]	; (8002478 <main+0xe8>)
 8002420:	4b13      	ldr	r3, [pc, #76]	; (8002470 <main+0xe0>)
 8002422:	0018      	movs	r0, r3
 8002424:	f002 fc06 	bl	8004c34 <siprintf>
    dbg_tx ( uart_tx_buff , (uint16_t)strlen ( (const char*)uart_tx_buff ) ) ;
 8002428:	4b11      	ldr	r3, [pc, #68]	; (8002470 <main+0xe0>)
 800242a:	0018      	movs	r0, r3
 800242c:	f7fd fe6a 	bl	8000104 <strlen>
 8002430:	0003      	movs	r3, r0
 8002432:	b29a      	uxth	r2, r3
 8002434:	4b0e      	ldr	r3, [pc, #56]	; (8002470 <main+0xe0>)
 8002436:	0011      	movs	r1, r2
 8002438:	0018      	movs	r0, r3
 800243a:	f000 f8b3 	bl	80025a4 <dbg_tx>
    sprintf ( (char *)uart_tx_buff , "Value of sizeof2 is: %d\r\n" , s_sizeof2 ) ;
 800243e:	1cbb      	adds	r3, r7, #2
 8002440:	881a      	ldrh	r2, [r3, #0]
 8002442:	490e      	ldr	r1, [pc, #56]	; (800247c <main+0xec>)
 8002444:	4b0a      	ldr	r3, [pc, #40]	; (8002470 <main+0xe0>)
 8002446:	0018      	movs	r0, r3
 8002448:	f002 fbf4 	bl	8004c34 <siprintf>
    dbg_tx ( uart_tx_buff , (uint16_t)strlen ( (const char*)uart_tx_buff ) ) ;
 800244c:	4b08      	ldr	r3, [pc, #32]	; (8002470 <main+0xe0>)
 800244e:	0018      	movs	r0, r3
 8002450:	f7fd fe58 	bl	8000104 <strlen>
 8002454:	0003      	movs	r3, r0
 8002456:	b29a      	uxth	r2, r3
 8002458:	4b05      	ldr	r3, [pc, #20]	; (8002470 <main+0xe0>)
 800245a:	0011      	movs	r1, r2
 800245c:	0018      	movs	r0, r3
 800245e:	f000 f8a1 	bl	80025a4 <dbg_tx>

    /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8002462:	e7fe      	b.n	8002462 <main+0xd2>
 8002464:	20000000 	.word	0x20000000
 8002468:	20000004 	.word	0x20000004
 800246c:	080071f8 	.word	0x080071f8
 8002470:	2000020c 	.word	0x2000020c
 8002474:	08007210 	.word	0x08007210
 8002478:	0800722c 	.word	0x0800722c
 800247c:	08007248 	.word	0x08007248

08002480 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002480:	b590      	push	{r4, r7, lr}
 8002482:	b093      	sub	sp, #76	; 0x4c
 8002484:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002486:	2410      	movs	r4, #16
 8002488:	193b      	adds	r3, r7, r4
 800248a:	0018      	movs	r0, r3
 800248c:	2338      	movs	r3, #56	; 0x38
 800248e:	001a      	movs	r2, r3
 8002490:	2100      	movs	r1, #0
 8002492:	f001 ff4d 	bl	8004330 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002496:	003b      	movs	r3, r7
 8002498:	0018      	movs	r0, r3
 800249a:	2310      	movs	r3, #16
 800249c:	001a      	movs	r2, r3
 800249e:	2100      	movs	r1, #0
 80024a0:	f001 ff46 	bl	8004330 <memset>

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 80024a4:	2380      	movs	r3, #128	; 0x80
 80024a6:	009b      	lsls	r3, r3, #2
 80024a8:	0018      	movs	r0, r3
 80024aa:	f000 fca9 	bl	8002e00 <HAL_PWREx_ControlVoltageScaling>
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80024ae:	193b      	adds	r3, r7, r4
 80024b0:	2202      	movs	r2, #2
 80024b2:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80024b4:	193b      	adds	r3, r7, r4
 80024b6:	2280      	movs	r2, #128	; 0x80
 80024b8:	0052      	lsls	r2, r2, #1
 80024ba:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 80024bc:	193b      	adds	r3, r7, r4
 80024be:	2200      	movs	r2, #0
 80024c0:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80024c2:	193b      	adds	r3, r7, r4
 80024c4:	2240      	movs	r2, #64	; 0x40
 80024c6:	615a      	str	r2, [r3, #20]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80024c8:	193b      	adds	r3, r7, r4
 80024ca:	2200      	movs	r2, #0
 80024cc:	61da      	str	r2, [r3, #28]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80024ce:	193b      	adds	r3, r7, r4
 80024d0:	0018      	movs	r0, r3
 80024d2:	f000 fce1 	bl	8002e98 <HAL_RCC_OscConfig>
 80024d6:	1e03      	subs	r3, r0, #0
 80024d8:	d001      	beq.n	80024de <SystemClock_Config+0x5e>
  {
    Error_Handler();
 80024da:	f000 f87b 	bl	80025d4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80024de:	003b      	movs	r3, r7
 80024e0:	2207      	movs	r2, #7
 80024e2:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80024e4:	003b      	movs	r3, r7
 80024e6:	2200      	movs	r2, #0
 80024e8:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80024ea:	003b      	movs	r3, r7
 80024ec:	2200      	movs	r2, #0
 80024ee:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80024f0:	003b      	movs	r3, r7
 80024f2:	2200      	movs	r2, #0
 80024f4:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80024f6:	003b      	movs	r3, r7
 80024f8:	2100      	movs	r1, #0
 80024fa:	0018      	movs	r0, r3
 80024fc:	f000 ffec 	bl	80034d8 <HAL_RCC_ClockConfig>
 8002500:	1e03      	subs	r3, r0, #0
 8002502:	d001      	beq.n	8002508 <SystemClock_Config+0x88>
  {
    Error_Handler();
 8002504:	f000 f866 	bl	80025d4 <Error_Handler>
  }
}
 8002508:	46c0      	nop			; (mov r8, r8)
 800250a:	46bd      	mov	sp, r7
 800250c:	b013      	add	sp, #76	; 0x4c
 800250e:	bd90      	pop	{r4, r7, pc}

08002510 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002510:	b580      	push	{r7, lr}
 8002512:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002514:	4b16      	ldr	r3, [pc, #88]	; (8002570 <MX_USART2_UART_Init+0x60>)
 8002516:	4a17      	ldr	r2, [pc, #92]	; (8002574 <MX_USART2_UART_Init+0x64>)
 8002518:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800251a:	4b15      	ldr	r3, [pc, #84]	; (8002570 <MX_USART2_UART_Init+0x60>)
 800251c:	2296      	movs	r2, #150	; 0x96
 800251e:	0192      	lsls	r2, r2, #6
 8002520:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002522:	4b13      	ldr	r3, [pc, #76]	; (8002570 <MX_USART2_UART_Init+0x60>)
 8002524:	2200      	movs	r2, #0
 8002526:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002528:	4b11      	ldr	r3, [pc, #68]	; (8002570 <MX_USART2_UART_Init+0x60>)
 800252a:	2200      	movs	r2, #0
 800252c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800252e:	4b10      	ldr	r3, [pc, #64]	; (8002570 <MX_USART2_UART_Init+0x60>)
 8002530:	2200      	movs	r2, #0
 8002532:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002534:	4b0e      	ldr	r3, [pc, #56]	; (8002570 <MX_USART2_UART_Init+0x60>)
 8002536:	220c      	movs	r2, #12
 8002538:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800253a:	4b0d      	ldr	r3, [pc, #52]	; (8002570 <MX_USART2_UART_Init+0x60>)
 800253c:	2200      	movs	r2, #0
 800253e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002540:	4b0b      	ldr	r3, [pc, #44]	; (8002570 <MX_USART2_UART_Init+0x60>)
 8002542:	2200      	movs	r2, #0
 8002544:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002546:	4b0a      	ldr	r3, [pc, #40]	; (8002570 <MX_USART2_UART_Init+0x60>)
 8002548:	2200      	movs	r2, #0
 800254a:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800254c:	4b08      	ldr	r3, [pc, #32]	; (8002570 <MX_USART2_UART_Init+0x60>)
 800254e:	2200      	movs	r2, #0
 8002550:	625a      	str	r2, [r3, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002552:	4b07      	ldr	r3, [pc, #28]	; (8002570 <MX_USART2_UART_Init+0x60>)
 8002554:	2200      	movs	r2, #0
 8002556:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002558:	4b05      	ldr	r3, [pc, #20]	; (8002570 <MX_USART2_UART_Init+0x60>)
 800255a:	0018      	movs	r0, r3
 800255c:	f001 f966 	bl	800382c <HAL_UART_Init>
 8002560:	1e03      	subs	r3, r0, #0
 8002562:	d001      	beq.n	8002568 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 8002564:	f000 f836 	bl	80025d4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002568:	46c0      	nop			; (mov r8, r8)
 800256a:	46bd      	mov	sp, r7
 800256c:	bd80      	pop	{r7, pc}
 800256e:	46c0      	nop			; (mov r8, r8)
 8002570:	20000270 	.word	0x20000270
 8002574:	40004400 	.word	0x40004400

08002578 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002578:	b580      	push	{r7, lr}
 800257a:	b082      	sub	sp, #8
 800257c:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800257e:	4b08      	ldr	r3, [pc, #32]	; (80025a0 <MX_GPIO_Init+0x28>)
 8002580:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002582:	4b07      	ldr	r3, [pc, #28]	; (80025a0 <MX_GPIO_Init+0x28>)
 8002584:	2101      	movs	r1, #1
 8002586:	430a      	orrs	r2, r1
 8002588:	635a      	str	r2, [r3, #52]	; 0x34
 800258a:	4b05      	ldr	r3, [pc, #20]	; (80025a0 <MX_GPIO_Init+0x28>)
 800258c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800258e:	2201      	movs	r2, #1
 8002590:	4013      	ands	r3, r2
 8002592:	607b      	str	r3, [r7, #4]
 8002594:	687b      	ldr	r3, [r7, #4]

}
 8002596:	46c0      	nop			; (mov r8, r8)
 8002598:	46bd      	mov	sp, r7
 800259a:	b002      	add	sp, #8
 800259c:	bd80      	pop	{r7, pc}
 800259e:	46c0      	nop			; (mov r8, r8)
 80025a0:	40021000 	.word	0x40021000

080025a4 <dbg_tx>:

/* USER CODE BEGIN 4 */

// dbg_tx() function implementation
static HAL_StatusTypeDef dbg_tx ( uint8_t* buff , uint16_t len )
{
 80025a4:	b590      	push	{r4, r7, lr}
 80025a6:	b083      	sub	sp, #12
 80025a8:	af00      	add	r7, sp, #0
 80025aa:	6078      	str	r0, [r7, #4]
 80025ac:	000a      	movs	r2, r1
 80025ae:	1cbb      	adds	r3, r7, #2
 80025b0:	801a      	strh	r2, [r3, #0]
    return HAL_UART_Transmit ( &UART_DBG , buff , len , HAL_UART_DBG_TIMEOUT_DUR ) ;
 80025b2:	23fa      	movs	r3, #250	; 0xfa
 80025b4:	009c      	lsls	r4, r3, #2
 80025b6:	1cbb      	adds	r3, r7, #2
 80025b8:	881a      	ldrh	r2, [r3, #0]
 80025ba:	6879      	ldr	r1, [r7, #4]
 80025bc:	4804      	ldr	r0, [pc, #16]	; (80025d0 <dbg_tx+0x2c>)
 80025be:	0023      	movs	r3, r4
 80025c0:	f001 f98a 	bl	80038d8 <HAL_UART_Transmit>
 80025c4:	0003      	movs	r3, r0
}
 80025c6:	0018      	movs	r0, r3
 80025c8:	46bd      	mov	sp, r7
 80025ca:	b003      	add	sp, #12
 80025cc:	bd90      	pop	{r4, r7, pc}
 80025ce:	46c0      	nop			; (mov r8, r8)
 80025d0:	20000270 	.word	0x20000270

080025d4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80025d4:	b580      	push	{r7, lr}
 80025d6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80025d8:	b672      	cpsid	i
}
 80025da:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80025dc:	e7fe      	b.n	80025dc <Error_Handler+0x8>
	...

080025e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80025e0:	b580      	push	{r7, lr}
 80025e2:	b082      	sub	sp, #8
 80025e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80025e6:	4b0f      	ldr	r3, [pc, #60]	; (8002624 <HAL_MspInit+0x44>)
 80025e8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025ea:	4b0e      	ldr	r3, [pc, #56]	; (8002624 <HAL_MspInit+0x44>)
 80025ec:	2101      	movs	r1, #1
 80025ee:	430a      	orrs	r2, r1
 80025f0:	641a      	str	r2, [r3, #64]	; 0x40
 80025f2:	4b0c      	ldr	r3, [pc, #48]	; (8002624 <HAL_MspInit+0x44>)
 80025f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025f6:	2201      	movs	r2, #1
 80025f8:	4013      	ands	r3, r2
 80025fa:	607b      	str	r3, [r7, #4]
 80025fc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80025fe:	4b09      	ldr	r3, [pc, #36]	; (8002624 <HAL_MspInit+0x44>)
 8002600:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002602:	4b08      	ldr	r3, [pc, #32]	; (8002624 <HAL_MspInit+0x44>)
 8002604:	2180      	movs	r1, #128	; 0x80
 8002606:	0549      	lsls	r1, r1, #21
 8002608:	430a      	orrs	r2, r1
 800260a:	63da      	str	r2, [r3, #60]	; 0x3c
 800260c:	4b05      	ldr	r3, [pc, #20]	; (8002624 <HAL_MspInit+0x44>)
 800260e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002610:	2380      	movs	r3, #128	; 0x80
 8002612:	055b      	lsls	r3, r3, #21
 8002614:	4013      	ands	r3, r2
 8002616:	603b      	str	r3, [r7, #0]
 8002618:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800261a:	46c0      	nop			; (mov r8, r8)
 800261c:	46bd      	mov	sp, r7
 800261e:	b002      	add	sp, #8
 8002620:	bd80      	pop	{r7, pc}
 8002622:	46c0      	nop			; (mov r8, r8)
 8002624:	40021000 	.word	0x40021000

08002628 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002628:	b590      	push	{r4, r7, lr}
 800262a:	b08b      	sub	sp, #44	; 0x2c
 800262c:	af00      	add	r7, sp, #0
 800262e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002630:	2414      	movs	r4, #20
 8002632:	193b      	adds	r3, r7, r4
 8002634:	0018      	movs	r0, r3
 8002636:	2314      	movs	r3, #20
 8002638:	001a      	movs	r2, r3
 800263a:	2100      	movs	r1, #0
 800263c:	f001 fe78 	bl	8004330 <memset>
  if(huart->Instance==USART2)
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	681b      	ldr	r3, [r3, #0]
 8002644:	4a1b      	ldr	r2, [pc, #108]	; (80026b4 <HAL_UART_MspInit+0x8c>)
 8002646:	4293      	cmp	r3, r2
 8002648:	d130      	bne.n	80026ac <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800264a:	4b1b      	ldr	r3, [pc, #108]	; (80026b8 <HAL_UART_MspInit+0x90>)
 800264c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800264e:	4b1a      	ldr	r3, [pc, #104]	; (80026b8 <HAL_UART_MspInit+0x90>)
 8002650:	2180      	movs	r1, #128	; 0x80
 8002652:	0289      	lsls	r1, r1, #10
 8002654:	430a      	orrs	r2, r1
 8002656:	63da      	str	r2, [r3, #60]	; 0x3c
 8002658:	4b17      	ldr	r3, [pc, #92]	; (80026b8 <HAL_UART_MspInit+0x90>)
 800265a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800265c:	2380      	movs	r3, #128	; 0x80
 800265e:	029b      	lsls	r3, r3, #10
 8002660:	4013      	ands	r3, r2
 8002662:	613b      	str	r3, [r7, #16]
 8002664:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002666:	4b14      	ldr	r3, [pc, #80]	; (80026b8 <HAL_UART_MspInit+0x90>)
 8002668:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800266a:	4b13      	ldr	r3, [pc, #76]	; (80026b8 <HAL_UART_MspInit+0x90>)
 800266c:	2101      	movs	r1, #1
 800266e:	430a      	orrs	r2, r1
 8002670:	635a      	str	r2, [r3, #52]	; 0x34
 8002672:	4b11      	ldr	r3, [pc, #68]	; (80026b8 <HAL_UART_MspInit+0x90>)
 8002674:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002676:	2201      	movs	r2, #1
 8002678:	4013      	ands	r3, r2
 800267a:	60fb      	str	r3, [r7, #12]
 800267c:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800267e:	0021      	movs	r1, r4
 8002680:	187b      	adds	r3, r7, r1
 8002682:	220c      	movs	r2, #12
 8002684:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002686:	187b      	adds	r3, r7, r1
 8002688:	2202      	movs	r2, #2
 800268a:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800268c:	187b      	adds	r3, r7, r1
 800268e:	2200      	movs	r2, #0
 8002690:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002692:	187b      	adds	r3, r7, r1
 8002694:	2200      	movs	r2, #0
 8002696:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 8002698:	187b      	adds	r3, r7, r1
 800269a:	2201      	movs	r2, #1
 800269c:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800269e:	187a      	adds	r2, r7, r1
 80026a0:	23a0      	movs	r3, #160	; 0xa0
 80026a2:	05db      	lsls	r3, r3, #23
 80026a4:	0011      	movs	r1, r2
 80026a6:	0018      	movs	r0, r3
 80026a8:	f000 fa46 	bl	8002b38 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80026ac:	46c0      	nop			; (mov r8, r8)
 80026ae:	46bd      	mov	sp, r7
 80026b0:	b00b      	add	sp, #44	; 0x2c
 80026b2:	bd90      	pop	{r4, r7, pc}
 80026b4:	40004400 	.word	0x40004400
 80026b8:	40021000 	.word	0x40021000

080026bc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80026bc:	b580      	push	{r7, lr}
 80026be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80026c0:	e7fe      	b.n	80026c0 <NMI_Handler+0x4>

080026c2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80026c2:	b580      	push	{r7, lr}
 80026c4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80026c6:	e7fe      	b.n	80026c6 <HardFault_Handler+0x4>

080026c8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80026c8:	b580      	push	{r7, lr}
 80026ca:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80026cc:	46c0      	nop			; (mov r8, r8)
 80026ce:	46bd      	mov	sp, r7
 80026d0:	bd80      	pop	{r7, pc}

080026d2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80026d2:	b580      	push	{r7, lr}
 80026d4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80026d6:	46c0      	nop			; (mov r8, r8)
 80026d8:	46bd      	mov	sp, r7
 80026da:	bd80      	pop	{r7, pc}

080026dc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80026dc:	b580      	push	{r7, lr}
 80026de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80026e0:	f000 f95a 	bl	8002998 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80026e4:	46c0      	nop			; (mov r8, r8)
 80026e6:	46bd      	mov	sp, r7
 80026e8:	bd80      	pop	{r7, pc}

080026ea <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80026ea:	b580      	push	{r7, lr}
 80026ec:	af00      	add	r7, sp, #0
	return 1;
 80026ee:	2301      	movs	r3, #1
}
 80026f0:	0018      	movs	r0, r3
 80026f2:	46bd      	mov	sp, r7
 80026f4:	bd80      	pop	{r7, pc}

080026f6 <_kill>:

int _kill(int pid, int sig)
{
 80026f6:	b580      	push	{r7, lr}
 80026f8:	b082      	sub	sp, #8
 80026fa:	af00      	add	r7, sp, #0
 80026fc:	6078      	str	r0, [r7, #4]
 80026fe:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002700:	f001 fdec 	bl	80042dc <__errno>
 8002704:	0003      	movs	r3, r0
 8002706:	2216      	movs	r2, #22
 8002708:	601a      	str	r2, [r3, #0]
	return -1;
 800270a:	2301      	movs	r3, #1
 800270c:	425b      	negs	r3, r3
}
 800270e:	0018      	movs	r0, r3
 8002710:	46bd      	mov	sp, r7
 8002712:	b002      	add	sp, #8
 8002714:	bd80      	pop	{r7, pc}

08002716 <_exit>:

void _exit (int status)
{
 8002716:	b580      	push	{r7, lr}
 8002718:	b082      	sub	sp, #8
 800271a:	af00      	add	r7, sp, #0
 800271c:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800271e:	2301      	movs	r3, #1
 8002720:	425a      	negs	r2, r3
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	0011      	movs	r1, r2
 8002726:	0018      	movs	r0, r3
 8002728:	f7ff ffe5 	bl	80026f6 <_kill>
	while (1) {}		/* Make sure we hang here */
 800272c:	e7fe      	b.n	800272c <_exit+0x16>

0800272e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800272e:	b580      	push	{r7, lr}
 8002730:	b086      	sub	sp, #24
 8002732:	af00      	add	r7, sp, #0
 8002734:	60f8      	str	r0, [r7, #12]
 8002736:	60b9      	str	r1, [r7, #8]
 8002738:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800273a:	2300      	movs	r3, #0
 800273c:	617b      	str	r3, [r7, #20]
 800273e:	e00a      	b.n	8002756 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002740:	e000      	b.n	8002744 <_read+0x16>
 8002742:	bf00      	nop
 8002744:	0001      	movs	r1, r0
 8002746:	68bb      	ldr	r3, [r7, #8]
 8002748:	1c5a      	adds	r2, r3, #1
 800274a:	60ba      	str	r2, [r7, #8]
 800274c:	b2ca      	uxtb	r2, r1
 800274e:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002750:	697b      	ldr	r3, [r7, #20]
 8002752:	3301      	adds	r3, #1
 8002754:	617b      	str	r3, [r7, #20]
 8002756:	697a      	ldr	r2, [r7, #20]
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	429a      	cmp	r2, r3
 800275c:	dbf0      	blt.n	8002740 <_read+0x12>
	}

return len;
 800275e:	687b      	ldr	r3, [r7, #4]
}
 8002760:	0018      	movs	r0, r3
 8002762:	46bd      	mov	sp, r7
 8002764:	b006      	add	sp, #24
 8002766:	bd80      	pop	{r7, pc}

08002768 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002768:	b580      	push	{r7, lr}
 800276a:	b086      	sub	sp, #24
 800276c:	af00      	add	r7, sp, #0
 800276e:	60f8      	str	r0, [r7, #12]
 8002770:	60b9      	str	r1, [r7, #8]
 8002772:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002774:	2300      	movs	r3, #0
 8002776:	617b      	str	r3, [r7, #20]
 8002778:	e009      	b.n	800278e <_write+0x26>
	{
		__io_putchar(*ptr++);
 800277a:	68bb      	ldr	r3, [r7, #8]
 800277c:	1c5a      	adds	r2, r3, #1
 800277e:	60ba      	str	r2, [r7, #8]
 8002780:	781b      	ldrb	r3, [r3, #0]
 8002782:	0018      	movs	r0, r3
 8002784:	e000      	b.n	8002788 <_write+0x20>
 8002786:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002788:	697b      	ldr	r3, [r7, #20]
 800278a:	3301      	adds	r3, #1
 800278c:	617b      	str	r3, [r7, #20]
 800278e:	697a      	ldr	r2, [r7, #20]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	429a      	cmp	r2, r3
 8002794:	dbf1      	blt.n	800277a <_write+0x12>
	}
	return len;
 8002796:	687b      	ldr	r3, [r7, #4]
}
 8002798:	0018      	movs	r0, r3
 800279a:	46bd      	mov	sp, r7
 800279c:	b006      	add	sp, #24
 800279e:	bd80      	pop	{r7, pc}

080027a0 <_close>:

int _close(int file)
{
 80027a0:	b580      	push	{r7, lr}
 80027a2:	b082      	sub	sp, #8
 80027a4:	af00      	add	r7, sp, #0
 80027a6:	6078      	str	r0, [r7, #4]
	return -1;
 80027a8:	2301      	movs	r3, #1
 80027aa:	425b      	negs	r3, r3
}
 80027ac:	0018      	movs	r0, r3
 80027ae:	46bd      	mov	sp, r7
 80027b0:	b002      	add	sp, #8
 80027b2:	bd80      	pop	{r7, pc}

080027b4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80027b4:	b580      	push	{r7, lr}
 80027b6:	b082      	sub	sp, #8
 80027b8:	af00      	add	r7, sp, #0
 80027ba:	6078      	str	r0, [r7, #4]
 80027bc:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80027be:	683b      	ldr	r3, [r7, #0]
 80027c0:	2280      	movs	r2, #128	; 0x80
 80027c2:	0192      	lsls	r2, r2, #6
 80027c4:	605a      	str	r2, [r3, #4]
	return 0;
 80027c6:	2300      	movs	r3, #0
}
 80027c8:	0018      	movs	r0, r3
 80027ca:	46bd      	mov	sp, r7
 80027cc:	b002      	add	sp, #8
 80027ce:	bd80      	pop	{r7, pc}

080027d0 <_isatty>:

int _isatty(int file)
{
 80027d0:	b580      	push	{r7, lr}
 80027d2:	b082      	sub	sp, #8
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	6078      	str	r0, [r7, #4]
	return 1;
 80027d8:	2301      	movs	r3, #1
}
 80027da:	0018      	movs	r0, r3
 80027dc:	46bd      	mov	sp, r7
 80027de:	b002      	add	sp, #8
 80027e0:	bd80      	pop	{r7, pc}

080027e2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80027e2:	b580      	push	{r7, lr}
 80027e4:	b084      	sub	sp, #16
 80027e6:	af00      	add	r7, sp, #0
 80027e8:	60f8      	str	r0, [r7, #12]
 80027ea:	60b9      	str	r1, [r7, #8]
 80027ec:	607a      	str	r2, [r7, #4]
	return 0;
 80027ee:	2300      	movs	r3, #0
}
 80027f0:	0018      	movs	r0, r3
 80027f2:	46bd      	mov	sp, r7
 80027f4:	b004      	add	sp, #16
 80027f6:	bd80      	pop	{r7, pc}

080027f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80027f8:	b580      	push	{r7, lr}
 80027fa:	b086      	sub	sp, #24
 80027fc:	af00      	add	r7, sp, #0
 80027fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002800:	4a14      	ldr	r2, [pc, #80]	; (8002854 <_sbrk+0x5c>)
 8002802:	4b15      	ldr	r3, [pc, #84]	; (8002858 <_sbrk+0x60>)
 8002804:	1ad3      	subs	r3, r2, r3
 8002806:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002808:	697b      	ldr	r3, [r7, #20]
 800280a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800280c:	4b13      	ldr	r3, [pc, #76]	; (800285c <_sbrk+0x64>)
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	2b00      	cmp	r3, #0
 8002812:	d102      	bne.n	800281a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002814:	4b11      	ldr	r3, [pc, #68]	; (800285c <_sbrk+0x64>)
 8002816:	4a12      	ldr	r2, [pc, #72]	; (8002860 <_sbrk+0x68>)
 8002818:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800281a:	4b10      	ldr	r3, [pc, #64]	; (800285c <_sbrk+0x64>)
 800281c:	681a      	ldr	r2, [r3, #0]
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	18d3      	adds	r3, r2, r3
 8002822:	693a      	ldr	r2, [r7, #16]
 8002824:	429a      	cmp	r2, r3
 8002826:	d207      	bcs.n	8002838 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002828:	f001 fd58 	bl	80042dc <__errno>
 800282c:	0003      	movs	r3, r0
 800282e:	220c      	movs	r2, #12
 8002830:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002832:	2301      	movs	r3, #1
 8002834:	425b      	negs	r3, r3
 8002836:	e009      	b.n	800284c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002838:	4b08      	ldr	r3, [pc, #32]	; (800285c <_sbrk+0x64>)
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800283e:	4b07      	ldr	r3, [pc, #28]	; (800285c <_sbrk+0x64>)
 8002840:	681a      	ldr	r2, [r3, #0]
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	18d2      	adds	r2, r2, r3
 8002846:	4b05      	ldr	r3, [pc, #20]	; (800285c <_sbrk+0x64>)
 8002848:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800284a:	68fb      	ldr	r3, [r7, #12]
}
 800284c:	0018      	movs	r0, r3
 800284e:	46bd      	mov	sp, r7
 8002850:	b006      	add	sp, #24
 8002852:	bd80      	pop	{r7, pc}
 8002854:	20002000 	.word	0x20002000
 8002858:	00000400 	.word	0x00000400
 800285c:	20000200 	.word	0x20000200
 8002860:	20000318 	.word	0x20000318

08002864 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002864:	b580      	push	{r7, lr}
 8002866:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002868:	46c0      	nop			; (mov r8, r8)
 800286a:	46bd      	mov	sp, r7
 800286c:	bd80      	pop	{r7, pc}
	...

08002870 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002870:	480d      	ldr	r0, [pc, #52]	; (80028a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002872:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 8002874:	f7ff fff6 	bl	8002864 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002878:	480c      	ldr	r0, [pc, #48]	; (80028ac <LoopForever+0x6>)
  ldr r1, =_edata
 800287a:	490d      	ldr	r1, [pc, #52]	; (80028b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800287c:	4a0d      	ldr	r2, [pc, #52]	; (80028b4 <LoopForever+0xe>)
  movs r3, #0
 800287e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002880:	e002      	b.n	8002888 <LoopCopyDataInit>

08002882 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002882:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002884:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002886:	3304      	adds	r3, #4

08002888 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002888:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800288a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800288c:	d3f9      	bcc.n	8002882 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800288e:	4a0a      	ldr	r2, [pc, #40]	; (80028b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002890:	4c0a      	ldr	r4, [pc, #40]	; (80028bc <LoopForever+0x16>)
  movs r3, #0
 8002892:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002894:	e001      	b.n	800289a <LoopFillZerobss>

08002896 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002896:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002898:	3204      	adds	r2, #4

0800289a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800289a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800289c:	d3fb      	bcc.n	8002896 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800289e:	f001 fd23 	bl	80042e8 <__libc_init_array>
/* Call the application s entry point.*/
  bl main
 80028a2:	f7ff fd75 	bl	8002390 <main>

080028a6 <LoopForever>:

LoopForever:
  b LoopForever
 80028a6:	e7fe      	b.n	80028a6 <LoopForever>
  ldr   r0, =_estack
 80028a8:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80028ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80028b0:	200001e4 	.word	0x200001e4
  ldr r2, =_sidata
 80028b4:	0800774c 	.word	0x0800774c
  ldr r2, =_sbss
 80028b8:	200001e4 	.word	0x200001e4
  ldr r4, =_ebss
 80028bc:	20000314 	.word	0x20000314

080028c0 <ADC1_IRQHandler>:
 * @retval None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80028c0:	e7fe      	b.n	80028c0 <ADC1_IRQHandler>
	...

080028c4 <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80028c4:	b580      	push	{r7, lr}
 80028c6:	b082      	sub	sp, #8
 80028c8:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 80028ca:	1dfb      	adds	r3, r7, #7
 80028cc:	2200      	movs	r2, #0
 80028ce:	701a      	strb	r2, [r3, #0]
#if (INSTRUCTION_CACHE_ENABLE == 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80028d0:	4b0b      	ldr	r3, [pc, #44]	; (8002900 <HAL_Init+0x3c>)
 80028d2:	681a      	ldr	r2, [r3, #0]
 80028d4:	4b0a      	ldr	r3, [pc, #40]	; (8002900 <HAL_Init+0x3c>)
 80028d6:	2180      	movs	r1, #128	; 0x80
 80028d8:	0049      	lsls	r1, r1, #1
 80028da:	430a      	orrs	r2, r1
 80028dc:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80028de:	2003      	movs	r0, #3
 80028e0:	f000 f810 	bl	8002904 <HAL_InitTick>
 80028e4:	1e03      	subs	r3, r0, #0
 80028e6:	d003      	beq.n	80028f0 <HAL_Init+0x2c>
  {
    status = HAL_ERROR;
 80028e8:	1dfb      	adds	r3, r7, #7
 80028ea:	2201      	movs	r2, #1
 80028ec:	701a      	strb	r2, [r3, #0]
 80028ee:	e001      	b.n	80028f4 <HAL_Init+0x30>
  }
  else
  {
  /* Init the low level hardware */
  HAL_MspInit();
 80028f0:	f7ff fe76 	bl	80025e0 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 80028f4:	1dfb      	adds	r3, r7, #7
 80028f6:	781b      	ldrb	r3, [r3, #0]
}
 80028f8:	0018      	movs	r0, r3
 80028fa:	46bd      	mov	sp, r7
 80028fc:	b002      	add	sp, #8
 80028fe:	bd80      	pop	{r7, pc}
 8002900:	40022000 	.word	0x40022000

08002904 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002904:	b590      	push	{r4, r7, lr}
 8002906:	b085      	sub	sp, #20
 8002908:	af00      	add	r7, sp, #0
 800290a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 800290c:	230f      	movs	r3, #15
 800290e:	18fb      	adds	r3, r7, r3
 8002910:	2200      	movs	r2, #0
 8002912:	701a      	strb	r2, [r3, #0]

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/ 
  if ((uint32_t)uwTickFreq != 0U)
 8002914:	4b1d      	ldr	r3, [pc, #116]	; (800298c <HAL_InitTick+0x88>)
 8002916:	781b      	ldrb	r3, [r3, #0]
 8002918:	2b00      	cmp	r3, #0
 800291a:	d02b      	beq.n	8002974 <HAL_InitTick+0x70>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /(uint32_t)uwTickFreq)) == 0U)
 800291c:	4b1c      	ldr	r3, [pc, #112]	; (8002990 <HAL_InitTick+0x8c>)
 800291e:	681c      	ldr	r4, [r3, #0]
 8002920:	4b1a      	ldr	r3, [pc, #104]	; (800298c <HAL_InitTick+0x88>)
 8002922:	781b      	ldrb	r3, [r3, #0]
 8002924:	0019      	movs	r1, r3
 8002926:	23fa      	movs	r3, #250	; 0xfa
 8002928:	0098      	lsls	r0, r3, #2
 800292a:	f7fd fc07 	bl	800013c <__udivsi3>
 800292e:	0003      	movs	r3, r0
 8002930:	0019      	movs	r1, r3
 8002932:	0020      	movs	r0, r4
 8002934:	f7fd fc02 	bl	800013c <__udivsi3>
 8002938:	0003      	movs	r3, r0
 800293a:	0018      	movs	r0, r3
 800293c:	f000 f8ef 	bl	8002b1e <HAL_SYSTICK_Config>
 8002940:	1e03      	subs	r3, r0, #0
 8002942:	d112      	bne.n	800296a <HAL_InitTick+0x66>
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	2b03      	cmp	r3, #3
 8002948:	d80a      	bhi.n	8002960 <HAL_InitTick+0x5c>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800294a:	6879      	ldr	r1, [r7, #4]
 800294c:	2301      	movs	r3, #1
 800294e:	425b      	negs	r3, r3
 8002950:	2200      	movs	r2, #0
 8002952:	0018      	movs	r0, r3
 8002954:	f000 f8ce 	bl	8002af4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002958:	4b0e      	ldr	r3, [pc, #56]	; (8002994 <HAL_InitTick+0x90>)
 800295a:	687a      	ldr	r2, [r7, #4]
 800295c:	601a      	str	r2, [r3, #0]
 800295e:	e00d      	b.n	800297c <HAL_InitTick+0x78>
      }
      else
      {
        status = HAL_ERROR;
 8002960:	230f      	movs	r3, #15
 8002962:	18fb      	adds	r3, r7, r3
 8002964:	2201      	movs	r2, #1
 8002966:	701a      	strb	r2, [r3, #0]
 8002968:	e008      	b.n	800297c <HAL_InitTick+0x78>
      }
    }
    else
    {
      status = HAL_ERROR;
 800296a:	230f      	movs	r3, #15
 800296c:	18fb      	adds	r3, r7, r3
 800296e:	2201      	movs	r2, #1
 8002970:	701a      	strb	r2, [r3, #0]
 8002972:	e003      	b.n	800297c <HAL_InitTick+0x78>
    }
  }
  else
  {
    status = HAL_ERROR;
 8002974:	230f      	movs	r3, #15
 8002976:	18fb      	adds	r3, r7, r3
 8002978:	2201      	movs	r2, #1
 800297a:	701a      	strb	r2, [r3, #0]
  }

  /* Return function status */
  return status;
 800297c:	230f      	movs	r3, #15
 800297e:	18fb      	adds	r3, r7, r3
 8002980:	781b      	ldrb	r3, [r3, #0]
}
 8002982:	0018      	movs	r0, r3
 8002984:	46bd      	mov	sp, r7
 8002986:	b005      	add	sp, #20
 8002988:	bd90      	pop	{r4, r7, pc}
 800298a:	46c0      	nop			; (mov r8, r8)
 800298c:	20000010 	.word	0x20000010
 8002990:	20000008 	.word	0x20000008
 8002994:	2000000c 	.word	0x2000000c

08002998 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002998:	b580      	push	{r7, lr}
 800299a:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 800299c:	4b05      	ldr	r3, [pc, #20]	; (80029b4 <HAL_IncTick+0x1c>)
 800299e:	781b      	ldrb	r3, [r3, #0]
 80029a0:	001a      	movs	r2, r3
 80029a2:	4b05      	ldr	r3, [pc, #20]	; (80029b8 <HAL_IncTick+0x20>)
 80029a4:	681b      	ldr	r3, [r3, #0]
 80029a6:	18d2      	adds	r2, r2, r3
 80029a8:	4b03      	ldr	r3, [pc, #12]	; (80029b8 <HAL_IncTick+0x20>)
 80029aa:	601a      	str	r2, [r3, #0]
}
 80029ac:	46c0      	nop			; (mov r8, r8)
 80029ae:	46bd      	mov	sp, r7
 80029b0:	bd80      	pop	{r7, pc}
 80029b2:	46c0      	nop			; (mov r8, r8)
 80029b4:	20000010 	.word	0x20000010
 80029b8:	20000300 	.word	0x20000300

080029bc <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80029bc:	b580      	push	{r7, lr}
 80029be:	af00      	add	r7, sp, #0
  return uwTick;
 80029c0:	4b02      	ldr	r3, [pc, #8]	; (80029cc <HAL_GetTick+0x10>)
 80029c2:	681b      	ldr	r3, [r3, #0]
}
 80029c4:	0018      	movs	r0, r3
 80029c6:	46bd      	mov	sp, r7
 80029c8:	bd80      	pop	{r7, pc}
 80029ca:	46c0      	nop			; (mov r8, r8)
 80029cc:	20000300 	.word	0x20000300

080029d0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80029d0:	b590      	push	{r4, r7, lr}
 80029d2:	b083      	sub	sp, #12
 80029d4:	af00      	add	r7, sp, #0
 80029d6:	0002      	movs	r2, r0
 80029d8:	6039      	str	r1, [r7, #0]
 80029da:	1dfb      	adds	r3, r7, #7
 80029dc:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80029de:	1dfb      	adds	r3, r7, #7
 80029e0:	781b      	ldrb	r3, [r3, #0]
 80029e2:	2b7f      	cmp	r3, #127	; 0x7f
 80029e4:	d828      	bhi.n	8002a38 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80029e6:	4a2f      	ldr	r2, [pc, #188]	; (8002aa4 <__NVIC_SetPriority+0xd4>)
 80029e8:	1dfb      	adds	r3, r7, #7
 80029ea:	781b      	ldrb	r3, [r3, #0]
 80029ec:	b25b      	sxtb	r3, r3
 80029ee:	089b      	lsrs	r3, r3, #2
 80029f0:	33c0      	adds	r3, #192	; 0xc0
 80029f2:	009b      	lsls	r3, r3, #2
 80029f4:	589b      	ldr	r3, [r3, r2]
 80029f6:	1dfa      	adds	r2, r7, #7
 80029f8:	7812      	ldrb	r2, [r2, #0]
 80029fa:	0011      	movs	r1, r2
 80029fc:	2203      	movs	r2, #3
 80029fe:	400a      	ands	r2, r1
 8002a00:	00d2      	lsls	r2, r2, #3
 8002a02:	21ff      	movs	r1, #255	; 0xff
 8002a04:	4091      	lsls	r1, r2
 8002a06:	000a      	movs	r2, r1
 8002a08:	43d2      	mvns	r2, r2
 8002a0a:	401a      	ands	r2, r3
 8002a0c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002a0e:	683b      	ldr	r3, [r7, #0]
 8002a10:	019b      	lsls	r3, r3, #6
 8002a12:	22ff      	movs	r2, #255	; 0xff
 8002a14:	401a      	ands	r2, r3
 8002a16:	1dfb      	adds	r3, r7, #7
 8002a18:	781b      	ldrb	r3, [r3, #0]
 8002a1a:	0018      	movs	r0, r3
 8002a1c:	2303      	movs	r3, #3
 8002a1e:	4003      	ands	r3, r0
 8002a20:	00db      	lsls	r3, r3, #3
 8002a22:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002a24:	481f      	ldr	r0, [pc, #124]	; (8002aa4 <__NVIC_SetPriority+0xd4>)
 8002a26:	1dfb      	adds	r3, r7, #7
 8002a28:	781b      	ldrb	r3, [r3, #0]
 8002a2a:	b25b      	sxtb	r3, r3
 8002a2c:	089b      	lsrs	r3, r3, #2
 8002a2e:	430a      	orrs	r2, r1
 8002a30:	33c0      	adds	r3, #192	; 0xc0
 8002a32:	009b      	lsls	r3, r3, #2
 8002a34:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8002a36:	e031      	b.n	8002a9c <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002a38:	4a1b      	ldr	r2, [pc, #108]	; (8002aa8 <__NVIC_SetPriority+0xd8>)
 8002a3a:	1dfb      	adds	r3, r7, #7
 8002a3c:	781b      	ldrb	r3, [r3, #0]
 8002a3e:	0019      	movs	r1, r3
 8002a40:	230f      	movs	r3, #15
 8002a42:	400b      	ands	r3, r1
 8002a44:	3b08      	subs	r3, #8
 8002a46:	089b      	lsrs	r3, r3, #2
 8002a48:	3306      	adds	r3, #6
 8002a4a:	009b      	lsls	r3, r3, #2
 8002a4c:	18d3      	adds	r3, r2, r3
 8002a4e:	3304      	adds	r3, #4
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	1dfa      	adds	r2, r7, #7
 8002a54:	7812      	ldrb	r2, [r2, #0]
 8002a56:	0011      	movs	r1, r2
 8002a58:	2203      	movs	r2, #3
 8002a5a:	400a      	ands	r2, r1
 8002a5c:	00d2      	lsls	r2, r2, #3
 8002a5e:	21ff      	movs	r1, #255	; 0xff
 8002a60:	4091      	lsls	r1, r2
 8002a62:	000a      	movs	r2, r1
 8002a64:	43d2      	mvns	r2, r2
 8002a66:	401a      	ands	r2, r3
 8002a68:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002a6a:	683b      	ldr	r3, [r7, #0]
 8002a6c:	019b      	lsls	r3, r3, #6
 8002a6e:	22ff      	movs	r2, #255	; 0xff
 8002a70:	401a      	ands	r2, r3
 8002a72:	1dfb      	adds	r3, r7, #7
 8002a74:	781b      	ldrb	r3, [r3, #0]
 8002a76:	0018      	movs	r0, r3
 8002a78:	2303      	movs	r3, #3
 8002a7a:	4003      	ands	r3, r0
 8002a7c:	00db      	lsls	r3, r3, #3
 8002a7e:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002a80:	4809      	ldr	r0, [pc, #36]	; (8002aa8 <__NVIC_SetPriority+0xd8>)
 8002a82:	1dfb      	adds	r3, r7, #7
 8002a84:	781b      	ldrb	r3, [r3, #0]
 8002a86:	001c      	movs	r4, r3
 8002a88:	230f      	movs	r3, #15
 8002a8a:	4023      	ands	r3, r4
 8002a8c:	3b08      	subs	r3, #8
 8002a8e:	089b      	lsrs	r3, r3, #2
 8002a90:	430a      	orrs	r2, r1
 8002a92:	3306      	adds	r3, #6
 8002a94:	009b      	lsls	r3, r3, #2
 8002a96:	18c3      	adds	r3, r0, r3
 8002a98:	3304      	adds	r3, #4
 8002a9a:	601a      	str	r2, [r3, #0]
}
 8002a9c:	46c0      	nop			; (mov r8, r8)
 8002a9e:	46bd      	mov	sp, r7
 8002aa0:	b003      	add	sp, #12
 8002aa2:	bd90      	pop	{r4, r7, pc}
 8002aa4:	e000e100 	.word	0xe000e100
 8002aa8:	e000ed00 	.word	0xe000ed00

08002aac <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002aac:	b580      	push	{r7, lr}
 8002aae:	b082      	sub	sp, #8
 8002ab0:	af00      	add	r7, sp, #0
 8002ab2:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	1e5a      	subs	r2, r3, #1
 8002ab8:	2380      	movs	r3, #128	; 0x80
 8002aba:	045b      	lsls	r3, r3, #17
 8002abc:	429a      	cmp	r2, r3
 8002abe:	d301      	bcc.n	8002ac4 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002ac0:	2301      	movs	r3, #1
 8002ac2:	e010      	b.n	8002ae6 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002ac4:	4b0a      	ldr	r3, [pc, #40]	; (8002af0 <SysTick_Config+0x44>)
 8002ac6:	687a      	ldr	r2, [r7, #4]
 8002ac8:	3a01      	subs	r2, #1
 8002aca:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002acc:	2301      	movs	r3, #1
 8002ace:	425b      	negs	r3, r3
 8002ad0:	2103      	movs	r1, #3
 8002ad2:	0018      	movs	r0, r3
 8002ad4:	f7ff ff7c 	bl	80029d0 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002ad8:	4b05      	ldr	r3, [pc, #20]	; (8002af0 <SysTick_Config+0x44>)
 8002ada:	2200      	movs	r2, #0
 8002adc:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002ade:	4b04      	ldr	r3, [pc, #16]	; (8002af0 <SysTick_Config+0x44>)
 8002ae0:	2207      	movs	r2, #7
 8002ae2:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002ae4:	2300      	movs	r3, #0
}
 8002ae6:	0018      	movs	r0, r3
 8002ae8:	46bd      	mov	sp, r7
 8002aea:	b002      	add	sp, #8
 8002aec:	bd80      	pop	{r7, pc}
 8002aee:	46c0      	nop			; (mov r8, r8)
 8002af0:	e000e010 	.word	0xe000e010

08002af4 <HAL_NVIC_SetPriority>:
  *         with stm32g0xx devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002af4:	b580      	push	{r7, lr}
 8002af6:	b084      	sub	sp, #16
 8002af8:	af00      	add	r7, sp, #0
 8002afa:	60b9      	str	r1, [r7, #8]
 8002afc:	607a      	str	r2, [r7, #4]
 8002afe:	210f      	movs	r1, #15
 8002b00:	187b      	adds	r3, r7, r1
 8002b02:	1c02      	adds	r2, r0, #0
 8002b04:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8002b06:	68ba      	ldr	r2, [r7, #8]
 8002b08:	187b      	adds	r3, r7, r1
 8002b0a:	781b      	ldrb	r3, [r3, #0]
 8002b0c:	b25b      	sxtb	r3, r3
 8002b0e:	0011      	movs	r1, r2
 8002b10:	0018      	movs	r0, r3
 8002b12:	f7ff ff5d 	bl	80029d0 <__NVIC_SetPriority>
}
 8002b16:	46c0      	nop			; (mov r8, r8)
 8002b18:	46bd      	mov	sp, r7
 8002b1a:	b004      	add	sp, #16
 8002b1c:	bd80      	pop	{r7, pc}

08002b1e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8002b1e:	b580      	push	{r7, lr}
 8002b20:	b082      	sub	sp, #8
 8002b22:	af00      	add	r7, sp, #0
 8002b24:	6078      	str	r0, [r7, #4]
  return SysTick_Config(TicksNumb);
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	0018      	movs	r0, r3
 8002b2a:	f7ff ffbf 	bl	8002aac <SysTick_Config>
 8002b2e:	0003      	movs	r3, r0
}
 8002b30:	0018      	movs	r0, r3
 8002b32:	46bd      	mov	sp, r7
 8002b34:	b002      	add	sp, #8
 8002b36:	bd80      	pop	{r7, pc}

08002b38 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002b38:	b580      	push	{r7, lr}
 8002b3a:	b086      	sub	sp, #24
 8002b3c:	af00      	add	r7, sp, #0
 8002b3e:	6078      	str	r0, [r7, #4]
 8002b40:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8002b42:	2300      	movs	r3, #0
 8002b44:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8002b46:	e147      	b.n	8002dd8 <HAL_GPIO_Init+0x2a0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8002b48:	683b      	ldr	r3, [r7, #0]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	2101      	movs	r1, #1
 8002b4e:	697a      	ldr	r2, [r7, #20]
 8002b50:	4091      	lsls	r1, r2
 8002b52:	000a      	movs	r2, r1
 8002b54:	4013      	ands	r3, r2
 8002b56:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d100      	bne.n	8002b60 <HAL_GPIO_Init+0x28>
 8002b5e:	e138      	b.n	8002dd2 <HAL_GPIO_Init+0x29a>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8002b60:	683b      	ldr	r3, [r7, #0]
 8002b62:	685b      	ldr	r3, [r3, #4]
 8002b64:	2203      	movs	r2, #3
 8002b66:	4013      	ands	r3, r2
 8002b68:	2b01      	cmp	r3, #1
 8002b6a:	d005      	beq.n	8002b78 <HAL_GPIO_Init+0x40>
 8002b6c:	683b      	ldr	r3, [r7, #0]
 8002b6e:	685b      	ldr	r3, [r3, #4]
 8002b70:	2203      	movs	r2, #3
 8002b72:	4013      	ands	r3, r2
 8002b74:	2b02      	cmp	r3, #2
 8002b76:	d130      	bne.n	8002bda <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	689b      	ldr	r3, [r3, #8]
 8002b7c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8002b7e:	697b      	ldr	r3, [r7, #20]
 8002b80:	005b      	lsls	r3, r3, #1
 8002b82:	2203      	movs	r2, #3
 8002b84:	409a      	lsls	r2, r3
 8002b86:	0013      	movs	r3, r2
 8002b88:	43da      	mvns	r2, r3
 8002b8a:	693b      	ldr	r3, [r7, #16]
 8002b8c:	4013      	ands	r3, r2
 8002b8e:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8002b90:	683b      	ldr	r3, [r7, #0]
 8002b92:	68da      	ldr	r2, [r3, #12]
 8002b94:	697b      	ldr	r3, [r7, #20]
 8002b96:	005b      	lsls	r3, r3, #1
 8002b98:	409a      	lsls	r2, r3
 8002b9a:	0013      	movs	r3, r2
 8002b9c:	693a      	ldr	r2, [r7, #16]
 8002b9e:	4313      	orrs	r3, r2
 8002ba0:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	693a      	ldr	r2, [r7, #16]
 8002ba6:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	685b      	ldr	r3, [r3, #4]
 8002bac:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8002bae:	2201      	movs	r2, #1
 8002bb0:	697b      	ldr	r3, [r7, #20]
 8002bb2:	409a      	lsls	r2, r3
 8002bb4:	0013      	movs	r3, r2
 8002bb6:	43da      	mvns	r2, r3
 8002bb8:	693b      	ldr	r3, [r7, #16]
 8002bba:	4013      	ands	r3, r2
 8002bbc:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002bbe:	683b      	ldr	r3, [r7, #0]
 8002bc0:	685b      	ldr	r3, [r3, #4]
 8002bc2:	091b      	lsrs	r3, r3, #4
 8002bc4:	2201      	movs	r2, #1
 8002bc6:	401a      	ands	r2, r3
 8002bc8:	697b      	ldr	r3, [r7, #20]
 8002bca:	409a      	lsls	r2, r3
 8002bcc:	0013      	movs	r3, r2
 8002bce:	693a      	ldr	r2, [r7, #16]
 8002bd0:	4313      	orrs	r3, r2
 8002bd2:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	693a      	ldr	r2, [r7, #16]
 8002bd8:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002bda:	683b      	ldr	r3, [r7, #0]
 8002bdc:	685b      	ldr	r3, [r3, #4]
 8002bde:	2203      	movs	r2, #3
 8002be0:	4013      	ands	r3, r2
 8002be2:	2b03      	cmp	r3, #3
 8002be4:	d017      	beq.n	8002c16 <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	68db      	ldr	r3, [r3, #12]
 8002bea:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 8002bec:	697b      	ldr	r3, [r7, #20]
 8002bee:	005b      	lsls	r3, r3, #1
 8002bf0:	2203      	movs	r2, #3
 8002bf2:	409a      	lsls	r2, r3
 8002bf4:	0013      	movs	r3, r2
 8002bf6:	43da      	mvns	r2, r3
 8002bf8:	693b      	ldr	r3, [r7, #16]
 8002bfa:	4013      	ands	r3, r2
 8002bfc:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8002bfe:	683b      	ldr	r3, [r7, #0]
 8002c00:	689a      	ldr	r2, [r3, #8]
 8002c02:	697b      	ldr	r3, [r7, #20]
 8002c04:	005b      	lsls	r3, r3, #1
 8002c06:	409a      	lsls	r2, r3
 8002c08:	0013      	movs	r3, r2
 8002c0a:	693a      	ldr	r2, [r7, #16]
 8002c0c:	4313      	orrs	r3, r2
 8002c0e:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	693a      	ldr	r2, [r7, #16]
 8002c14:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002c16:	683b      	ldr	r3, [r7, #0]
 8002c18:	685b      	ldr	r3, [r3, #4]
 8002c1a:	2203      	movs	r2, #3
 8002c1c:	4013      	ands	r3, r2
 8002c1e:	2b02      	cmp	r3, #2
 8002c20:	d123      	bne.n	8002c6a <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8002c22:	697b      	ldr	r3, [r7, #20]
 8002c24:	08da      	lsrs	r2, r3, #3
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	3208      	adds	r2, #8
 8002c2a:	0092      	lsls	r2, r2, #2
 8002c2c:	58d3      	ldr	r3, [r2, r3]
 8002c2e:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8002c30:	697b      	ldr	r3, [r7, #20]
 8002c32:	2207      	movs	r2, #7
 8002c34:	4013      	ands	r3, r2
 8002c36:	009b      	lsls	r3, r3, #2
 8002c38:	220f      	movs	r2, #15
 8002c3a:	409a      	lsls	r2, r3
 8002c3c:	0013      	movs	r3, r2
 8002c3e:	43da      	mvns	r2, r3
 8002c40:	693b      	ldr	r3, [r7, #16]
 8002c42:	4013      	ands	r3, r2
 8002c44:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8002c46:	683b      	ldr	r3, [r7, #0]
 8002c48:	691a      	ldr	r2, [r3, #16]
 8002c4a:	697b      	ldr	r3, [r7, #20]
 8002c4c:	2107      	movs	r1, #7
 8002c4e:	400b      	ands	r3, r1
 8002c50:	009b      	lsls	r3, r3, #2
 8002c52:	409a      	lsls	r2, r3
 8002c54:	0013      	movs	r3, r2
 8002c56:	693a      	ldr	r2, [r7, #16]
 8002c58:	4313      	orrs	r3, r2
 8002c5a:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8002c5c:	697b      	ldr	r3, [r7, #20]
 8002c5e:	08da      	lsrs	r2, r3, #3
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	3208      	adds	r2, #8
 8002c64:	0092      	lsls	r2, r2, #2
 8002c66:	6939      	ldr	r1, [r7, #16]
 8002c68:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8002c70:	697b      	ldr	r3, [r7, #20]
 8002c72:	005b      	lsls	r3, r3, #1
 8002c74:	2203      	movs	r2, #3
 8002c76:	409a      	lsls	r2, r3
 8002c78:	0013      	movs	r3, r2
 8002c7a:	43da      	mvns	r2, r3
 8002c7c:	693b      	ldr	r3, [r7, #16]
 8002c7e:	4013      	ands	r3, r2
 8002c80:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8002c82:	683b      	ldr	r3, [r7, #0]
 8002c84:	685b      	ldr	r3, [r3, #4]
 8002c86:	2203      	movs	r2, #3
 8002c88:	401a      	ands	r2, r3
 8002c8a:	697b      	ldr	r3, [r7, #20]
 8002c8c:	005b      	lsls	r3, r3, #1
 8002c8e:	409a      	lsls	r2, r3
 8002c90:	0013      	movs	r3, r2
 8002c92:	693a      	ldr	r2, [r7, #16]
 8002c94:	4313      	orrs	r3, r2
 8002c96:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	693a      	ldr	r2, [r7, #16]
 8002c9c:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8002c9e:	683b      	ldr	r3, [r7, #0]
 8002ca0:	685a      	ldr	r2, [r3, #4]
 8002ca2:	23c0      	movs	r3, #192	; 0xc0
 8002ca4:	029b      	lsls	r3, r3, #10
 8002ca6:	4013      	ands	r3, r2
 8002ca8:	d100      	bne.n	8002cac <HAL_GPIO_Init+0x174>
 8002caa:	e092      	b.n	8002dd2 <HAL_GPIO_Init+0x29a>
      {
        temp = EXTI->EXTICR[position >> 2u];
 8002cac:	4a50      	ldr	r2, [pc, #320]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002cae:	697b      	ldr	r3, [r7, #20]
 8002cb0:	089b      	lsrs	r3, r3, #2
 8002cb2:	3318      	adds	r3, #24
 8002cb4:	009b      	lsls	r3, r3, #2
 8002cb6:	589b      	ldr	r3, [r3, r2]
 8002cb8:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 8002cba:	697b      	ldr	r3, [r7, #20]
 8002cbc:	2203      	movs	r2, #3
 8002cbe:	4013      	ands	r3, r2
 8002cc0:	00db      	lsls	r3, r3, #3
 8002cc2:	220f      	movs	r2, #15
 8002cc4:	409a      	lsls	r2, r3
 8002cc6:	0013      	movs	r3, r2
 8002cc8:	43da      	mvns	r2, r3
 8002cca:	693b      	ldr	r3, [r7, #16]
 8002ccc:	4013      	ands	r3, r2
 8002cce:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 8002cd0:	687a      	ldr	r2, [r7, #4]
 8002cd2:	23a0      	movs	r3, #160	; 0xa0
 8002cd4:	05db      	lsls	r3, r3, #23
 8002cd6:	429a      	cmp	r2, r3
 8002cd8:	d013      	beq.n	8002d02 <HAL_GPIO_Init+0x1ca>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	4a45      	ldr	r2, [pc, #276]	; (8002df4 <HAL_GPIO_Init+0x2bc>)
 8002cde:	4293      	cmp	r3, r2
 8002ce0:	d00d      	beq.n	8002cfe <HAL_GPIO_Init+0x1c6>
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	4a44      	ldr	r2, [pc, #272]	; (8002df8 <HAL_GPIO_Init+0x2c0>)
 8002ce6:	4293      	cmp	r3, r2
 8002ce8:	d007      	beq.n	8002cfa <HAL_GPIO_Init+0x1c2>
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	4a43      	ldr	r2, [pc, #268]	; (8002dfc <HAL_GPIO_Init+0x2c4>)
 8002cee:	4293      	cmp	r3, r2
 8002cf0:	d101      	bne.n	8002cf6 <HAL_GPIO_Init+0x1be>
 8002cf2:	2303      	movs	r3, #3
 8002cf4:	e006      	b.n	8002d04 <HAL_GPIO_Init+0x1cc>
 8002cf6:	2305      	movs	r3, #5
 8002cf8:	e004      	b.n	8002d04 <HAL_GPIO_Init+0x1cc>
 8002cfa:	2302      	movs	r3, #2
 8002cfc:	e002      	b.n	8002d04 <HAL_GPIO_Init+0x1cc>
 8002cfe:	2301      	movs	r3, #1
 8002d00:	e000      	b.n	8002d04 <HAL_GPIO_Init+0x1cc>
 8002d02:	2300      	movs	r3, #0
 8002d04:	697a      	ldr	r2, [r7, #20]
 8002d06:	2103      	movs	r1, #3
 8002d08:	400a      	ands	r2, r1
 8002d0a:	00d2      	lsls	r2, r2, #3
 8002d0c:	4093      	lsls	r3, r2
 8002d0e:	693a      	ldr	r2, [r7, #16]
 8002d10:	4313      	orrs	r3, r2
 8002d12:	613b      	str	r3, [r7, #16]
        EXTI->EXTICR[position >> 2u] = temp;
 8002d14:	4936      	ldr	r1, [pc, #216]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002d16:	697b      	ldr	r3, [r7, #20]
 8002d18:	089b      	lsrs	r3, r3, #2
 8002d1a:	3318      	adds	r3, #24
 8002d1c:	009b      	lsls	r3, r3, #2
 8002d1e:	693a      	ldr	r2, [r7, #16]
 8002d20:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR1;
 8002d22:	4a33      	ldr	r2, [pc, #204]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002d24:	2380      	movs	r3, #128	; 0x80
 8002d26:	58d3      	ldr	r3, [r2, r3]
 8002d28:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002d2a:	68fb      	ldr	r3, [r7, #12]
 8002d2c:	43da      	mvns	r2, r3
 8002d2e:	693b      	ldr	r3, [r7, #16]
 8002d30:	4013      	ands	r3, r2
 8002d32:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8002d34:	683b      	ldr	r3, [r7, #0]
 8002d36:	685a      	ldr	r2, [r3, #4]
 8002d38:	2380      	movs	r3, #128	; 0x80
 8002d3a:	025b      	lsls	r3, r3, #9
 8002d3c:	4013      	ands	r3, r2
 8002d3e:	d003      	beq.n	8002d48 <HAL_GPIO_Init+0x210>
        {
          temp |= iocurrent;
 8002d40:	693a      	ldr	r2, [r7, #16]
 8002d42:	68fb      	ldr	r3, [r7, #12]
 8002d44:	4313      	orrs	r3, r2
 8002d46:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR1 = temp;
 8002d48:	4929      	ldr	r1, [pc, #164]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002d4a:	2280      	movs	r2, #128	; 0x80
 8002d4c:	693b      	ldr	r3, [r7, #16]
 8002d4e:	508b      	str	r3, [r1, r2]

        temp = EXTI->EMR1;
 8002d50:	4a27      	ldr	r2, [pc, #156]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002d52:	2384      	movs	r3, #132	; 0x84
 8002d54:	58d3      	ldr	r3, [r2, r3]
 8002d56:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002d58:	68fb      	ldr	r3, [r7, #12]
 8002d5a:	43da      	mvns	r2, r3
 8002d5c:	693b      	ldr	r3, [r7, #16]
 8002d5e:	4013      	ands	r3, r2
 8002d60:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8002d62:	683b      	ldr	r3, [r7, #0]
 8002d64:	685a      	ldr	r2, [r3, #4]
 8002d66:	2380      	movs	r3, #128	; 0x80
 8002d68:	029b      	lsls	r3, r3, #10
 8002d6a:	4013      	ands	r3, r2
 8002d6c:	d003      	beq.n	8002d76 <HAL_GPIO_Init+0x23e>
        {
          temp |= iocurrent;
 8002d6e:	693a      	ldr	r2, [r7, #16]
 8002d70:	68fb      	ldr	r3, [r7, #12]
 8002d72:	4313      	orrs	r3, r2
 8002d74:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR1 = temp;
 8002d76:	491e      	ldr	r1, [pc, #120]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002d78:	2284      	movs	r2, #132	; 0x84
 8002d7a:	693b      	ldr	r3, [r7, #16]
 8002d7c:	508b      	str	r3, [r1, r2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8002d7e:	4b1c      	ldr	r3, [pc, #112]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	43da      	mvns	r2, r3
 8002d88:	693b      	ldr	r3, [r7, #16]
 8002d8a:	4013      	ands	r3, r2
 8002d8c:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8002d8e:	683b      	ldr	r3, [r7, #0]
 8002d90:	685a      	ldr	r2, [r3, #4]
 8002d92:	2380      	movs	r3, #128	; 0x80
 8002d94:	035b      	lsls	r3, r3, #13
 8002d96:	4013      	ands	r3, r2
 8002d98:	d003      	beq.n	8002da2 <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 8002d9a:	693a      	ldr	r2, [r7, #16]
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	4313      	orrs	r3, r2
 8002da0:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 8002da2:	4b13      	ldr	r3, [pc, #76]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002da4:	693a      	ldr	r2, [r7, #16]
 8002da6:	601a      	str	r2, [r3, #0]

        temp = EXTI->FTSR1;
 8002da8:	4b11      	ldr	r3, [pc, #68]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002daa:	685b      	ldr	r3, [r3, #4]
 8002dac:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002dae:	68fb      	ldr	r3, [r7, #12]
 8002db0:	43da      	mvns	r2, r3
 8002db2:	693b      	ldr	r3, [r7, #16]
 8002db4:	4013      	ands	r3, r2
 8002db6:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8002db8:	683b      	ldr	r3, [r7, #0]
 8002dba:	685a      	ldr	r2, [r3, #4]
 8002dbc:	2380      	movs	r3, #128	; 0x80
 8002dbe:	039b      	lsls	r3, r3, #14
 8002dc0:	4013      	ands	r3, r2
 8002dc2:	d003      	beq.n	8002dcc <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8002dc4:	693a      	ldr	r2, [r7, #16]
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	4313      	orrs	r3, r2
 8002dca:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 8002dcc:	4b08      	ldr	r3, [pc, #32]	; (8002df0 <HAL_GPIO_Init+0x2b8>)
 8002dce:	693a      	ldr	r2, [r7, #16]
 8002dd0:	605a      	str	r2, [r3, #4]
      }
    }

    position++;
 8002dd2:	697b      	ldr	r3, [r7, #20]
 8002dd4:	3301      	adds	r3, #1
 8002dd6:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8002dd8:	683b      	ldr	r3, [r7, #0]
 8002dda:	681a      	ldr	r2, [r3, #0]
 8002ddc:	697b      	ldr	r3, [r7, #20]
 8002dde:	40da      	lsrs	r2, r3
 8002de0:	1e13      	subs	r3, r2, #0
 8002de2:	d000      	beq.n	8002de6 <HAL_GPIO_Init+0x2ae>
 8002de4:	e6b0      	b.n	8002b48 <HAL_GPIO_Init+0x10>
  }
}
 8002de6:	46c0      	nop			; (mov r8, r8)
 8002de8:	46c0      	nop			; (mov r8, r8)
 8002dea:	46bd      	mov	sp, r7
 8002dec:	b006      	add	sp, #24
 8002dee:	bd80      	pop	{r7, pc}
 8002df0:	40021800 	.word	0x40021800
 8002df4:	50000400 	.word	0x50000400
 8002df8:	50000800 	.word	0x50000800
 8002dfc:	50000c00 	.word	0x50000c00

08002e00 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        6 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8002e00:	b580      	push	{r7, lr}
 8002e02:	b084      	sub	sp, #16
 8002e04:	af00      	add	r7, sp, #0
 8002e06:	6078      	str	r0, [r7, #4]
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Modify voltage scaling range */
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8002e08:	4b19      	ldr	r3, [pc, #100]	; (8002e70 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	4a19      	ldr	r2, [pc, #100]	; (8002e74 <HAL_PWREx_ControlVoltageScaling+0x74>)
 8002e0e:	4013      	ands	r3, r2
 8002e10:	0019      	movs	r1, r3
 8002e12:	4b17      	ldr	r3, [pc, #92]	; (8002e70 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8002e14:	687a      	ldr	r2, [r7, #4]
 8002e16:	430a      	orrs	r2, r1
 8002e18:	601a      	str	r2, [r3, #0]

  /* In case of Range 1 selected, we need to ensure that main regulator reaches new value */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8002e1a:	687a      	ldr	r2, [r7, #4]
 8002e1c:	2380      	movs	r3, #128	; 0x80
 8002e1e:	009b      	lsls	r3, r3, #2
 8002e20:	429a      	cmp	r2, r3
 8002e22:	d11f      	bne.n	8002e64 <HAL_PWREx_ControlVoltageScaling+0x64>
  {
    /* Set timeout value */
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock) / 1000000U) + 1U;
 8002e24:	4b14      	ldr	r3, [pc, #80]	; (8002e78 <HAL_PWREx_ControlVoltageScaling+0x78>)
 8002e26:	681a      	ldr	r2, [r3, #0]
 8002e28:	0013      	movs	r3, r2
 8002e2a:	005b      	lsls	r3, r3, #1
 8002e2c:	189b      	adds	r3, r3, r2
 8002e2e:	005b      	lsls	r3, r3, #1
 8002e30:	4912      	ldr	r1, [pc, #72]	; (8002e7c <HAL_PWREx_ControlVoltageScaling+0x7c>)
 8002e32:	0018      	movs	r0, r3
 8002e34:	f7fd f982 	bl	800013c <__udivsi3>
 8002e38:	0003      	movs	r3, r0
 8002e3a:	3301      	adds	r3, #1
 8002e3c:	60fb      	str	r3, [r7, #12]

    /* Wait until VOSF is reset */
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8002e3e:	e008      	b.n	8002e52 <HAL_PWREx_ControlVoltageScaling+0x52>
    {
      if (wait_loop_index != 0U)
 8002e40:	68fb      	ldr	r3, [r7, #12]
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d003      	beq.n	8002e4e <HAL_PWREx_ControlVoltageScaling+0x4e>
      {
        wait_loop_index--;
 8002e46:	68fb      	ldr	r3, [r7, #12]
 8002e48:	3b01      	subs	r3, #1
 8002e4a:	60fb      	str	r3, [r7, #12]
 8002e4c:	e001      	b.n	8002e52 <HAL_PWREx_ControlVoltageScaling+0x52>
      }
      else
      {
        return HAL_TIMEOUT;
 8002e4e:	2303      	movs	r3, #3
 8002e50:	e009      	b.n	8002e66 <HAL_PWREx_ControlVoltageScaling+0x66>
    while (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8002e52:	4b07      	ldr	r3, [pc, #28]	; (8002e70 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8002e54:	695a      	ldr	r2, [r3, #20]
 8002e56:	2380      	movs	r3, #128	; 0x80
 8002e58:	00db      	lsls	r3, r3, #3
 8002e5a:	401a      	ands	r2, r3
 8002e5c:	2380      	movs	r3, #128	; 0x80
 8002e5e:	00db      	lsls	r3, r3, #3
 8002e60:	429a      	cmp	r2, r3
 8002e62:	d0ed      	beq.n	8002e40 <HAL_PWREx_ControlVoltageScaling+0x40>
      }
    }
  }

  return HAL_OK;
 8002e64:	2300      	movs	r3, #0
}
 8002e66:	0018      	movs	r0, r3
 8002e68:	46bd      	mov	sp, r7
 8002e6a:	b004      	add	sp, #16
 8002e6c:	bd80      	pop	{r7, pc}
 8002e6e:	46c0      	nop			; (mov r8, r8)
 8002e70:	40007000 	.word	0x40007000
 8002e74:	fffff9ff 	.word	0xfffff9ff
 8002e78:	20000008 	.word	0x20000008
 8002e7c:	000f4240 	.word	0x000f4240

08002e80 <LL_RCC_GetAPB1Prescaler>:
  *         @arg @ref LL_RCC_APB1_DIV_4
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  */
__STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
{
 8002e80:	b580      	push	{r7, lr}
 8002e82:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE));
 8002e84:	4b03      	ldr	r3, [pc, #12]	; (8002e94 <LL_RCC_GetAPB1Prescaler+0x14>)
 8002e86:	689a      	ldr	r2, [r3, #8]
 8002e88:	23e0      	movs	r3, #224	; 0xe0
 8002e8a:	01db      	lsls	r3, r3, #7
 8002e8c:	4013      	ands	r3, r2
}
 8002e8e:	0018      	movs	r0, r3
 8002e90:	46bd      	mov	sp, r7
 8002e92:	bd80      	pop	{r7, pc}
 8002e94:	40021000 	.word	0x40021000

08002e98 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to LSE Off
  *         first and then to LSE On or LSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002e98:	b580      	push	{r7, lr}
 8002e9a:	b088      	sub	sp, #32
 8002e9c:	af00      	add	r7, sp, #0
 8002e9e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp_sysclksrc;
  uint32_t temp_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	d101      	bne.n	8002eaa <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8002ea6:	2301      	movs	r3, #1
 8002ea8:	e304      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	2201      	movs	r2, #1
 8002eb0:	4013      	ands	r3, r2
 8002eb2:	d100      	bne.n	8002eb6 <HAL_RCC_OscConfig+0x1e>
 8002eb4:	e07c      	b.n	8002fb0 <HAL_RCC_OscConfig+0x118>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002eb6:	4bc3      	ldr	r3, [pc, #780]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002eb8:	689b      	ldr	r3, [r3, #8]
 8002eba:	2238      	movs	r2, #56	; 0x38
 8002ebc:	4013      	ands	r3, r2
 8002ebe:	61bb      	str	r3, [r7, #24]
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002ec0:	4bc0      	ldr	r3, [pc, #768]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002ec2:	68db      	ldr	r3, [r3, #12]
 8002ec4:	2203      	movs	r2, #3
 8002ec6:	4013      	ands	r3, r2
 8002ec8:	617b      	str	r3, [r7, #20]

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSE))
 8002eca:	69bb      	ldr	r3, [r7, #24]
 8002ecc:	2b10      	cmp	r3, #16
 8002ece:	d102      	bne.n	8002ed6 <HAL_RCC_OscConfig+0x3e>
 8002ed0:	697b      	ldr	r3, [r7, #20]
 8002ed2:	2b03      	cmp	r3, #3
 8002ed4:	d002      	beq.n	8002edc <HAL_RCC_OscConfig+0x44>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE))
 8002ed6:	69bb      	ldr	r3, [r7, #24]
 8002ed8:	2b08      	cmp	r3, #8
 8002eda:	d10b      	bne.n	8002ef4 <HAL_RCC_OscConfig+0x5c>
    {
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002edc:	4bb9      	ldr	r3, [pc, #740]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002ede:	681a      	ldr	r2, [r3, #0]
 8002ee0:	2380      	movs	r3, #128	; 0x80
 8002ee2:	029b      	lsls	r3, r3, #10
 8002ee4:	4013      	ands	r3, r2
 8002ee6:	d062      	beq.n	8002fae <HAL_RCC_OscConfig+0x116>
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	685b      	ldr	r3, [r3, #4]
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d15e      	bne.n	8002fae <HAL_RCC_OscConfig+0x116>
      {
        return HAL_ERROR;
 8002ef0:	2301      	movs	r3, #1
 8002ef2:	e2df      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	685a      	ldr	r2, [r3, #4]
 8002ef8:	2380      	movs	r3, #128	; 0x80
 8002efa:	025b      	lsls	r3, r3, #9
 8002efc:	429a      	cmp	r2, r3
 8002efe:	d107      	bne.n	8002f10 <HAL_RCC_OscConfig+0x78>
 8002f00:	4bb0      	ldr	r3, [pc, #704]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f02:	681a      	ldr	r2, [r3, #0]
 8002f04:	4baf      	ldr	r3, [pc, #700]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f06:	2180      	movs	r1, #128	; 0x80
 8002f08:	0249      	lsls	r1, r1, #9
 8002f0a:	430a      	orrs	r2, r1
 8002f0c:	601a      	str	r2, [r3, #0]
 8002f0e:	e020      	b.n	8002f52 <HAL_RCC_OscConfig+0xba>
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	685a      	ldr	r2, [r3, #4]
 8002f14:	23a0      	movs	r3, #160	; 0xa0
 8002f16:	02db      	lsls	r3, r3, #11
 8002f18:	429a      	cmp	r2, r3
 8002f1a:	d10e      	bne.n	8002f3a <HAL_RCC_OscConfig+0xa2>
 8002f1c:	4ba9      	ldr	r3, [pc, #676]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f1e:	681a      	ldr	r2, [r3, #0]
 8002f20:	4ba8      	ldr	r3, [pc, #672]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f22:	2180      	movs	r1, #128	; 0x80
 8002f24:	02c9      	lsls	r1, r1, #11
 8002f26:	430a      	orrs	r2, r1
 8002f28:	601a      	str	r2, [r3, #0]
 8002f2a:	4ba6      	ldr	r3, [pc, #664]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f2c:	681a      	ldr	r2, [r3, #0]
 8002f2e:	4ba5      	ldr	r3, [pc, #660]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f30:	2180      	movs	r1, #128	; 0x80
 8002f32:	0249      	lsls	r1, r1, #9
 8002f34:	430a      	orrs	r2, r1
 8002f36:	601a      	str	r2, [r3, #0]
 8002f38:	e00b      	b.n	8002f52 <HAL_RCC_OscConfig+0xba>
 8002f3a:	4ba2      	ldr	r3, [pc, #648]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f3c:	681a      	ldr	r2, [r3, #0]
 8002f3e:	4ba1      	ldr	r3, [pc, #644]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f40:	49a1      	ldr	r1, [pc, #644]	; (80031c8 <HAL_RCC_OscConfig+0x330>)
 8002f42:	400a      	ands	r2, r1
 8002f44:	601a      	str	r2, [r3, #0]
 8002f46:	4b9f      	ldr	r3, [pc, #636]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f48:	681a      	ldr	r2, [r3, #0]
 8002f4a:	4b9e      	ldr	r3, [pc, #632]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f4c:	499f      	ldr	r1, [pc, #636]	; (80031cc <HAL_RCC_OscConfig+0x334>)
 8002f4e:	400a      	ands	r2, r1
 8002f50:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	685b      	ldr	r3, [r3, #4]
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d014      	beq.n	8002f84 <HAL_RCC_OscConfig+0xec>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002f5a:	f7ff fd2f 	bl	80029bc <HAL_GetTick>
 8002f5e:	0003      	movs	r3, r0
 8002f60:	613b      	str	r3, [r7, #16]

        /* Wait till HSE is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002f62:	e008      	b.n	8002f76 <HAL_RCC_OscConfig+0xde>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002f64:	f7ff fd2a 	bl	80029bc <HAL_GetTick>
 8002f68:	0002      	movs	r2, r0
 8002f6a:	693b      	ldr	r3, [r7, #16]
 8002f6c:	1ad3      	subs	r3, r2, r3
 8002f6e:	2b64      	cmp	r3, #100	; 0x64
 8002f70:	d901      	bls.n	8002f76 <HAL_RCC_OscConfig+0xde>
          {
            return HAL_TIMEOUT;
 8002f72:	2303      	movs	r3, #3
 8002f74:	e29e      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002f76:	4b93      	ldr	r3, [pc, #588]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002f78:	681a      	ldr	r2, [r3, #0]
 8002f7a:	2380      	movs	r3, #128	; 0x80
 8002f7c:	029b      	lsls	r3, r3, #10
 8002f7e:	4013      	ands	r3, r2
 8002f80:	d0f0      	beq.n	8002f64 <HAL_RCC_OscConfig+0xcc>
 8002f82:	e015      	b.n	8002fb0 <HAL_RCC_OscConfig+0x118>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002f84:	f7ff fd1a 	bl	80029bc <HAL_GetTick>
 8002f88:	0003      	movs	r3, r0
 8002f8a:	613b      	str	r3, [r7, #16]

        /* Wait till HSE is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002f8c:	e008      	b.n	8002fa0 <HAL_RCC_OscConfig+0x108>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002f8e:	f7ff fd15 	bl	80029bc <HAL_GetTick>
 8002f92:	0002      	movs	r2, r0
 8002f94:	693b      	ldr	r3, [r7, #16]
 8002f96:	1ad3      	subs	r3, r2, r3
 8002f98:	2b64      	cmp	r3, #100	; 0x64
 8002f9a:	d901      	bls.n	8002fa0 <HAL_RCC_OscConfig+0x108>
          {
            return HAL_TIMEOUT;
 8002f9c:	2303      	movs	r3, #3
 8002f9e:	e289      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002fa0:	4b88      	ldr	r3, [pc, #544]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002fa2:	681a      	ldr	r2, [r3, #0]
 8002fa4:	2380      	movs	r3, #128	; 0x80
 8002fa6:	029b      	lsls	r3, r3, #10
 8002fa8:	4013      	ands	r3, r2
 8002faa:	d1f0      	bne.n	8002f8e <HAL_RCC_OscConfig+0xf6>
 8002fac:	e000      	b.n	8002fb0 <HAL_RCC_OscConfig+0x118>
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002fae:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	2202      	movs	r2, #2
 8002fb6:	4013      	ands	r3, r2
 8002fb8:	d100      	bne.n	8002fbc <HAL_RCC_OscConfig+0x124>
 8002fba:	e099      	b.n	80030f0 <HAL_RCC_OscConfig+0x258>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    assert_param(IS_RCC_HSIDIV(RCC_OscInitStruct->HSIDiv));

    /* Check if HSI16 is used as system clock or as PLL source when PLL is selected as system clock */
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002fbc:	4b81      	ldr	r3, [pc, #516]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002fbe:	689b      	ldr	r3, [r3, #8]
 8002fc0:	2238      	movs	r2, #56	; 0x38
 8002fc2:	4013      	ands	r3, r2
 8002fc4:	61bb      	str	r3, [r7, #24]
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002fc6:	4b7f      	ldr	r3, [pc, #508]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002fc8:	68db      	ldr	r3, [r3, #12]
 8002fca:	2203      	movs	r2, #3
 8002fcc:	4013      	ands	r3, r2
 8002fce:	617b      	str	r3, [r7, #20]
    if (((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckcfg == RCC_PLLSOURCE_HSI))
 8002fd0:	69bb      	ldr	r3, [r7, #24]
 8002fd2:	2b10      	cmp	r3, #16
 8002fd4:	d102      	bne.n	8002fdc <HAL_RCC_OscConfig+0x144>
 8002fd6:	697b      	ldr	r3, [r7, #20]
 8002fd8:	2b02      	cmp	r3, #2
 8002fda:	d002      	beq.n	8002fe2 <HAL_RCC_OscConfig+0x14a>
        || (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI))
 8002fdc:	69bb      	ldr	r3, [r7, #24]
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d135      	bne.n	800304e <HAL_RCC_OscConfig+0x1b6>
    {
      /* When HSI is used as system clock or as PLL input clock it can not be disabled */
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8002fe2:	4b78      	ldr	r3, [pc, #480]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002fe4:	681a      	ldr	r2, [r3, #0]
 8002fe6:	2380      	movs	r3, #128	; 0x80
 8002fe8:	00db      	lsls	r3, r3, #3
 8002fea:	4013      	ands	r3, r2
 8002fec:	d005      	beq.n	8002ffa <HAL_RCC_OscConfig+0x162>
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	68db      	ldr	r3, [r3, #12]
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d101      	bne.n	8002ffa <HAL_RCC_OscConfig+0x162>
      {
        return HAL_ERROR;
 8002ff6:	2301      	movs	r3, #1
 8002ff8:	e25c      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002ffa:	4b72      	ldr	r3, [pc, #456]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8002ffc:	685b      	ldr	r3, [r3, #4]
 8002ffe:	4a74      	ldr	r2, [pc, #464]	; (80031d0 <HAL_RCC_OscConfig+0x338>)
 8003000:	4013      	ands	r3, r2
 8003002:	0019      	movs	r1, r3
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	695b      	ldr	r3, [r3, #20]
 8003008:	021a      	lsls	r2, r3, #8
 800300a:	4b6e      	ldr	r3, [pc, #440]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 800300c:	430a      	orrs	r2, r1
 800300e:	605a      	str	r2, [r3, #4]

        if (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI)
 8003010:	69bb      	ldr	r3, [r7, #24]
 8003012:	2b00      	cmp	r3, #0
 8003014:	d112      	bne.n	800303c <HAL_RCC_OscConfig+0x1a4>
        {
          /* Adjust the HSI16 division factor */
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8003016:	4b6b      	ldr	r3, [pc, #428]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	4a6e      	ldr	r2, [pc, #440]	; (80031d4 <HAL_RCC_OscConfig+0x33c>)
 800301c:	4013      	ands	r3, r2
 800301e:	0019      	movs	r1, r3
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	691a      	ldr	r2, [r3, #16]
 8003024:	4b67      	ldr	r3, [pc, #412]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003026:	430a      	orrs	r2, r1
 8003028:	601a      	str	r2, [r3, #0]

          /* Update the SystemCoreClock global variable with HSISYS value  */
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 800302a:	4b66      	ldr	r3, [pc, #408]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	0adb      	lsrs	r3, r3, #11
 8003030:	2207      	movs	r2, #7
 8003032:	4013      	ands	r3, r2
 8003034:	4a68      	ldr	r2, [pc, #416]	; (80031d8 <HAL_RCC_OscConfig+0x340>)
 8003036:	40da      	lsrs	r2, r3
 8003038:	4b68      	ldr	r3, [pc, #416]	; (80031dc <HAL_RCC_OscConfig+0x344>)
 800303a:	601a      	str	r2, [r3, #0]
        }

        /* Adapt Systick interrupt period */
        if (HAL_InitTick(uwTickPrio) != HAL_OK)
 800303c:	4b68      	ldr	r3, [pc, #416]	; (80031e0 <HAL_RCC_OscConfig+0x348>)
 800303e:	681b      	ldr	r3, [r3, #0]
 8003040:	0018      	movs	r0, r3
 8003042:	f7ff fc5f 	bl	8002904 <HAL_InitTick>
 8003046:	1e03      	subs	r3, r0, #0
 8003048:	d051      	beq.n	80030ee <HAL_RCC_OscConfig+0x256>
        {
          return HAL_ERROR;
 800304a:	2301      	movs	r3, #1
 800304c:	e232      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	68db      	ldr	r3, [r3, #12]
 8003052:	2b00      	cmp	r3, #0
 8003054:	d030      	beq.n	80030b8 <HAL_RCC_OscConfig+0x220>
      {
        /* Configure the HSI16 division factor */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8003056:	4b5b      	ldr	r3, [pc, #364]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	4a5e      	ldr	r2, [pc, #376]	; (80031d4 <HAL_RCC_OscConfig+0x33c>)
 800305c:	4013      	ands	r3, r2
 800305e:	0019      	movs	r1, r3
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	691a      	ldr	r2, [r3, #16]
 8003064:	4b57      	ldr	r3, [pc, #348]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003066:	430a      	orrs	r2, r1
 8003068:	601a      	str	r2, [r3, #0]

        /* Enable the Internal High Speed oscillator (HSI16). */
        __HAL_RCC_HSI_ENABLE();
 800306a:	4b56      	ldr	r3, [pc, #344]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 800306c:	681a      	ldr	r2, [r3, #0]
 800306e:	4b55      	ldr	r3, [pc, #340]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003070:	2180      	movs	r1, #128	; 0x80
 8003072:	0049      	lsls	r1, r1, #1
 8003074:	430a      	orrs	r2, r1
 8003076:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003078:	f7ff fca0 	bl	80029bc <HAL_GetTick>
 800307c:	0003      	movs	r3, r0
 800307e:	613b      	str	r3, [r7, #16]

        /* Wait till HSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8003080:	e008      	b.n	8003094 <HAL_RCC_OscConfig+0x1fc>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8003082:	f7ff fc9b 	bl	80029bc <HAL_GetTick>
 8003086:	0002      	movs	r2, r0
 8003088:	693b      	ldr	r3, [r7, #16]
 800308a:	1ad3      	subs	r3, r2, r3
 800308c:	2b02      	cmp	r3, #2
 800308e:	d901      	bls.n	8003094 <HAL_RCC_OscConfig+0x1fc>
          {
            return HAL_TIMEOUT;
 8003090:	2303      	movs	r3, #3
 8003092:	e20f      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8003094:	4b4b      	ldr	r3, [pc, #300]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003096:	681a      	ldr	r2, [r3, #0]
 8003098:	2380      	movs	r3, #128	; 0x80
 800309a:	00db      	lsls	r3, r3, #3
 800309c:	4013      	ands	r3, r2
 800309e:	d0f0      	beq.n	8003082 <HAL_RCC_OscConfig+0x1ea>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80030a0:	4b48      	ldr	r3, [pc, #288]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80030a2:	685b      	ldr	r3, [r3, #4]
 80030a4:	4a4a      	ldr	r2, [pc, #296]	; (80031d0 <HAL_RCC_OscConfig+0x338>)
 80030a6:	4013      	ands	r3, r2
 80030a8:	0019      	movs	r1, r3
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	695b      	ldr	r3, [r3, #20]
 80030ae:	021a      	lsls	r2, r3, #8
 80030b0:	4b44      	ldr	r3, [pc, #272]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80030b2:	430a      	orrs	r2, r1
 80030b4:	605a      	str	r2, [r3, #4]
 80030b6:	e01b      	b.n	80030f0 <HAL_RCC_OscConfig+0x258>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI16). */
        __HAL_RCC_HSI_DISABLE();
 80030b8:	4b42      	ldr	r3, [pc, #264]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80030ba:	681a      	ldr	r2, [r3, #0]
 80030bc:	4b41      	ldr	r3, [pc, #260]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80030be:	4949      	ldr	r1, [pc, #292]	; (80031e4 <HAL_RCC_OscConfig+0x34c>)
 80030c0:	400a      	ands	r2, r1
 80030c2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80030c4:	f7ff fc7a 	bl	80029bc <HAL_GetTick>
 80030c8:	0003      	movs	r3, r0
 80030ca:	613b      	str	r3, [r7, #16]

        /* Wait till HSI is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 80030cc:	e008      	b.n	80030e0 <HAL_RCC_OscConfig+0x248>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80030ce:	f7ff fc75 	bl	80029bc <HAL_GetTick>
 80030d2:	0002      	movs	r2, r0
 80030d4:	693b      	ldr	r3, [r7, #16]
 80030d6:	1ad3      	subs	r3, r2, r3
 80030d8:	2b02      	cmp	r3, #2
 80030da:	d901      	bls.n	80030e0 <HAL_RCC_OscConfig+0x248>
          {
            return HAL_TIMEOUT;
 80030dc:	2303      	movs	r3, #3
 80030de:	e1e9      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 80030e0:	4b38      	ldr	r3, [pc, #224]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80030e2:	681a      	ldr	r2, [r3, #0]
 80030e4:	2380      	movs	r3, #128	; 0x80
 80030e6:	00db      	lsls	r3, r3, #3
 80030e8:	4013      	ands	r3, r2
 80030ea:	d1f0      	bne.n	80030ce <HAL_RCC_OscConfig+0x236>
 80030ec:	e000      	b.n	80030f0 <HAL_RCC_OscConfig+0x258>
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 80030ee:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	2208      	movs	r2, #8
 80030f6:	4013      	ands	r3, r2
 80030f8:	d047      	beq.n	800318a <HAL_RCC_OscConfig+0x2f2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check if LSI is used as system clock */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 80030fa:	4b32      	ldr	r3, [pc, #200]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80030fc:	689b      	ldr	r3, [r3, #8]
 80030fe:	2238      	movs	r2, #56	; 0x38
 8003100:	4013      	ands	r3, r2
 8003102:	2b18      	cmp	r3, #24
 8003104:	d10a      	bne.n	800311c <HAL_RCC_OscConfig+0x284>
    {
      /* When LSI is used as system clock it will not be disabled */
      if ((((RCC->CSR) & RCC_CSR_LSIRDY) != 0U) && (RCC_OscInitStruct->LSIState == RCC_LSI_OFF))
 8003106:	4b2f      	ldr	r3, [pc, #188]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003108:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800310a:	2202      	movs	r2, #2
 800310c:	4013      	ands	r3, r2
 800310e:	d03c      	beq.n	800318a <HAL_RCC_OscConfig+0x2f2>
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	699b      	ldr	r3, [r3, #24]
 8003114:	2b00      	cmp	r3, #0
 8003116:	d138      	bne.n	800318a <HAL_RCC_OscConfig+0x2f2>
      {
        return HAL_ERROR;
 8003118:	2301      	movs	r3, #1
 800311a:	e1cb      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
      }
    }
    else
    {
      /* Check the LSI State */
      if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	699b      	ldr	r3, [r3, #24]
 8003120:	2b00      	cmp	r3, #0
 8003122:	d019      	beq.n	8003158 <HAL_RCC_OscConfig+0x2c0>
      {
        /* Enable the Internal Low Speed oscillator (LSI). */
        __HAL_RCC_LSI_ENABLE();
 8003124:	4b27      	ldr	r3, [pc, #156]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003126:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8003128:	4b26      	ldr	r3, [pc, #152]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 800312a:	2101      	movs	r1, #1
 800312c:	430a      	orrs	r2, r1
 800312e:	661a      	str	r2, [r3, #96]	; 0x60

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003130:	f7ff fc44 	bl	80029bc <HAL_GetTick>
 8003134:	0003      	movs	r3, r0
 8003136:	613b      	str	r3, [r7, #16]

        /* Wait till LSI is ready */
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8003138:	e008      	b.n	800314c <HAL_RCC_OscConfig+0x2b4>
        {
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800313a:	f7ff fc3f 	bl	80029bc <HAL_GetTick>
 800313e:	0002      	movs	r2, r0
 8003140:	693b      	ldr	r3, [r7, #16]
 8003142:	1ad3      	subs	r3, r2, r3
 8003144:	2b02      	cmp	r3, #2
 8003146:	d901      	bls.n	800314c <HAL_RCC_OscConfig+0x2b4>
          {
            return HAL_TIMEOUT;
 8003148:	2303      	movs	r3, #3
 800314a:	e1b3      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 800314c:	4b1d      	ldr	r3, [pc, #116]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 800314e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003150:	2202      	movs	r2, #2
 8003152:	4013      	ands	r3, r2
 8003154:	d0f1      	beq.n	800313a <HAL_RCC_OscConfig+0x2a2>
 8003156:	e018      	b.n	800318a <HAL_RCC_OscConfig+0x2f2>
        }
      }
      else
      {
        /* Disable the Internal Low Speed oscillator (LSI). */
        __HAL_RCC_LSI_DISABLE();
 8003158:	4b1a      	ldr	r3, [pc, #104]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 800315a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800315c:	4b19      	ldr	r3, [pc, #100]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 800315e:	2101      	movs	r1, #1
 8003160:	438a      	bics	r2, r1
 8003162:	661a      	str	r2, [r3, #96]	; 0x60

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003164:	f7ff fc2a 	bl	80029bc <HAL_GetTick>
 8003168:	0003      	movs	r3, r0
 800316a:	613b      	str	r3, [r7, #16]

        /* Wait till LSI is disabled */
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 800316c:	e008      	b.n	8003180 <HAL_RCC_OscConfig+0x2e8>
        {
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800316e:	f7ff fc25 	bl	80029bc <HAL_GetTick>
 8003172:	0002      	movs	r2, r0
 8003174:	693b      	ldr	r3, [r7, #16]
 8003176:	1ad3      	subs	r3, r2, r3
 8003178:	2b02      	cmp	r3, #2
 800317a:	d901      	bls.n	8003180 <HAL_RCC_OscConfig+0x2e8>
          {
            return HAL_TIMEOUT;
 800317c:	2303      	movs	r3, #3
 800317e:	e199      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8003180:	4b10      	ldr	r3, [pc, #64]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 8003182:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003184:	2202      	movs	r2, #2
 8003186:	4013      	ands	r3, r2
 8003188:	d1f1      	bne.n	800316e <HAL_RCC_OscConfig+0x2d6>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	2204      	movs	r2, #4
 8003190:	4013      	ands	r3, r2
 8003192:	d100      	bne.n	8003196 <HAL_RCC_OscConfig+0x2fe>
 8003194:	e0c6      	b.n	8003324 <HAL_RCC_OscConfig+0x48c>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003196:	231f      	movs	r3, #31
 8003198:	18fb      	adds	r3, r7, r3
 800319a:	2200      	movs	r2, #0
 800319c:	701a      	strb	r2, [r3, #0]

    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* When the LSE is used as system clock, it is not allowed disable it */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 800319e:	4b09      	ldr	r3, [pc, #36]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80031a0:	689b      	ldr	r3, [r3, #8]
 80031a2:	2238      	movs	r2, #56	; 0x38
 80031a4:	4013      	ands	r3, r2
 80031a6:	2b20      	cmp	r3, #32
 80031a8:	d11e      	bne.n	80031e8 <HAL_RCC_OscConfig+0x350>
    {
      if ((((RCC->BDCR) & RCC_BDCR_LSERDY) != 0U) && (RCC_OscInitStruct->LSEState == RCC_LSE_OFF))
 80031aa:	4b06      	ldr	r3, [pc, #24]	; (80031c4 <HAL_RCC_OscConfig+0x32c>)
 80031ac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80031ae:	2202      	movs	r2, #2
 80031b0:	4013      	ands	r3, r2
 80031b2:	d100      	bne.n	80031b6 <HAL_RCC_OscConfig+0x31e>
 80031b4:	e0b6      	b.n	8003324 <HAL_RCC_OscConfig+0x48c>
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	689b      	ldr	r3, [r3, #8]
 80031ba:	2b00      	cmp	r3, #0
 80031bc:	d000      	beq.n	80031c0 <HAL_RCC_OscConfig+0x328>
 80031be:	e0b1      	b.n	8003324 <HAL_RCC_OscConfig+0x48c>
      {
        return HAL_ERROR;
 80031c0:	2301      	movs	r3, #1
 80031c2:	e177      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
 80031c4:	40021000 	.word	0x40021000
 80031c8:	fffeffff 	.word	0xfffeffff
 80031cc:	fffbffff 	.word	0xfffbffff
 80031d0:	ffff80ff 	.word	0xffff80ff
 80031d4:	ffffc7ff 	.word	0xffffc7ff
 80031d8:	00f42400 	.word	0x00f42400
 80031dc:	20000008 	.word	0x20000008
 80031e0:	2000000c 	.word	0x2000000c
 80031e4:	fffffeff 	.word	0xfffffeff
    }
    else
    {
      /* Update LSE configuration in Backup Domain control register    */
      /* Requires to enable write access to Backup Domain of necessary */
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 80031e8:	4bb4      	ldr	r3, [pc, #720]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80031ea:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80031ec:	2380      	movs	r3, #128	; 0x80
 80031ee:	055b      	lsls	r3, r3, #21
 80031f0:	4013      	ands	r3, r2
 80031f2:	d101      	bne.n	80031f8 <HAL_RCC_OscConfig+0x360>
 80031f4:	2301      	movs	r3, #1
 80031f6:	e000      	b.n	80031fa <HAL_RCC_OscConfig+0x362>
 80031f8:	2300      	movs	r3, #0
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	d011      	beq.n	8003222 <HAL_RCC_OscConfig+0x38a>
      {
        __HAL_RCC_PWR_CLK_ENABLE();
 80031fe:	4baf      	ldr	r3, [pc, #700]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003200:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003202:	4bae      	ldr	r3, [pc, #696]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003204:	2180      	movs	r1, #128	; 0x80
 8003206:	0549      	lsls	r1, r1, #21
 8003208:	430a      	orrs	r2, r1
 800320a:	63da      	str	r2, [r3, #60]	; 0x3c
 800320c:	4bab      	ldr	r3, [pc, #684]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800320e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003210:	2380      	movs	r3, #128	; 0x80
 8003212:	055b      	lsls	r3, r3, #21
 8003214:	4013      	ands	r3, r2
 8003216:	60fb      	str	r3, [r7, #12]
 8003218:	68fb      	ldr	r3, [r7, #12]
        pwrclkchanged = SET;
 800321a:	231f      	movs	r3, #31
 800321c:	18fb      	adds	r3, r7, r3
 800321e:	2201      	movs	r2, #1
 8003220:	701a      	strb	r2, [r3, #0]
      }

      if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8003222:	4ba7      	ldr	r3, [pc, #668]	; (80034c0 <HAL_RCC_OscConfig+0x628>)
 8003224:	681a      	ldr	r2, [r3, #0]
 8003226:	2380      	movs	r3, #128	; 0x80
 8003228:	005b      	lsls	r3, r3, #1
 800322a:	4013      	ands	r3, r2
 800322c:	d11a      	bne.n	8003264 <HAL_RCC_OscConfig+0x3cc>
      {
        /* Enable write access to Backup domain */
        SET_BIT(PWR->CR1, PWR_CR1_DBP);
 800322e:	4ba4      	ldr	r3, [pc, #656]	; (80034c0 <HAL_RCC_OscConfig+0x628>)
 8003230:	681a      	ldr	r2, [r3, #0]
 8003232:	4ba3      	ldr	r3, [pc, #652]	; (80034c0 <HAL_RCC_OscConfig+0x628>)
 8003234:	2180      	movs	r1, #128	; 0x80
 8003236:	0049      	lsls	r1, r1, #1
 8003238:	430a      	orrs	r2, r1
 800323a:	601a      	str	r2, [r3, #0]

        /* Wait for Backup domain Write protection disable */
        tickstart = HAL_GetTick();
 800323c:	f7ff fbbe 	bl	80029bc <HAL_GetTick>
 8003240:	0003      	movs	r3, r0
 8003242:	613b      	str	r3, [r7, #16]

        while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8003244:	e008      	b.n	8003258 <HAL_RCC_OscConfig+0x3c0>
        {
          if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003246:	f7ff fbb9 	bl	80029bc <HAL_GetTick>
 800324a:	0002      	movs	r2, r0
 800324c:	693b      	ldr	r3, [r7, #16]
 800324e:	1ad3      	subs	r3, r2, r3
 8003250:	2b02      	cmp	r3, #2
 8003252:	d901      	bls.n	8003258 <HAL_RCC_OscConfig+0x3c0>
          {
            return HAL_TIMEOUT;
 8003254:	2303      	movs	r3, #3
 8003256:	e12d      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8003258:	4b99      	ldr	r3, [pc, #612]	; (80034c0 <HAL_RCC_OscConfig+0x628>)
 800325a:	681a      	ldr	r2, [r3, #0]
 800325c:	2380      	movs	r3, #128	; 0x80
 800325e:	005b      	lsls	r3, r3, #1
 8003260:	4013      	ands	r3, r2
 8003262:	d0f0      	beq.n	8003246 <HAL_RCC_OscConfig+0x3ae>
          }
        }
      }

      /* Set the new LSE configuration -----------------------------------------*/
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	689b      	ldr	r3, [r3, #8]
 8003268:	2b01      	cmp	r3, #1
 800326a:	d106      	bne.n	800327a <HAL_RCC_OscConfig+0x3e2>
 800326c:	4b93      	ldr	r3, [pc, #588]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800326e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003270:	4b92      	ldr	r3, [pc, #584]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003272:	2101      	movs	r1, #1
 8003274:	430a      	orrs	r2, r1
 8003276:	65da      	str	r2, [r3, #92]	; 0x5c
 8003278:	e01c      	b.n	80032b4 <HAL_RCC_OscConfig+0x41c>
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	689b      	ldr	r3, [r3, #8]
 800327e:	2b05      	cmp	r3, #5
 8003280:	d10c      	bne.n	800329c <HAL_RCC_OscConfig+0x404>
 8003282:	4b8e      	ldr	r3, [pc, #568]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003284:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003286:	4b8d      	ldr	r3, [pc, #564]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003288:	2104      	movs	r1, #4
 800328a:	430a      	orrs	r2, r1
 800328c:	65da      	str	r2, [r3, #92]	; 0x5c
 800328e:	4b8b      	ldr	r3, [pc, #556]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003290:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003292:	4b8a      	ldr	r3, [pc, #552]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003294:	2101      	movs	r1, #1
 8003296:	430a      	orrs	r2, r1
 8003298:	65da      	str	r2, [r3, #92]	; 0x5c
 800329a:	e00b      	b.n	80032b4 <HAL_RCC_OscConfig+0x41c>
 800329c:	4b87      	ldr	r3, [pc, #540]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800329e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80032a0:	4b86      	ldr	r3, [pc, #536]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80032a2:	2101      	movs	r1, #1
 80032a4:	438a      	bics	r2, r1
 80032a6:	65da      	str	r2, [r3, #92]	; 0x5c
 80032a8:	4b84      	ldr	r3, [pc, #528]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80032aa:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80032ac:	4b83      	ldr	r3, [pc, #524]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80032ae:	2104      	movs	r1, #4
 80032b0:	438a      	bics	r2, r1
 80032b2:	65da      	str	r2, [r3, #92]	; 0x5c

      /* Check the LSE State */
      if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	689b      	ldr	r3, [r3, #8]
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d014      	beq.n	80032e6 <HAL_RCC_OscConfig+0x44e>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80032bc:	f7ff fb7e 	bl	80029bc <HAL_GetTick>
 80032c0:	0003      	movs	r3, r0
 80032c2:	613b      	str	r3, [r7, #16]

        /* Wait till LSE is ready */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80032c4:	e009      	b.n	80032da <HAL_RCC_OscConfig+0x442>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80032c6:	f7ff fb79 	bl	80029bc <HAL_GetTick>
 80032ca:	0002      	movs	r2, r0
 80032cc:	693b      	ldr	r3, [r7, #16]
 80032ce:	1ad3      	subs	r3, r2, r3
 80032d0:	4a7c      	ldr	r2, [pc, #496]	; (80034c4 <HAL_RCC_OscConfig+0x62c>)
 80032d2:	4293      	cmp	r3, r2
 80032d4:	d901      	bls.n	80032da <HAL_RCC_OscConfig+0x442>
          {
            return HAL_TIMEOUT;
 80032d6:	2303      	movs	r3, #3
 80032d8:	e0ec      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80032da:	4b78      	ldr	r3, [pc, #480]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80032dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80032de:	2202      	movs	r2, #2
 80032e0:	4013      	ands	r3, r2
 80032e2:	d0f0      	beq.n	80032c6 <HAL_RCC_OscConfig+0x42e>
 80032e4:	e013      	b.n	800330e <HAL_RCC_OscConfig+0x476>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80032e6:	f7ff fb69 	bl	80029bc <HAL_GetTick>
 80032ea:	0003      	movs	r3, r0
 80032ec:	613b      	str	r3, [r7, #16]

        /* Wait till LSE is disabled */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 80032ee:	e009      	b.n	8003304 <HAL_RCC_OscConfig+0x46c>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80032f0:	f7ff fb64 	bl	80029bc <HAL_GetTick>
 80032f4:	0002      	movs	r2, r0
 80032f6:	693b      	ldr	r3, [r7, #16]
 80032f8:	1ad3      	subs	r3, r2, r3
 80032fa:	4a72      	ldr	r2, [pc, #456]	; (80034c4 <HAL_RCC_OscConfig+0x62c>)
 80032fc:	4293      	cmp	r3, r2
 80032fe:	d901      	bls.n	8003304 <HAL_RCC_OscConfig+0x46c>
          {
            return HAL_TIMEOUT;
 8003300:	2303      	movs	r3, #3
 8003302:	e0d7      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8003304:	4b6d      	ldr	r3, [pc, #436]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003306:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003308:	2202      	movs	r2, #2
 800330a:	4013      	ands	r3, r2
 800330c:	d1f0      	bne.n	80032f0 <HAL_RCC_OscConfig+0x458>
          }
        }
      }

      /* Restore clock configuration if changed */
      if (pwrclkchanged == SET)
 800330e:	231f      	movs	r3, #31
 8003310:	18fb      	adds	r3, r7, r3
 8003312:	781b      	ldrb	r3, [r3, #0]
 8003314:	2b01      	cmp	r3, #1
 8003316:	d105      	bne.n	8003324 <HAL_RCC_OscConfig+0x48c>
      {
        __HAL_RCC_PWR_CLK_DISABLE();
 8003318:	4b68      	ldr	r3, [pc, #416]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800331a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800331c:	4b67      	ldr	r3, [pc, #412]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800331e:	496a      	ldr	r1, [pc, #424]	; (80034c8 <HAL_RCC_OscConfig+0x630>)
 8003320:	400a      	ands	r2, r1
 8003322:	63da      	str	r2, [r3, #60]	; 0x3c
#endif /* RCC_HSI48_SUPPORT */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));

  if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	69db      	ldr	r3, [r3, #28]
 8003328:	2b00      	cmp	r3, #0
 800332a:	d100      	bne.n	800332e <HAL_RCC_OscConfig+0x496>
 800332c:	e0c1      	b.n	80034b2 <HAL_RCC_OscConfig+0x61a>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800332e:	4b63      	ldr	r3, [pc, #396]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003330:	689b      	ldr	r3, [r3, #8]
 8003332:	2238      	movs	r2, #56	; 0x38
 8003334:	4013      	ands	r3, r2
 8003336:	2b10      	cmp	r3, #16
 8003338:	d100      	bne.n	800333c <HAL_RCC_OscConfig+0x4a4>
 800333a:	e081      	b.n	8003440 <HAL_RCC_OscConfig+0x5a8>
    {
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	69db      	ldr	r3, [r3, #28]
 8003340:	2b02      	cmp	r3, #2
 8003342:	d156      	bne.n	80033f2 <HAL_RCC_OscConfig+0x55a>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
#endif /* RCC_PLLQ_SUPPORT */
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003344:	4b5d      	ldr	r3, [pc, #372]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003346:	681a      	ldr	r2, [r3, #0]
 8003348:	4b5c      	ldr	r3, [pc, #368]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800334a:	4960      	ldr	r1, [pc, #384]	; (80034cc <HAL_RCC_OscConfig+0x634>)
 800334c:	400a      	ands	r2, r1
 800334e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003350:	f7ff fb34 	bl	80029bc <HAL_GetTick>
 8003354:	0003      	movs	r3, r0
 8003356:	613b      	str	r3, [r7, #16]

        /* Wait till PLL is ready */
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8003358:	e008      	b.n	800336c <HAL_RCC_OscConfig+0x4d4>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800335a:	f7ff fb2f 	bl	80029bc <HAL_GetTick>
 800335e:	0002      	movs	r2, r0
 8003360:	693b      	ldr	r3, [r7, #16]
 8003362:	1ad3      	subs	r3, r2, r3
 8003364:	2b02      	cmp	r3, #2
 8003366:	d901      	bls.n	800336c <HAL_RCC_OscConfig+0x4d4>
          {
            return HAL_TIMEOUT;
 8003368:	2303      	movs	r3, #3
 800336a:	e0a3      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 800336c:	4b53      	ldr	r3, [pc, #332]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800336e:	681a      	ldr	r2, [r3, #0]
 8003370:	2380      	movs	r3, #128	; 0x80
 8003372:	049b      	lsls	r3, r3, #18
 8003374:	4013      	ands	r3, r2
 8003376:	d1f0      	bne.n	800335a <HAL_RCC_OscConfig+0x4c2>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003378:	4b50      	ldr	r3, [pc, #320]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800337a:	68db      	ldr	r3, [r3, #12]
 800337c:	4a54      	ldr	r2, [pc, #336]	; (80034d0 <HAL_RCC_OscConfig+0x638>)
 800337e:	4013      	ands	r3, r2
 8003380:	0019      	movs	r1, r3
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	6a1a      	ldr	r2, [r3, #32]
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800338a:	431a      	orrs	r2, r3
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003390:	021b      	lsls	r3, r3, #8
 8003392:	431a      	orrs	r2, r3
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003398:	431a      	orrs	r2, r3
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800339e:	431a      	orrs	r2, r3
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80033a4:	431a      	orrs	r2, r3
 80033a6:	4b45      	ldr	r3, [pc, #276]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033a8:	430a      	orrs	r2, r1
 80033aa:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLQ,
#endif /* RCC_PLLQ_SUPPORT */
                             RCC_OscInitStruct->PLL.PLLR);

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80033ac:	4b43      	ldr	r3, [pc, #268]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033ae:	681a      	ldr	r2, [r3, #0]
 80033b0:	4b42      	ldr	r3, [pc, #264]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033b2:	2180      	movs	r1, #128	; 0x80
 80033b4:	0449      	lsls	r1, r1, #17
 80033b6:	430a      	orrs	r2, r1
 80033b8:	601a      	str	r2, [r3, #0]

        /* Enable PLLR Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLRCLK);
 80033ba:	4b40      	ldr	r3, [pc, #256]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033bc:	68da      	ldr	r2, [r3, #12]
 80033be:	4b3f      	ldr	r3, [pc, #252]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033c0:	2180      	movs	r1, #128	; 0x80
 80033c2:	0549      	lsls	r1, r1, #21
 80033c4:	430a      	orrs	r2, r1
 80033c6:	60da      	str	r2, [r3, #12]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80033c8:	f7ff faf8 	bl	80029bc <HAL_GetTick>
 80033cc:	0003      	movs	r3, r0
 80033ce:	613b      	str	r3, [r7, #16]

        /* Wait till PLL is ready */
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80033d0:	e008      	b.n	80033e4 <HAL_RCC_OscConfig+0x54c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80033d2:	f7ff faf3 	bl	80029bc <HAL_GetTick>
 80033d6:	0002      	movs	r2, r0
 80033d8:	693b      	ldr	r3, [r7, #16]
 80033da:	1ad3      	subs	r3, r2, r3
 80033dc:	2b02      	cmp	r3, #2
 80033de:	d901      	bls.n	80033e4 <HAL_RCC_OscConfig+0x54c>
          {
            return HAL_TIMEOUT;
 80033e0:	2303      	movs	r3, #3
 80033e2:	e067      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80033e4:	4b35      	ldr	r3, [pc, #212]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033e6:	681a      	ldr	r2, [r3, #0]
 80033e8:	2380      	movs	r3, #128	; 0x80
 80033ea:	049b      	lsls	r3, r3, #18
 80033ec:	4013      	ands	r3, r2
 80033ee:	d0f0      	beq.n	80033d2 <HAL_RCC_OscConfig+0x53a>
 80033f0:	e05f      	b.n	80034b2 <HAL_RCC_OscConfig+0x61a>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80033f2:	4b32      	ldr	r3, [pc, #200]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033f4:	681a      	ldr	r2, [r3, #0]
 80033f6:	4b31      	ldr	r3, [pc, #196]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 80033f8:	4934      	ldr	r1, [pc, #208]	; (80034cc <HAL_RCC_OscConfig+0x634>)
 80033fa:	400a      	ands	r2, r1
 80033fc:	601a      	str	r2, [r3, #0]

        /* Disable all PLL outputs to save power */
        MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PLLSOURCE_NONE);
 80033fe:	4b2f      	ldr	r3, [pc, #188]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003400:	68da      	ldr	r2, [r3, #12]
 8003402:	4b2e      	ldr	r3, [pc, #184]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003404:	2103      	movs	r1, #3
 8003406:	438a      	bics	r2, r1
 8003408:	60da      	str	r2, [r3, #12]

#if defined(RCC_PLLQ_SUPPORT)
        __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLQEN | RCC_PLLCFGR_PLLREN);
 800340a:	4b2c      	ldr	r3, [pc, #176]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800340c:	68da      	ldr	r2, [r3, #12]
 800340e:	4b2b      	ldr	r3, [pc, #172]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003410:	4930      	ldr	r1, [pc, #192]	; (80034d4 <HAL_RCC_OscConfig+0x63c>)
 8003412:	400a      	ands	r2, r1
 8003414:	60da      	str	r2, [r3, #12]
#else
        __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLREN);
#endif /* RCC_PLLQ_SUPPORT */

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003416:	f7ff fad1 	bl	80029bc <HAL_GetTick>
 800341a:	0003      	movs	r3, r0
 800341c:	613b      	str	r3, [r7, #16]

        /* Wait till PLL is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 800341e:	e008      	b.n	8003432 <HAL_RCC_OscConfig+0x59a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8003420:	f7ff facc 	bl	80029bc <HAL_GetTick>
 8003424:	0002      	movs	r2, r0
 8003426:	693b      	ldr	r3, [r7, #16]
 8003428:	1ad3      	subs	r3, r2, r3
 800342a:	2b02      	cmp	r3, #2
 800342c:	d901      	bls.n	8003432 <HAL_RCC_OscConfig+0x59a>
          {
            return HAL_TIMEOUT;
 800342e:	2303      	movs	r3, #3
 8003430:	e040      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8003432:	4b22      	ldr	r3, [pc, #136]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 8003434:	681a      	ldr	r2, [r3, #0]
 8003436:	2380      	movs	r3, #128	; 0x80
 8003438:	049b      	lsls	r3, r3, #18
 800343a:	4013      	ands	r3, r2
 800343c:	d1f0      	bne.n	8003420 <HAL_RCC_OscConfig+0x588>
 800343e:	e038      	b.n	80034b2 <HAL_RCC_OscConfig+0x61a>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	69db      	ldr	r3, [r3, #28]
 8003444:	2b01      	cmp	r3, #1
 8003446:	d101      	bne.n	800344c <HAL_RCC_OscConfig+0x5b4>
      {
        return HAL_ERROR;
 8003448:	2301      	movs	r3, #1
 800344a:	e033      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        temp_pllckcfg = RCC->PLLCFGR;
 800344c:	4b1b      	ldr	r3, [pc, #108]	; (80034bc <HAL_RCC_OscConfig+0x624>)
 800344e:	68db      	ldr	r3, [r3, #12]
 8003450:	617b      	str	r3, [r7, #20]
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003452:	697b      	ldr	r3, [r7, #20]
 8003454:	2203      	movs	r2, #3
 8003456:	401a      	ands	r2, r3
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	6a1b      	ldr	r3, [r3, #32]
 800345c:	429a      	cmp	r2, r3
 800345e:	d126      	bne.n	80034ae <HAL_RCC_OscConfig+0x616>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8003460:	697b      	ldr	r3, [r7, #20]
 8003462:	2270      	movs	r2, #112	; 0x70
 8003464:	401a      	ands	r2, r3
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	6a5b      	ldr	r3, [r3, #36]	; 0x24
        if ((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800346a:	429a      	cmp	r2, r3
 800346c:	d11f      	bne.n	80034ae <HAL_RCC_OscConfig+0x616>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800346e:	697a      	ldr	r2, [r7, #20]
 8003470:	23fe      	movs	r3, #254	; 0xfe
 8003472:	01db      	lsls	r3, r3, #7
 8003474:	401a      	ands	r2, r3
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800347a:	021b      	lsls	r3, r3, #8
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800347c:	429a      	cmp	r2, r3
 800347e:	d116      	bne.n	80034ae <HAL_RCC_OscConfig+0x616>
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8003480:	697a      	ldr	r2, [r7, #20]
 8003482:	23f8      	movs	r3, #248	; 0xf8
 8003484:	039b      	lsls	r3, r3, #14
 8003486:	401a      	ands	r2, r3
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800348c:	429a      	cmp	r2, r3
 800348e:	d10e      	bne.n	80034ae <HAL_RCC_OscConfig+0x616>
#if defined (RCC_PLLQ_SUPPORT)
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 8003490:	697a      	ldr	r2, [r7, #20]
 8003492:	23e0      	movs	r3, #224	; 0xe0
 8003494:	051b      	lsls	r3, r3, #20
 8003496:	401a      	ands	r2, r3
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800349c:	429a      	cmp	r2, r3
 800349e:	d106      	bne.n	80034ae <HAL_RCC_OscConfig+0x616>
#endif /* RCC_PLLQ_SUPPORT */
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != RCC_OscInitStruct->PLL.PLLR))
 80034a0:	697b      	ldr	r3, [r7, #20]
 80034a2:	0f5b      	lsrs	r3, r3, #29
 80034a4:	075a      	lsls	r2, r3, #29
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
            (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 80034aa:	429a      	cmp	r2, r3
 80034ac:	d001      	beq.n	80034b2 <HAL_RCC_OscConfig+0x61a>
        {
          return HAL_ERROR;
 80034ae:	2301      	movs	r3, #1
 80034b0:	e000      	b.n	80034b4 <HAL_RCC_OscConfig+0x61c>
        }
      }
    }
  }
  return HAL_OK;
 80034b2:	2300      	movs	r3, #0
}
 80034b4:	0018      	movs	r0, r3
 80034b6:	46bd      	mov	sp, r7
 80034b8:	b008      	add	sp, #32
 80034ba:	bd80      	pop	{r7, pc}
 80034bc:	40021000 	.word	0x40021000
 80034c0:	40007000 	.word	0x40007000
 80034c4:	00001388 	.word	0x00001388
 80034c8:	efffffff 	.word	0xefffffff
 80034cc:	feffffff 	.word	0xfeffffff
 80034d0:	11c1808c 	.word	0x11c1808c
 80034d4:	eefeffff 	.word	0xeefeffff

080034d8 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80034d8:	b580      	push	{r7, lr}
 80034da:	b084      	sub	sp, #16
 80034dc:	af00      	add	r7, sp, #0
 80034de:	6078      	str	r0, [r7, #4]
 80034e0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	2b00      	cmp	r3, #0
 80034e6:	d101      	bne.n	80034ec <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80034e8:	2301      	movs	r3, #1
 80034ea:	e0e9      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the FLASH clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80034ec:	4b76      	ldr	r3, [pc, #472]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	2207      	movs	r2, #7
 80034f2:	4013      	ands	r3, r2
 80034f4:	683a      	ldr	r2, [r7, #0]
 80034f6:	429a      	cmp	r2, r3
 80034f8:	d91e      	bls.n	8003538 <HAL_RCC_ClockConfig+0x60>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80034fa:	4b73      	ldr	r3, [pc, #460]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	2207      	movs	r2, #7
 8003500:	4393      	bics	r3, r2
 8003502:	0019      	movs	r1, r3
 8003504:	4b70      	ldr	r3, [pc, #448]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 8003506:	683a      	ldr	r2, [r7, #0]
 8003508:	430a      	orrs	r2, r1
 800350a:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 800350c:	f7ff fa56 	bl	80029bc <HAL_GetTick>
 8003510:	0003      	movs	r3, r0
 8003512:	60fb      	str	r3, [r7, #12]

    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8003514:	e009      	b.n	800352a <HAL_RCC_ClockConfig+0x52>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003516:	f7ff fa51 	bl	80029bc <HAL_GetTick>
 800351a:	0002      	movs	r2, r0
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	1ad3      	subs	r3, r2, r3
 8003520:	4a6a      	ldr	r2, [pc, #424]	; (80036cc <HAL_RCC_ClockConfig+0x1f4>)
 8003522:	4293      	cmp	r3, r2
 8003524:	d901      	bls.n	800352a <HAL_RCC_ClockConfig+0x52>
      {
        return HAL_TIMEOUT;
 8003526:	2303      	movs	r3, #3
 8003528:	e0ca      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 800352a:	4b67      	ldr	r3, [pc, #412]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	2207      	movs	r2, #7
 8003530:	4013      	ands	r3, r2
 8003532:	683a      	ldr	r2, [r7, #0]
 8003534:	429a      	cmp	r2, r3
 8003536:	d1ee      	bne.n	8003516 <HAL_RCC_ClockConfig+0x3e>
      }
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	2202      	movs	r2, #2
 800353e:	4013      	ands	r3, r2
 8003540:	d015      	beq.n	800356e <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	681b      	ldr	r3, [r3, #0]
 8003546:	2204      	movs	r2, #4
 8003548:	4013      	ands	r3, r2
 800354a:	d006      	beq.n	800355a <HAL_RCC_ClockConfig+0x82>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 800354c:	4b60      	ldr	r3, [pc, #384]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 800354e:	689a      	ldr	r2, [r3, #8]
 8003550:	4b5f      	ldr	r3, [pc, #380]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 8003552:	21e0      	movs	r1, #224	; 0xe0
 8003554:	01c9      	lsls	r1, r1, #7
 8003556:	430a      	orrs	r2, r1
 8003558:	609a      	str	r2, [r3, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800355a:	4b5d      	ldr	r3, [pc, #372]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 800355c:	689b      	ldr	r3, [r3, #8]
 800355e:	4a5d      	ldr	r2, [pc, #372]	; (80036d4 <HAL_RCC_ClockConfig+0x1fc>)
 8003560:	4013      	ands	r3, r2
 8003562:	0019      	movs	r1, r3
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	689a      	ldr	r2, [r3, #8]
 8003568:	4b59      	ldr	r3, [pc, #356]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 800356a:	430a      	orrs	r2, r1
 800356c:	609a      	str	r2, [r3, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	2201      	movs	r2, #1
 8003574:	4013      	ands	r3, r2
 8003576:	d057      	beq.n	8003628 <HAL_RCC_ClockConfig+0x150>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	685b      	ldr	r3, [r3, #4]
 800357c:	2b01      	cmp	r3, #1
 800357e:	d107      	bne.n	8003590 <HAL_RCC_ClockConfig+0xb8>
    {
      /* Check the HSE ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8003580:	4b53      	ldr	r3, [pc, #332]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 8003582:	681a      	ldr	r2, [r3, #0]
 8003584:	2380      	movs	r3, #128	; 0x80
 8003586:	029b      	lsls	r3, r3, #10
 8003588:	4013      	ands	r3, r2
 800358a:	d12b      	bne.n	80035e4 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 800358c:	2301      	movs	r3, #1
 800358e:	e097      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	685b      	ldr	r3, [r3, #4]
 8003594:	2b02      	cmp	r3, #2
 8003596:	d107      	bne.n	80035a8 <HAL_RCC_ClockConfig+0xd0>
    {
      /* Check the PLL ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8003598:	4b4d      	ldr	r3, [pc, #308]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 800359a:	681a      	ldr	r2, [r3, #0]
 800359c:	2380      	movs	r3, #128	; 0x80
 800359e:	049b      	lsls	r3, r3, #18
 80035a0:	4013      	ands	r3, r2
 80035a2:	d11f      	bne.n	80035e4 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 80035a4:	2301      	movs	r3, #1
 80035a6:	e08b      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
      }
    }
    /* HSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	685b      	ldr	r3, [r3, #4]
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d107      	bne.n	80035c0 <HAL_RCC_ClockConfig+0xe8>
    {
      /* Check the HSI ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80035b0:	4b47      	ldr	r3, [pc, #284]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 80035b2:	681a      	ldr	r2, [r3, #0]
 80035b4:	2380      	movs	r3, #128	; 0x80
 80035b6:	00db      	lsls	r3, r3, #3
 80035b8:	4013      	ands	r3, r2
 80035ba:	d113      	bne.n	80035e4 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 80035bc:	2301      	movs	r3, #1
 80035be:	e07f      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
      }
    }
    /* LSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_LSI)
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	685b      	ldr	r3, [r3, #4]
 80035c4:	2b03      	cmp	r3, #3
 80035c6:	d106      	bne.n	80035d6 <HAL_RCC_ClockConfig+0xfe>
    {
      /* Check the LSI ready flag */
      if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 80035c8:	4b41      	ldr	r3, [pc, #260]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 80035ca:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80035cc:	2202      	movs	r2, #2
 80035ce:	4013      	ands	r3, r2
 80035d0:	d108      	bne.n	80035e4 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 80035d2:	2301      	movs	r3, #1
 80035d4:	e074      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
    }
    /* LSE is selected as System Clock Source */
    else
    {
      /* Check the LSE ready flag */
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 80035d6:	4b3e      	ldr	r3, [pc, #248]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 80035d8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80035da:	2202      	movs	r2, #2
 80035dc:	4013      	ands	r3, r2
 80035de:	d101      	bne.n	80035e4 <HAL_RCC_ClockConfig+0x10c>
      {
        return HAL_ERROR;
 80035e0:	2301      	movs	r3, #1
 80035e2:	e06d      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80035e4:	4b3a      	ldr	r3, [pc, #232]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 80035e6:	689b      	ldr	r3, [r3, #8]
 80035e8:	2207      	movs	r2, #7
 80035ea:	4393      	bics	r3, r2
 80035ec:	0019      	movs	r1, r3
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	685a      	ldr	r2, [r3, #4]
 80035f2:	4b37      	ldr	r3, [pc, #220]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 80035f4:	430a      	orrs	r2, r1
 80035f6:	609a      	str	r2, [r3, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80035f8:	f7ff f9e0 	bl	80029bc <HAL_GetTick>
 80035fc:	0003      	movs	r3, r0
 80035fe:	60fb      	str	r3, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003600:	e009      	b.n	8003616 <HAL_RCC_ClockConfig+0x13e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003602:	f7ff f9db 	bl	80029bc <HAL_GetTick>
 8003606:	0002      	movs	r2, r0
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	1ad3      	subs	r3, r2, r3
 800360c:	4a2f      	ldr	r2, [pc, #188]	; (80036cc <HAL_RCC_ClockConfig+0x1f4>)
 800360e:	4293      	cmp	r3, r2
 8003610:	d901      	bls.n	8003616 <HAL_RCC_ClockConfig+0x13e>
      {
        return HAL_TIMEOUT;
 8003612:	2303      	movs	r3, #3
 8003614:	e054      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003616:	4b2e      	ldr	r3, [pc, #184]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 8003618:	689b      	ldr	r3, [r3, #8]
 800361a:	2238      	movs	r2, #56	; 0x38
 800361c:	401a      	ands	r2, r3
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	685b      	ldr	r3, [r3, #4]
 8003622:	00db      	lsls	r3, r3, #3
 8003624:	429a      	cmp	r2, r3
 8003626:	d1ec      	bne.n	8003602 <HAL_RCC_ClockConfig+0x12a>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8003628:	4b27      	ldr	r3, [pc, #156]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	2207      	movs	r2, #7
 800362e:	4013      	ands	r3, r2
 8003630:	683a      	ldr	r2, [r7, #0]
 8003632:	429a      	cmp	r2, r3
 8003634:	d21e      	bcs.n	8003674 <HAL_RCC_ClockConfig+0x19c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003636:	4b24      	ldr	r3, [pc, #144]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	2207      	movs	r2, #7
 800363c:	4393      	bics	r3, r2
 800363e:	0019      	movs	r1, r3
 8003640:	4b21      	ldr	r3, [pc, #132]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 8003642:	683a      	ldr	r2, [r7, #0]
 8003644:	430a      	orrs	r2, r1
 8003646:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8003648:	f7ff f9b8 	bl	80029bc <HAL_GetTick>
 800364c:	0003      	movs	r3, r0
 800364e:	60fb      	str	r3, [r7, #12]

    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8003650:	e009      	b.n	8003666 <HAL_RCC_ClockConfig+0x18e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003652:	f7ff f9b3 	bl	80029bc <HAL_GetTick>
 8003656:	0002      	movs	r2, r0
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	1ad3      	subs	r3, r2, r3
 800365c:	4a1b      	ldr	r2, [pc, #108]	; (80036cc <HAL_RCC_ClockConfig+0x1f4>)
 800365e:	4293      	cmp	r3, r2
 8003660:	d901      	bls.n	8003666 <HAL_RCC_ClockConfig+0x18e>
      {
        return HAL_TIMEOUT;
 8003662:	2303      	movs	r3, #3
 8003664:	e02c      	b.n	80036c0 <HAL_RCC_ClockConfig+0x1e8>
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8003666:	4b18      	ldr	r3, [pc, #96]	; (80036c8 <HAL_RCC_ClockConfig+0x1f0>)
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	2207      	movs	r2, #7
 800366c:	4013      	ands	r3, r2
 800366e:	683a      	ldr	r2, [r7, #0]
 8003670:	429a      	cmp	r2, r3
 8003672:	d1ee      	bne.n	8003652 <HAL_RCC_ClockConfig+0x17a>
      }
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	2204      	movs	r2, #4
 800367a:	4013      	ands	r3, r2
 800367c:	d009      	beq.n	8003692 <HAL_RCC_ClockConfig+0x1ba>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 800367e:	4b14      	ldr	r3, [pc, #80]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 8003680:	689b      	ldr	r3, [r3, #8]
 8003682:	4a15      	ldr	r2, [pc, #84]	; (80036d8 <HAL_RCC_ClockConfig+0x200>)
 8003684:	4013      	ands	r3, r2
 8003686:	0019      	movs	r1, r3
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	68da      	ldr	r2, [r3, #12]
 800368c:	4b10      	ldr	r3, [pc, #64]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 800368e:	430a      	orrs	r2, r1
 8003690:	609a      	str	r2, [r3, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 8003692:	f000 f829 	bl	80036e8 <HAL_RCC_GetSysClockFreq>
 8003696:	0001      	movs	r1, r0
 8003698:	4b0d      	ldr	r3, [pc, #52]	; (80036d0 <HAL_RCC_ClockConfig+0x1f8>)
 800369a:	689b      	ldr	r3, [r3, #8]
 800369c:	0a1b      	lsrs	r3, r3, #8
 800369e:	220f      	movs	r2, #15
 80036a0:	401a      	ands	r2, r3
 80036a2:	4b0e      	ldr	r3, [pc, #56]	; (80036dc <HAL_RCC_ClockConfig+0x204>)
 80036a4:	0092      	lsls	r2, r2, #2
 80036a6:	58d3      	ldr	r3, [r2, r3]
 80036a8:	221f      	movs	r2, #31
 80036aa:	4013      	ands	r3, r2
 80036ac:	000a      	movs	r2, r1
 80036ae:	40da      	lsrs	r2, r3
 80036b0:	4b0b      	ldr	r3, [pc, #44]	; (80036e0 <HAL_RCC_ClockConfig+0x208>)
 80036b2:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  return HAL_InitTick(uwTickPrio);
 80036b4:	4b0b      	ldr	r3, [pc, #44]	; (80036e4 <HAL_RCC_ClockConfig+0x20c>)
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	0018      	movs	r0, r3
 80036ba:	f7ff f923 	bl	8002904 <HAL_InitTick>
 80036be:	0003      	movs	r3, r0
}
 80036c0:	0018      	movs	r0, r3
 80036c2:	46bd      	mov	sp, r7
 80036c4:	b004      	add	sp, #16
 80036c6:	bd80      	pop	{r7, pc}
 80036c8:	40022000 	.word	0x40022000
 80036cc:	00001388 	.word	0x00001388
 80036d0:	40021000 	.word	0x40021000
 80036d4:	fffff0ff 	.word	0xfffff0ff
 80036d8:	ffff8fff 	.word	0xffff8fff
 80036dc:	080072e4 	.word	0x080072e4
 80036e0:	20000008 	.word	0x20000008
 80036e4:	2000000c 	.word	0x2000000c

080036e8 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80036e8:	b580      	push	{r7, lr}
 80036ea:	b086      	sub	sp, #24
 80036ec:	af00      	add	r7, sp, #0
  uint32_t pllvco, pllsource, pllr, pllm, hsidiv;
  uint32_t sysclockfreq;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80036ee:	4b3c      	ldr	r3, [pc, #240]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80036f0:	689b      	ldr	r3, [r3, #8]
 80036f2:	2238      	movs	r2, #56	; 0x38
 80036f4:	4013      	ands	r3, r2
 80036f6:	d10f      	bne.n	8003718 <HAL_RCC_GetSysClockFreq+0x30>
  {
    /* HSISYS can be derived for HSI16 */
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80036f8:	4b39      	ldr	r3, [pc, #228]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	0adb      	lsrs	r3, r3, #11
 80036fe:	2207      	movs	r2, #7
 8003700:	4013      	ands	r3, r2
 8003702:	2201      	movs	r2, #1
 8003704:	409a      	lsls	r2, r3
 8003706:	0013      	movs	r3, r2
 8003708:	603b      	str	r3, [r7, #0]

    /* HSI used as system clock source */
    sysclockfreq = (HSI_VALUE / hsidiv);
 800370a:	6839      	ldr	r1, [r7, #0]
 800370c:	4835      	ldr	r0, [pc, #212]	; (80037e4 <HAL_RCC_GetSysClockFreq+0xfc>)
 800370e:	f7fc fd15 	bl	800013c <__udivsi3>
 8003712:	0003      	movs	r3, r0
 8003714:	613b      	str	r3, [r7, #16]
 8003716:	e05d      	b.n	80037d4 <HAL_RCC_GetSysClockFreq+0xec>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8003718:	4b31      	ldr	r3, [pc, #196]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800371a:	689b      	ldr	r3, [r3, #8]
 800371c:	2238      	movs	r2, #56	; 0x38
 800371e:	4013      	ands	r3, r2
 8003720:	2b08      	cmp	r3, #8
 8003722:	d102      	bne.n	800372a <HAL_RCC_GetSysClockFreq+0x42>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 8003724:	4b30      	ldr	r3, [pc, #192]	; (80037e8 <HAL_RCC_GetSysClockFreq+0x100>)
 8003726:	613b      	str	r3, [r7, #16]
 8003728:	e054      	b.n	80037d4 <HAL_RCC_GetSysClockFreq+0xec>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800372a:	4b2d      	ldr	r3, [pc, #180]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800372c:	689b      	ldr	r3, [r3, #8]
 800372e:	2238      	movs	r2, #56	; 0x38
 8003730:	4013      	ands	r3, r2
 8003732:	2b10      	cmp	r3, #16
 8003734:	d138      	bne.n	80037a8 <HAL_RCC_GetSysClockFreq+0xc0>
    /* PLL used as system clock  source */

    /* PLL_VCO = ((HSE_VALUE or HSI_VALUE)/ PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8003736:	4b2a      	ldr	r3, [pc, #168]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 8003738:	68db      	ldr	r3, [r3, #12]
 800373a:	2203      	movs	r2, #3
 800373c:	4013      	ands	r3, r2
 800373e:	60fb      	str	r3, [r7, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8003740:	4b27      	ldr	r3, [pc, #156]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 8003742:	68db      	ldr	r3, [r3, #12]
 8003744:	091b      	lsrs	r3, r3, #4
 8003746:	2207      	movs	r2, #7
 8003748:	4013      	ands	r3, r2
 800374a:	3301      	adds	r3, #1
 800374c:	60bb      	str	r3, [r7, #8]

    switch (pllsource)
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	2b03      	cmp	r3, #3
 8003752:	d10d      	bne.n	8003770 <HAL_RCC_GetSysClockFreq+0x88>
    {
      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8003754:	68b9      	ldr	r1, [r7, #8]
 8003756:	4824      	ldr	r0, [pc, #144]	; (80037e8 <HAL_RCC_GetSysClockFreq+0x100>)
 8003758:	f7fc fcf0 	bl	800013c <__udivsi3>
 800375c:	0003      	movs	r3, r0
 800375e:	0019      	movs	r1, r3
 8003760:	4b1f      	ldr	r3, [pc, #124]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 8003762:	68db      	ldr	r3, [r3, #12]
 8003764:	0a1b      	lsrs	r3, r3, #8
 8003766:	227f      	movs	r2, #127	; 0x7f
 8003768:	4013      	ands	r3, r2
 800376a:	434b      	muls	r3, r1
 800376c:	617b      	str	r3, [r7, #20]
        break;
 800376e:	e00d      	b.n	800378c <HAL_RCC_GetSysClockFreq+0xa4>

      case RCC_PLLSOURCE_HSI:  /* HSI16 used as PLL clock source */
      default:                 /* HSI16 used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8003770:	68b9      	ldr	r1, [r7, #8]
 8003772:	481c      	ldr	r0, [pc, #112]	; (80037e4 <HAL_RCC_GetSysClockFreq+0xfc>)
 8003774:	f7fc fce2 	bl	800013c <__udivsi3>
 8003778:	0003      	movs	r3, r0
 800377a:	0019      	movs	r1, r3
 800377c:	4b18      	ldr	r3, [pc, #96]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800377e:	68db      	ldr	r3, [r3, #12]
 8003780:	0a1b      	lsrs	r3, r3, #8
 8003782:	227f      	movs	r2, #127	; 0x7f
 8003784:	4013      	ands	r3, r2
 8003786:	434b      	muls	r3, r1
 8003788:	617b      	str	r3, [r7, #20]
        break;
 800378a:	46c0      	nop			; (mov r8, r8)
    }
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 800378c:	4b14      	ldr	r3, [pc, #80]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800378e:	68db      	ldr	r3, [r3, #12]
 8003790:	0f5b      	lsrs	r3, r3, #29
 8003792:	2207      	movs	r2, #7
 8003794:	4013      	ands	r3, r2
 8003796:	3301      	adds	r3, #1
 8003798:	607b      	str	r3, [r7, #4]
    sysclockfreq = pllvco / pllr;
 800379a:	6879      	ldr	r1, [r7, #4]
 800379c:	6978      	ldr	r0, [r7, #20]
 800379e:	f7fc fccd 	bl	800013c <__udivsi3>
 80037a2:	0003      	movs	r3, r0
 80037a4:	613b      	str	r3, [r7, #16]
 80037a6:	e015      	b.n	80037d4 <HAL_RCC_GetSysClockFreq+0xec>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSE)
 80037a8:	4b0d      	ldr	r3, [pc, #52]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80037aa:	689b      	ldr	r3, [r3, #8]
 80037ac:	2238      	movs	r2, #56	; 0x38
 80037ae:	4013      	ands	r3, r2
 80037b0:	2b20      	cmp	r3, #32
 80037b2:	d103      	bne.n	80037bc <HAL_RCC_GetSysClockFreq+0xd4>
  {
    /* LSE used as system clock source */
    sysclockfreq = LSE_VALUE;
 80037b4:	2380      	movs	r3, #128	; 0x80
 80037b6:	021b      	lsls	r3, r3, #8
 80037b8:	613b      	str	r3, [r7, #16]
 80037ba:	e00b      	b.n	80037d4 <HAL_RCC_GetSysClockFreq+0xec>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_LSI)
 80037bc:	4b08      	ldr	r3, [pc, #32]	; (80037e0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80037be:	689b      	ldr	r3, [r3, #8]
 80037c0:	2238      	movs	r2, #56	; 0x38
 80037c2:	4013      	ands	r3, r2
 80037c4:	2b18      	cmp	r3, #24
 80037c6:	d103      	bne.n	80037d0 <HAL_RCC_GetSysClockFreq+0xe8>
  {
    /* LSI used as system clock source */
    sysclockfreq = LSI_VALUE;
 80037c8:	23fa      	movs	r3, #250	; 0xfa
 80037ca:	01db      	lsls	r3, r3, #7
 80037cc:	613b      	str	r3, [r7, #16]
 80037ce:	e001      	b.n	80037d4 <HAL_RCC_GetSysClockFreq+0xec>
  }
  else
  {
    sysclockfreq = 0U;
 80037d0:	2300      	movs	r3, #0
 80037d2:	613b      	str	r3, [r7, #16]
  }

  return sysclockfreq;
 80037d4:	693b      	ldr	r3, [r7, #16]
}
 80037d6:	0018      	movs	r0, r3
 80037d8:	46bd      	mov	sp, r7
 80037da:	b006      	add	sp, #24
 80037dc:	bd80      	pop	{r7, pc}
 80037de:	46c0      	nop			; (mov r8, r8)
 80037e0:	40021000 	.word	0x40021000
 80037e4:	00f42400 	.word	0x00f42400
 80037e8:	007a1200 	.word	0x007a1200

080037ec <HAL_RCC_GetHCLKFreq>:
  *
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80037ec:	b580      	push	{r7, lr}
 80037ee:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80037f0:	4b02      	ldr	r3, [pc, #8]	; (80037fc <HAL_RCC_GetHCLKFreq+0x10>)
 80037f2:	681b      	ldr	r3, [r3, #0]
}
 80037f4:	0018      	movs	r0, r3
 80037f6:	46bd      	mov	sp, r7
 80037f8:	bd80      	pop	{r7, pc}
 80037fa:	46c0      	nop			; (mov r8, r8)
 80037fc:	20000008 	.word	0x20000008

08003800 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003800:	b5b0      	push	{r4, r5, r7, lr}
 8003802:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return ((uint32_t)(__LL_RCC_CALC_PCLK1_FREQ(HAL_RCC_GetHCLKFreq(), LL_RCC_GetAPB1Prescaler())));
 8003804:	f7ff fff2 	bl	80037ec <HAL_RCC_GetHCLKFreq>
 8003808:	0004      	movs	r4, r0
 800380a:	f7ff fb39 	bl	8002e80 <LL_RCC_GetAPB1Prescaler>
 800380e:	0003      	movs	r3, r0
 8003810:	0b1a      	lsrs	r2, r3, #12
 8003812:	4b05      	ldr	r3, [pc, #20]	; (8003828 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003814:	0092      	lsls	r2, r2, #2
 8003816:	58d3      	ldr	r3, [r2, r3]
 8003818:	221f      	movs	r2, #31
 800381a:	4013      	ands	r3, r2
 800381c:	40dc      	lsrs	r4, r3
 800381e:	0023      	movs	r3, r4
}
 8003820:	0018      	movs	r0, r3
 8003822:	46bd      	mov	sp, r7
 8003824:	bdb0      	pop	{r4, r5, r7, pc}
 8003826:	46c0      	nop			; (mov r8, r8)
 8003828:	08007324 	.word	0x08007324

0800382c <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 800382c:	b580      	push	{r7, lr}
 800382e:	b082      	sub	sp, #8
 8003830:	af00      	add	r7, sp, #0
 8003832:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	2b00      	cmp	r3, #0
 8003838:	d101      	bne.n	800383e <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 800383a:	2301      	movs	r3, #1
 800383c:	e046      	b.n	80038cc <HAL_UART_Init+0xa0>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	2284      	movs	r2, #132	; 0x84
 8003842:	589b      	ldr	r3, [r3, r2]
 8003844:	2b00      	cmp	r3, #0
 8003846:	d107      	bne.n	8003858 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	2280      	movs	r2, #128	; 0x80
 800384c:	2100      	movs	r1, #0
 800384e:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	0018      	movs	r0, r3
 8003854:	f7fe fee8 	bl	8002628 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	2284      	movs	r2, #132	; 0x84
 800385c:	2124      	movs	r1, #36	; 0x24
 800385e:	5099      	str	r1, [r3, r2]

  __HAL_UART_DISABLE(huart);
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	681a      	ldr	r2, [r3, #0]
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	2101      	movs	r1, #1
 800386c:	438a      	bics	r2, r1
 800386e:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	0018      	movs	r0, r3
 8003874:	f000 f8dc 	bl	8003a30 <UART_SetConfig>
 8003878:	0003      	movs	r3, r0
 800387a:	2b01      	cmp	r3, #1
 800387c:	d101      	bne.n	8003882 <HAL_UART_Init+0x56>
  {
    return HAL_ERROR;
 800387e:	2301      	movs	r3, #1
 8003880:	e024      	b.n	80038cc <HAL_UART_Init+0xa0>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003886:	2b00      	cmp	r3, #0
 8003888:	d003      	beq.n	8003892 <HAL_UART_Init+0x66>
  {
    UART_AdvFeatureConfig(huart);
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	0018      	movs	r0, r3
 800388e:	f000 fb5f 	bl	8003f50 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	685a      	ldr	r2, [r3, #4]
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	490d      	ldr	r1, [pc, #52]	; (80038d4 <HAL_UART_Init+0xa8>)
 800389e:	400a      	ands	r2, r1
 80038a0:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	689a      	ldr	r2, [r3, #8]
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	212a      	movs	r1, #42	; 0x2a
 80038ae:	438a      	bics	r2, r1
 80038b0:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	681a      	ldr	r2, [r3, #0]
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	2101      	movs	r1, #1
 80038be:	430a      	orrs	r2, r1
 80038c0:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	0018      	movs	r0, r3
 80038c6:	f000 fbf7 	bl	80040b8 <UART_CheckIdleState>
 80038ca:	0003      	movs	r3, r0
}
 80038cc:	0018      	movs	r0, r3
 80038ce:	46bd      	mov	sp, r7
 80038d0:	b002      	add	sp, #8
 80038d2:	bd80      	pop	{r7, pc}
 80038d4:	ffffb7ff 	.word	0xffffb7ff

080038d8 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80038d8:	b580      	push	{r7, lr}
 80038da:	b08a      	sub	sp, #40	; 0x28
 80038dc:	af02      	add	r7, sp, #8
 80038de:	60f8      	str	r0, [r7, #12]
 80038e0:	60b9      	str	r1, [r7, #8]
 80038e2:	603b      	str	r3, [r7, #0]
 80038e4:	1dbb      	adds	r3, r7, #6
 80038e6:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	2284      	movs	r2, #132	; 0x84
 80038ec:	589b      	ldr	r3, [r3, r2]
 80038ee:	2b20      	cmp	r3, #32
 80038f0:	d000      	beq.n	80038f4 <HAL_UART_Transmit+0x1c>
 80038f2:	e097      	b.n	8003a24 <HAL_UART_Transmit+0x14c>
  {
    if ((pData == NULL) || (Size == 0U))
 80038f4:	68bb      	ldr	r3, [r7, #8]
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d003      	beq.n	8003902 <HAL_UART_Transmit+0x2a>
 80038fa:	1dbb      	adds	r3, r7, #6
 80038fc:	881b      	ldrh	r3, [r3, #0]
 80038fe:	2b00      	cmp	r3, #0
 8003900:	d101      	bne.n	8003906 <HAL_UART_Transmit+0x2e>
    {
      return  HAL_ERROR;
 8003902:	2301      	movs	r3, #1
 8003904:	e08f      	b.n	8003a26 <HAL_UART_Transmit+0x14e>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003906:	68fb      	ldr	r3, [r7, #12]
 8003908:	689a      	ldr	r2, [r3, #8]
 800390a:	2380      	movs	r3, #128	; 0x80
 800390c:	015b      	lsls	r3, r3, #5
 800390e:	429a      	cmp	r2, r3
 8003910:	d109      	bne.n	8003926 <HAL_UART_Transmit+0x4e>
 8003912:	68fb      	ldr	r3, [r7, #12]
 8003914:	691b      	ldr	r3, [r3, #16]
 8003916:	2b00      	cmp	r3, #0
 8003918:	d105      	bne.n	8003926 <HAL_UART_Transmit+0x4e>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 800391a:	68bb      	ldr	r3, [r7, #8]
 800391c:	2201      	movs	r2, #1
 800391e:	4013      	ands	r3, r2
 8003920:	d001      	beq.n	8003926 <HAL_UART_Transmit+0x4e>
      {
        return  HAL_ERROR;
 8003922:	2301      	movs	r3, #1
 8003924:	e07f      	b.n	8003a26 <HAL_UART_Transmit+0x14e>
      }
    }

    __HAL_LOCK(huart);
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	2280      	movs	r2, #128	; 0x80
 800392a:	5c9b      	ldrb	r3, [r3, r2]
 800392c:	2b01      	cmp	r3, #1
 800392e:	d101      	bne.n	8003934 <HAL_UART_Transmit+0x5c>
 8003930:	2302      	movs	r3, #2
 8003932:	e078      	b.n	8003a26 <HAL_UART_Transmit+0x14e>
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	2280      	movs	r2, #128	; 0x80
 8003938:	2101      	movs	r1, #1
 800393a:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	228c      	movs	r2, #140	; 0x8c
 8003940:	2100      	movs	r1, #0
 8003942:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	2284      	movs	r2, #132	; 0x84
 8003948:	2121      	movs	r1, #33	; 0x21
 800394a:	5099      	str	r1, [r3, r2]

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 800394c:	f7ff f836 	bl	80029bc <HAL_GetTick>
 8003950:	0003      	movs	r3, r0
 8003952:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8003954:	68fb      	ldr	r3, [r7, #12]
 8003956:	1dba      	adds	r2, r7, #6
 8003958:	2154      	movs	r1, #84	; 0x54
 800395a:	8812      	ldrh	r2, [r2, #0]
 800395c:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 800395e:	68fb      	ldr	r3, [r7, #12]
 8003960:	1dba      	adds	r2, r7, #6
 8003962:	2156      	movs	r1, #86	; 0x56
 8003964:	8812      	ldrh	r2, [r2, #0]
 8003966:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003968:	68fb      	ldr	r3, [r7, #12]
 800396a:	689a      	ldr	r2, [r3, #8]
 800396c:	2380      	movs	r3, #128	; 0x80
 800396e:	015b      	lsls	r3, r3, #5
 8003970:	429a      	cmp	r2, r3
 8003972:	d108      	bne.n	8003986 <HAL_UART_Transmit+0xae>
 8003974:	68fb      	ldr	r3, [r7, #12]
 8003976:	691b      	ldr	r3, [r3, #16]
 8003978:	2b00      	cmp	r3, #0
 800397a:	d104      	bne.n	8003986 <HAL_UART_Transmit+0xae>
    {
      pdata8bits  = NULL;
 800397c:	2300      	movs	r3, #0
 800397e:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8003980:	68bb      	ldr	r3, [r7, #8]
 8003982:	61bb      	str	r3, [r7, #24]
 8003984:	e003      	b.n	800398e <HAL_UART_Transmit+0xb6>
    }
    else
    {
      pdata8bits  = pData;
 8003986:	68bb      	ldr	r3, [r7, #8]
 8003988:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 800398a:	2300      	movs	r3, #0
 800398c:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	2280      	movs	r2, #128	; 0x80
 8003992:	2100      	movs	r1, #0
 8003994:	5499      	strb	r1, [r3, r2]

    while (huart->TxXferCount > 0U)
 8003996:	e02c      	b.n	80039f2 <HAL_UART_Transmit+0x11a>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8003998:	697a      	ldr	r2, [r7, #20]
 800399a:	68f8      	ldr	r0, [r7, #12]
 800399c:	683b      	ldr	r3, [r7, #0]
 800399e:	9300      	str	r3, [sp, #0]
 80039a0:	0013      	movs	r3, r2
 80039a2:	2200      	movs	r2, #0
 80039a4:	2180      	movs	r1, #128	; 0x80
 80039a6:	f000 fbd1 	bl	800414c <UART_WaitOnFlagUntilTimeout>
 80039aa:	1e03      	subs	r3, r0, #0
 80039ac:	d001      	beq.n	80039b2 <HAL_UART_Transmit+0xda>
      {
        return HAL_TIMEOUT;
 80039ae:	2303      	movs	r3, #3
 80039b0:	e039      	b.n	8003a26 <HAL_UART_Transmit+0x14e>
      }
      if (pdata8bits == NULL)
 80039b2:	69fb      	ldr	r3, [r7, #28]
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d10b      	bne.n	80039d0 <HAL_UART_Transmit+0xf8>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80039b8:	69bb      	ldr	r3, [r7, #24]
 80039ba:	881b      	ldrh	r3, [r3, #0]
 80039bc:	001a      	movs	r2, r3
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	681b      	ldr	r3, [r3, #0]
 80039c2:	05d2      	lsls	r2, r2, #23
 80039c4:	0dd2      	lsrs	r2, r2, #23
 80039c6:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 80039c8:	69bb      	ldr	r3, [r7, #24]
 80039ca:	3302      	adds	r3, #2
 80039cc:	61bb      	str	r3, [r7, #24]
 80039ce:	e007      	b.n	80039e0 <HAL_UART_Transmit+0x108>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80039d0:	69fb      	ldr	r3, [r7, #28]
 80039d2:	781a      	ldrb	r2, [r3, #0]
 80039d4:	68fb      	ldr	r3, [r7, #12]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 80039da:	69fb      	ldr	r3, [r7, #28]
 80039dc:	3301      	adds	r3, #1
 80039de:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	2256      	movs	r2, #86	; 0x56
 80039e4:	5a9b      	ldrh	r3, [r3, r2]
 80039e6:	b29b      	uxth	r3, r3
 80039e8:	3b01      	subs	r3, #1
 80039ea:	b299      	uxth	r1, r3
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	2256      	movs	r2, #86	; 0x56
 80039f0:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 80039f2:	68fb      	ldr	r3, [r7, #12]
 80039f4:	2256      	movs	r2, #86	; 0x56
 80039f6:	5a9b      	ldrh	r3, [r3, r2]
 80039f8:	b29b      	uxth	r3, r3
 80039fa:	2b00      	cmp	r3, #0
 80039fc:	d1cc      	bne.n	8003998 <HAL_UART_Transmit+0xc0>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80039fe:	697a      	ldr	r2, [r7, #20]
 8003a00:	68f8      	ldr	r0, [r7, #12]
 8003a02:	683b      	ldr	r3, [r7, #0]
 8003a04:	9300      	str	r3, [sp, #0]
 8003a06:	0013      	movs	r3, r2
 8003a08:	2200      	movs	r2, #0
 8003a0a:	2140      	movs	r1, #64	; 0x40
 8003a0c:	f000 fb9e 	bl	800414c <UART_WaitOnFlagUntilTimeout>
 8003a10:	1e03      	subs	r3, r0, #0
 8003a12:	d001      	beq.n	8003a18 <HAL_UART_Transmit+0x140>
    {
      return HAL_TIMEOUT;
 8003a14:	2303      	movs	r3, #3
 8003a16:	e006      	b.n	8003a26 <HAL_UART_Transmit+0x14e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	2284      	movs	r2, #132	; 0x84
 8003a1c:	2120      	movs	r1, #32
 8003a1e:	5099      	str	r1, [r3, r2]

    return HAL_OK;
 8003a20:	2300      	movs	r3, #0
 8003a22:	e000      	b.n	8003a26 <HAL_UART_Transmit+0x14e>
  }
  else
  {
    return HAL_BUSY;
 8003a24:	2302      	movs	r3, #2
  }
}
 8003a26:	0018      	movs	r0, r3
 8003a28:	46bd      	mov	sp, r7
 8003a2a:	b008      	add	sp, #32
 8003a2c:	bd80      	pop	{r7, pc}
	...

08003a30 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003a30:	b5b0      	push	{r4, r5, r7, lr}
 8003a32:	b090      	sub	sp, #64	; 0x40
 8003a34:	af00      	add	r7, sp, #0
 8003a36:	6278      	str	r0, [r7, #36]	; 0x24
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8003a38:	231a      	movs	r3, #26
 8003a3a:	2220      	movs	r2, #32
 8003a3c:	4694      	mov	ip, r2
 8003a3e:	44bc      	add	ip, r7
 8003a40:	4463      	add	r3, ip
 8003a42:	2200      	movs	r2, #0
 8003a44:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003a46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a48:	689a      	ldr	r2, [r3, #8]
 8003a4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a4c:	691b      	ldr	r3, [r3, #16]
 8003a4e:	431a      	orrs	r2, r3
 8003a50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a52:	695b      	ldr	r3, [r3, #20]
 8003a54:	431a      	orrs	r2, r3
 8003a56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a58:	69db      	ldr	r3, [r3, #28]
 8003a5a:	4313      	orrs	r3, r2
 8003a5c:	63fb      	str	r3, [r7, #60]	; 0x3c
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003a5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	4ac7      	ldr	r2, [pc, #796]	; (8003d84 <UART_SetConfig+0x354>)
 8003a66:	4013      	ands	r3, r2
 8003a68:	0019      	movs	r1, r3
 8003a6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a6c:	681a      	ldr	r2, [r3, #0]
 8003a6e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003a70:	430b      	orrs	r3, r1
 8003a72:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8003a74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a76:	681b      	ldr	r3, [r3, #0]
 8003a78:	685b      	ldr	r3, [r3, #4]
 8003a7a:	4ac3      	ldr	r2, [pc, #780]	; (8003d88 <UART_SetConfig+0x358>)
 8003a7c:	4013      	ands	r3, r2
 8003a7e:	0018      	movs	r0, r3
 8003a80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a82:	68d9      	ldr	r1, [r3, #12]
 8003a84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a86:	681a      	ldr	r2, [r3, #0]
 8003a88:	0003      	movs	r3, r0
 8003a8a:	430b      	orrs	r3, r1
 8003a8c:	6053      	str	r3, [r2, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8003a8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a90:	699b      	ldr	r3, [r3, #24]
 8003a92:	63fb      	str	r3, [r7, #60]	; 0x3c

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8003a94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	4abc      	ldr	r2, [pc, #752]	; (8003d8c <UART_SetConfig+0x35c>)
 8003a9a:	4293      	cmp	r3, r2
 8003a9c:	d004      	beq.n	8003aa8 <UART_SetConfig+0x78>
  {
    tmpreg |= huart->Init.OneBitSampling;
 8003a9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aa0:	6a1b      	ldr	r3, [r3, #32]
 8003aa2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003aa4:	4313      	orrs	r3, r2
 8003aa6:	63fb      	str	r3, [r7, #60]	; 0x3c
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003aa8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	689b      	ldr	r3, [r3, #8]
 8003aae:	4ab8      	ldr	r2, [pc, #736]	; (8003d90 <UART_SetConfig+0x360>)
 8003ab0:	4013      	ands	r3, r2
 8003ab2:	0019      	movs	r1, r3
 8003ab4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ab6:	681a      	ldr	r2, [r3, #0]
 8003ab8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003aba:	430b      	orrs	r3, r1
 8003abc:	6093      	str	r3, [r2, #8]

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 8003abe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ac4:	220f      	movs	r2, #15
 8003ac6:	4393      	bics	r3, r2
 8003ac8:	0018      	movs	r0, r3
 8003aca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003acc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003ace:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ad0:	681a      	ldr	r2, [r3, #0]
 8003ad2:	0003      	movs	r3, r0
 8003ad4:	430b      	orrs	r3, r1
 8003ad6:	62d3      	str	r3, [r2, #44]	; 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003ad8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	4aad      	ldr	r2, [pc, #692]	; (8003d94 <UART_SetConfig+0x364>)
 8003ade:	4293      	cmp	r3, r2
 8003ae0:	d136      	bne.n	8003b50 <UART_SetConfig+0x120>
 8003ae2:	4bad      	ldr	r3, [pc, #692]	; (8003d98 <UART_SetConfig+0x368>)
 8003ae4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003ae6:	2203      	movs	r2, #3
 8003ae8:	4013      	ands	r3, r2
 8003aea:	2b03      	cmp	r3, #3
 8003aec:	d020      	beq.n	8003b30 <UART_SetConfig+0x100>
 8003aee:	d827      	bhi.n	8003b40 <UART_SetConfig+0x110>
 8003af0:	2b02      	cmp	r3, #2
 8003af2:	d00d      	beq.n	8003b10 <UART_SetConfig+0xe0>
 8003af4:	d824      	bhi.n	8003b40 <UART_SetConfig+0x110>
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d002      	beq.n	8003b00 <UART_SetConfig+0xd0>
 8003afa:	2b01      	cmp	r3, #1
 8003afc:	d010      	beq.n	8003b20 <UART_SetConfig+0xf0>
 8003afe:	e01f      	b.n	8003b40 <UART_SetConfig+0x110>
 8003b00:	231b      	movs	r3, #27
 8003b02:	2220      	movs	r2, #32
 8003b04:	4694      	mov	ip, r2
 8003b06:	44bc      	add	ip, r7
 8003b08:	4463      	add	r3, ip
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	701a      	strb	r2, [r3, #0]
 8003b0e:	e07c      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003b10:	231b      	movs	r3, #27
 8003b12:	2220      	movs	r2, #32
 8003b14:	4694      	mov	ip, r2
 8003b16:	44bc      	add	ip, r7
 8003b18:	4463      	add	r3, ip
 8003b1a:	2202      	movs	r2, #2
 8003b1c:	701a      	strb	r2, [r3, #0]
 8003b1e:	e074      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003b20:	231b      	movs	r3, #27
 8003b22:	2220      	movs	r2, #32
 8003b24:	4694      	mov	ip, r2
 8003b26:	44bc      	add	ip, r7
 8003b28:	4463      	add	r3, ip
 8003b2a:	2204      	movs	r2, #4
 8003b2c:	701a      	strb	r2, [r3, #0]
 8003b2e:	e06c      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003b30:	231b      	movs	r3, #27
 8003b32:	2220      	movs	r2, #32
 8003b34:	4694      	mov	ip, r2
 8003b36:	44bc      	add	ip, r7
 8003b38:	4463      	add	r3, ip
 8003b3a:	2208      	movs	r2, #8
 8003b3c:	701a      	strb	r2, [r3, #0]
 8003b3e:	e064      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003b40:	231b      	movs	r3, #27
 8003b42:	2220      	movs	r2, #32
 8003b44:	4694      	mov	ip, r2
 8003b46:	44bc      	add	ip, r7
 8003b48:	4463      	add	r3, ip
 8003b4a:	2210      	movs	r2, #16
 8003b4c:	701a      	strb	r2, [r3, #0]
 8003b4e:	e05c      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003b50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	4a91      	ldr	r2, [pc, #580]	; (8003d9c <UART_SetConfig+0x36c>)
 8003b56:	4293      	cmp	r3, r2
 8003b58:	d107      	bne.n	8003b6a <UART_SetConfig+0x13a>
 8003b5a:	231b      	movs	r3, #27
 8003b5c:	2220      	movs	r2, #32
 8003b5e:	4694      	mov	ip, r2
 8003b60:	44bc      	add	ip, r7
 8003b62:	4463      	add	r3, ip
 8003b64:	2200      	movs	r2, #0
 8003b66:	701a      	strb	r2, [r3, #0]
 8003b68:	e04f      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003b6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	4a87      	ldr	r2, [pc, #540]	; (8003d8c <UART_SetConfig+0x35c>)
 8003b70:	4293      	cmp	r3, r2
 8003b72:	d143      	bne.n	8003bfc <UART_SetConfig+0x1cc>
 8003b74:	4b88      	ldr	r3, [pc, #544]	; (8003d98 <UART_SetConfig+0x368>)
 8003b76:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 8003b78:	23c0      	movs	r3, #192	; 0xc0
 8003b7a:	011b      	lsls	r3, r3, #4
 8003b7c:	4013      	ands	r3, r2
 8003b7e:	22c0      	movs	r2, #192	; 0xc0
 8003b80:	0112      	lsls	r2, r2, #4
 8003b82:	4293      	cmp	r3, r2
 8003b84:	d02a      	beq.n	8003bdc <UART_SetConfig+0x1ac>
 8003b86:	22c0      	movs	r2, #192	; 0xc0
 8003b88:	0112      	lsls	r2, r2, #4
 8003b8a:	4293      	cmp	r3, r2
 8003b8c:	d82e      	bhi.n	8003bec <UART_SetConfig+0x1bc>
 8003b8e:	2280      	movs	r2, #128	; 0x80
 8003b90:	0112      	lsls	r2, r2, #4
 8003b92:	4293      	cmp	r3, r2
 8003b94:	d012      	beq.n	8003bbc <UART_SetConfig+0x18c>
 8003b96:	2280      	movs	r2, #128	; 0x80
 8003b98:	0112      	lsls	r2, r2, #4
 8003b9a:	4293      	cmp	r3, r2
 8003b9c:	d826      	bhi.n	8003bec <UART_SetConfig+0x1bc>
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d004      	beq.n	8003bac <UART_SetConfig+0x17c>
 8003ba2:	2280      	movs	r2, #128	; 0x80
 8003ba4:	00d2      	lsls	r2, r2, #3
 8003ba6:	4293      	cmp	r3, r2
 8003ba8:	d010      	beq.n	8003bcc <UART_SetConfig+0x19c>
 8003baa:	e01f      	b.n	8003bec <UART_SetConfig+0x1bc>
 8003bac:	231b      	movs	r3, #27
 8003bae:	2220      	movs	r2, #32
 8003bb0:	4694      	mov	ip, r2
 8003bb2:	44bc      	add	ip, r7
 8003bb4:	4463      	add	r3, ip
 8003bb6:	2200      	movs	r2, #0
 8003bb8:	701a      	strb	r2, [r3, #0]
 8003bba:	e026      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003bbc:	231b      	movs	r3, #27
 8003bbe:	2220      	movs	r2, #32
 8003bc0:	4694      	mov	ip, r2
 8003bc2:	44bc      	add	ip, r7
 8003bc4:	4463      	add	r3, ip
 8003bc6:	2202      	movs	r2, #2
 8003bc8:	701a      	strb	r2, [r3, #0]
 8003bca:	e01e      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003bcc:	231b      	movs	r3, #27
 8003bce:	2220      	movs	r2, #32
 8003bd0:	4694      	mov	ip, r2
 8003bd2:	44bc      	add	ip, r7
 8003bd4:	4463      	add	r3, ip
 8003bd6:	2204      	movs	r2, #4
 8003bd8:	701a      	strb	r2, [r3, #0]
 8003bda:	e016      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003bdc:	231b      	movs	r3, #27
 8003bde:	2220      	movs	r2, #32
 8003be0:	4694      	mov	ip, r2
 8003be2:	44bc      	add	ip, r7
 8003be4:	4463      	add	r3, ip
 8003be6:	2208      	movs	r2, #8
 8003be8:	701a      	strb	r2, [r3, #0]
 8003bea:	e00e      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003bec:	231b      	movs	r3, #27
 8003bee:	2220      	movs	r2, #32
 8003bf0:	4694      	mov	ip, r2
 8003bf2:	44bc      	add	ip, r7
 8003bf4:	4463      	add	r3, ip
 8003bf6:	2210      	movs	r2, #16
 8003bf8:	701a      	strb	r2, [r3, #0]
 8003bfa:	e006      	b.n	8003c0a <UART_SetConfig+0x1da>
 8003bfc:	231b      	movs	r3, #27
 8003bfe:	2220      	movs	r2, #32
 8003c00:	4694      	mov	ip, r2
 8003c02:	44bc      	add	ip, r7
 8003c04:	4463      	add	r3, ip
 8003c06:	2210      	movs	r2, #16
 8003c08:	701a      	strb	r2, [r3, #0]

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 8003c0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	4a5f      	ldr	r2, [pc, #380]	; (8003d8c <UART_SetConfig+0x35c>)
 8003c10:	4293      	cmp	r3, r2
 8003c12:	d000      	beq.n	8003c16 <UART_SetConfig+0x1e6>
 8003c14:	e096      	b.n	8003d44 <UART_SetConfig+0x314>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 8003c16:	231b      	movs	r3, #27
 8003c18:	2220      	movs	r2, #32
 8003c1a:	4694      	mov	ip, r2
 8003c1c:	44bc      	add	ip, r7
 8003c1e:	4463      	add	r3, ip
 8003c20:	781b      	ldrb	r3, [r3, #0]
 8003c22:	2b08      	cmp	r3, #8
 8003c24:	d015      	beq.n	8003c52 <UART_SetConfig+0x222>
 8003c26:	dc18      	bgt.n	8003c5a <UART_SetConfig+0x22a>
 8003c28:	2b04      	cmp	r3, #4
 8003c2a:	d00d      	beq.n	8003c48 <UART_SetConfig+0x218>
 8003c2c:	dc15      	bgt.n	8003c5a <UART_SetConfig+0x22a>
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	d002      	beq.n	8003c38 <UART_SetConfig+0x208>
 8003c32:	2b02      	cmp	r3, #2
 8003c34:	d005      	beq.n	8003c42 <UART_SetConfig+0x212>
 8003c36:	e010      	b.n	8003c5a <UART_SetConfig+0x22a>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8003c38:	f7ff fde2 	bl	8003800 <HAL_RCC_GetPCLK1Freq>
 8003c3c:	0003      	movs	r3, r0
 8003c3e:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003c40:	e015      	b.n	8003c6e <UART_SetConfig+0x23e>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8003c42:	4b57      	ldr	r3, [pc, #348]	; (8003da0 <UART_SetConfig+0x370>)
 8003c44:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003c46:	e012      	b.n	8003c6e <UART_SetConfig+0x23e>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8003c48:	f7ff fd4e 	bl	80036e8 <HAL_RCC_GetSysClockFreq>
 8003c4c:	0003      	movs	r3, r0
 8003c4e:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003c50:	e00d      	b.n	8003c6e <UART_SetConfig+0x23e>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8003c52:	2380      	movs	r3, #128	; 0x80
 8003c54:	021b      	lsls	r3, r3, #8
 8003c56:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003c58:	e009      	b.n	8003c6e <UART_SetConfig+0x23e>
      default:
        pclk = 0U;
 8003c5a:	2300      	movs	r3, #0
 8003c5c:	637b      	str	r3, [r7, #52]	; 0x34
        ret = HAL_ERROR;
 8003c5e:	231a      	movs	r3, #26
 8003c60:	2220      	movs	r2, #32
 8003c62:	4694      	mov	ip, r2
 8003c64:	44bc      	add	ip, r7
 8003c66:	4463      	add	r3, ip
 8003c68:	2201      	movs	r2, #1
 8003c6a:	701a      	strb	r2, [r3, #0]
        break;
 8003c6c:	46c0      	nop			; (mov r8, r8)
    }

    /* If proper clock source reported */
    if (pclk != 0U)
 8003c6e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003c70:	2b00      	cmp	r3, #0
 8003c72:	d100      	bne.n	8003c76 <UART_SetConfig+0x246>
 8003c74:	e14f      	b.n	8003f16 <UART_SetConfig+0x4e6>
    {
      /* Compute clock after Prescaler */
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 8003c76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c78:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003c7a:	4b4a      	ldr	r3, [pc, #296]	; (8003da4 <UART_SetConfig+0x374>)
 8003c7c:	0052      	lsls	r2, r2, #1
 8003c7e:	5ad3      	ldrh	r3, [r2, r3]
 8003c80:	0019      	movs	r1, r3
 8003c82:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003c84:	f7fc fa5a 	bl	800013c <__udivsi3>
 8003c88:	0003      	movs	r3, r0
 8003c8a:	62bb      	str	r3, [r7, #40]	; 0x28

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8003c8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c8e:	685a      	ldr	r2, [r3, #4]
 8003c90:	0013      	movs	r3, r2
 8003c92:	005b      	lsls	r3, r3, #1
 8003c94:	189b      	adds	r3, r3, r2
 8003c96:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003c98:	429a      	cmp	r2, r3
 8003c9a:	d305      	bcc.n	8003ca8 <UART_SetConfig+0x278>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8003c9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c9e:	685b      	ldr	r3, [r3, #4]
 8003ca0:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8003ca2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003ca4:	429a      	cmp	r2, r3
 8003ca6:	d907      	bls.n	8003cb8 <UART_SetConfig+0x288>
      {
        ret = HAL_ERROR;
 8003ca8:	231a      	movs	r3, #26
 8003caa:	2220      	movs	r2, #32
 8003cac:	4694      	mov	ip, r2
 8003cae:	44bc      	add	ip, r7
 8003cb0:	4463      	add	r3, ip
 8003cb2:	2201      	movs	r2, #1
 8003cb4:	701a      	strb	r2, [r3, #0]
 8003cb6:	e12e      	b.n	8003f16 <UART_SetConfig+0x4e6>
      }
      else
      {
        /* Check computed UsartDiv value is in allocated range
           (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003cb8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003cba:	61bb      	str	r3, [r7, #24]
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	61fb      	str	r3, [r7, #28]
 8003cc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cc2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003cc4:	4b37      	ldr	r3, [pc, #220]	; (8003da4 <UART_SetConfig+0x374>)
 8003cc6:	0052      	lsls	r2, r2, #1
 8003cc8:	5ad3      	ldrh	r3, [r2, r3]
 8003cca:	613b      	str	r3, [r7, #16]
 8003ccc:	2300      	movs	r3, #0
 8003cce:	617b      	str	r3, [r7, #20]
 8003cd0:	693a      	ldr	r2, [r7, #16]
 8003cd2:	697b      	ldr	r3, [r7, #20]
 8003cd4:	69b8      	ldr	r0, [r7, #24]
 8003cd6:	69f9      	ldr	r1, [r7, #28]
 8003cd8:	f7fc fbe4 	bl	80004a4 <__aeabi_uldivmod>
 8003cdc:	0002      	movs	r2, r0
 8003cde:	000b      	movs	r3, r1
 8003ce0:	0e11      	lsrs	r1, r2, #24
 8003ce2:	021d      	lsls	r5, r3, #8
 8003ce4:	430d      	orrs	r5, r1
 8003ce6:	0214      	lsls	r4, r2, #8
 8003ce8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cea:	685b      	ldr	r3, [r3, #4]
 8003cec:	085b      	lsrs	r3, r3, #1
 8003cee:	60bb      	str	r3, [r7, #8]
 8003cf0:	2300      	movs	r3, #0
 8003cf2:	60fb      	str	r3, [r7, #12]
 8003cf4:	68b8      	ldr	r0, [r7, #8]
 8003cf6:	68f9      	ldr	r1, [r7, #12]
 8003cf8:	1900      	adds	r0, r0, r4
 8003cfa:	4169      	adcs	r1, r5
 8003cfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cfe:	685b      	ldr	r3, [r3, #4]
 8003d00:	603b      	str	r3, [r7, #0]
 8003d02:	2300      	movs	r3, #0
 8003d04:	607b      	str	r3, [r7, #4]
 8003d06:	683a      	ldr	r2, [r7, #0]
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	f7fc fbcb 	bl	80004a4 <__aeabi_uldivmod>
 8003d0e:	0002      	movs	r2, r0
 8003d10:	000b      	movs	r3, r1
 8003d12:	0013      	movs	r3, r2
 8003d14:	633b      	str	r3, [r7, #48]	; 0x30
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8003d16:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003d18:	23c0      	movs	r3, #192	; 0xc0
 8003d1a:	009b      	lsls	r3, r3, #2
 8003d1c:	429a      	cmp	r2, r3
 8003d1e:	d309      	bcc.n	8003d34 <UART_SetConfig+0x304>
 8003d20:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003d22:	2380      	movs	r3, #128	; 0x80
 8003d24:	035b      	lsls	r3, r3, #13
 8003d26:	429a      	cmp	r2, r3
 8003d28:	d204      	bcs.n	8003d34 <UART_SetConfig+0x304>
        {
          huart->Instance->BRR = usartdiv;
 8003d2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003d30:	60da      	str	r2, [r3, #12]
 8003d32:	e0f0      	b.n	8003f16 <UART_SetConfig+0x4e6>
        }
        else
        {
          ret = HAL_ERROR;
 8003d34:	231a      	movs	r3, #26
 8003d36:	2220      	movs	r2, #32
 8003d38:	4694      	mov	ip, r2
 8003d3a:	44bc      	add	ip, r7
 8003d3c:	4463      	add	r3, ip
 8003d3e:	2201      	movs	r2, #1
 8003d40:	701a      	strb	r2, [r3, #0]
 8003d42:	e0e8      	b.n	8003f16 <UART_SetConfig+0x4e6>
      } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
                (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003d44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d46:	69da      	ldr	r2, [r3, #28]
 8003d48:	2380      	movs	r3, #128	; 0x80
 8003d4a:	021b      	lsls	r3, r3, #8
 8003d4c:	429a      	cmp	r2, r3
 8003d4e:	d000      	beq.n	8003d52 <UART_SetConfig+0x322>
 8003d50:	e086      	b.n	8003e60 <UART_SetConfig+0x430>
  {
    switch (clocksource)
 8003d52:	231b      	movs	r3, #27
 8003d54:	2220      	movs	r2, #32
 8003d56:	4694      	mov	ip, r2
 8003d58:	44bc      	add	ip, r7
 8003d5a:	4463      	add	r3, ip
 8003d5c:	781b      	ldrb	r3, [r3, #0]
 8003d5e:	2b08      	cmp	r3, #8
 8003d60:	d027      	beq.n	8003db2 <UART_SetConfig+0x382>
 8003d62:	dc2a      	bgt.n	8003dba <UART_SetConfig+0x38a>
 8003d64:	2b04      	cmp	r3, #4
 8003d66:	d01f      	beq.n	8003da8 <UART_SetConfig+0x378>
 8003d68:	dc27      	bgt.n	8003dba <UART_SetConfig+0x38a>
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d002      	beq.n	8003d74 <UART_SetConfig+0x344>
 8003d6e:	2b02      	cmp	r3, #2
 8003d70:	d005      	beq.n	8003d7e <UART_SetConfig+0x34e>
 8003d72:	e022      	b.n	8003dba <UART_SetConfig+0x38a>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8003d74:	f7ff fd44 	bl	8003800 <HAL_RCC_GetPCLK1Freq>
 8003d78:	0003      	movs	r3, r0
 8003d7a:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003d7c:	e027      	b.n	8003dce <UART_SetConfig+0x39e>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8003d7e:	4b08      	ldr	r3, [pc, #32]	; (8003da0 <UART_SetConfig+0x370>)
 8003d80:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003d82:	e024      	b.n	8003dce <UART_SetConfig+0x39e>
 8003d84:	cfff69f3 	.word	0xcfff69f3
 8003d88:	ffffcfff 	.word	0xffffcfff
 8003d8c:	40008000 	.word	0x40008000
 8003d90:	11fff4ff 	.word	0x11fff4ff
 8003d94:	40013800 	.word	0x40013800
 8003d98:	40021000 	.word	0x40021000
 8003d9c:	40004400 	.word	0x40004400
 8003da0:	00f42400 	.word	0x00f42400
 8003da4:	08007344 	.word	0x08007344
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8003da8:	f7ff fc9e 	bl	80036e8 <HAL_RCC_GetSysClockFreq>
 8003dac:	0003      	movs	r3, r0
 8003dae:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003db0:	e00d      	b.n	8003dce <UART_SetConfig+0x39e>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8003db2:	2380      	movs	r3, #128	; 0x80
 8003db4:	021b      	lsls	r3, r3, #8
 8003db6:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003db8:	e009      	b.n	8003dce <UART_SetConfig+0x39e>
      default:
        pclk = 0U;
 8003dba:	2300      	movs	r3, #0
 8003dbc:	637b      	str	r3, [r7, #52]	; 0x34
        ret = HAL_ERROR;
 8003dbe:	231a      	movs	r3, #26
 8003dc0:	2220      	movs	r2, #32
 8003dc2:	4694      	mov	ip, r2
 8003dc4:	44bc      	add	ip, r7
 8003dc6:	4463      	add	r3, ip
 8003dc8:	2201      	movs	r2, #1
 8003dca:	701a      	strb	r2, [r3, #0]
        break;
 8003dcc:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8003dce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003dd0:	2b00      	cmp	r3, #0
 8003dd2:	d100      	bne.n	8003dd6 <UART_SetConfig+0x3a6>
 8003dd4:	e09f      	b.n	8003f16 <UART_SetConfig+0x4e6>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003dd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003dd8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003dda:	4b5b      	ldr	r3, [pc, #364]	; (8003f48 <UART_SetConfig+0x518>)
 8003ddc:	0052      	lsls	r2, r2, #1
 8003dde:	5ad3      	ldrh	r3, [r2, r3]
 8003de0:	0019      	movs	r1, r3
 8003de2:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003de4:	f7fc f9aa 	bl	800013c <__udivsi3>
 8003de8:	0003      	movs	r3, r0
 8003dea:	005a      	lsls	r2, r3, #1
 8003dec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003dee:	685b      	ldr	r3, [r3, #4]
 8003df0:	085b      	lsrs	r3, r3, #1
 8003df2:	18d2      	adds	r2, r2, r3
 8003df4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003df6:	685b      	ldr	r3, [r3, #4]
 8003df8:	0019      	movs	r1, r3
 8003dfa:	0010      	movs	r0, r2
 8003dfc:	f7fc f99e 	bl	800013c <__udivsi3>
 8003e00:	0003      	movs	r3, r0
 8003e02:	b29b      	uxth	r3, r3
 8003e04:	633b      	str	r3, [r7, #48]	; 0x30
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003e06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e08:	2b0f      	cmp	r3, #15
 8003e0a:	d921      	bls.n	8003e50 <UART_SetConfig+0x420>
 8003e0c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003e0e:	2380      	movs	r3, #128	; 0x80
 8003e10:	025b      	lsls	r3, r3, #9
 8003e12:	429a      	cmp	r2, r3
 8003e14:	d21c      	bcs.n	8003e50 <UART_SetConfig+0x420>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003e16:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e18:	b29a      	uxth	r2, r3
 8003e1a:	200e      	movs	r0, #14
 8003e1c:	2420      	movs	r4, #32
 8003e1e:	193b      	adds	r3, r7, r4
 8003e20:	181b      	adds	r3, r3, r0
 8003e22:	210f      	movs	r1, #15
 8003e24:	438a      	bics	r2, r1
 8003e26:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003e28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e2a:	085b      	lsrs	r3, r3, #1
 8003e2c:	b29b      	uxth	r3, r3
 8003e2e:	2207      	movs	r2, #7
 8003e30:	4013      	ands	r3, r2
 8003e32:	b299      	uxth	r1, r3
 8003e34:	193b      	adds	r3, r7, r4
 8003e36:	181b      	adds	r3, r3, r0
 8003e38:	193a      	adds	r2, r7, r4
 8003e3a:	1812      	adds	r2, r2, r0
 8003e3c:	8812      	ldrh	r2, [r2, #0]
 8003e3e:	430a      	orrs	r2, r1
 8003e40:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 8003e42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	193a      	adds	r2, r7, r4
 8003e48:	1812      	adds	r2, r2, r0
 8003e4a:	8812      	ldrh	r2, [r2, #0]
 8003e4c:	60da      	str	r2, [r3, #12]
 8003e4e:	e062      	b.n	8003f16 <UART_SetConfig+0x4e6>
      }
      else
      {
        ret = HAL_ERROR;
 8003e50:	231a      	movs	r3, #26
 8003e52:	2220      	movs	r2, #32
 8003e54:	4694      	mov	ip, r2
 8003e56:	44bc      	add	ip, r7
 8003e58:	4463      	add	r3, ip
 8003e5a:	2201      	movs	r2, #1
 8003e5c:	701a      	strb	r2, [r3, #0]
 8003e5e:	e05a      	b.n	8003f16 <UART_SetConfig+0x4e6>
      }
    }
  }
  else
  {
    switch (clocksource)
 8003e60:	231b      	movs	r3, #27
 8003e62:	2220      	movs	r2, #32
 8003e64:	4694      	mov	ip, r2
 8003e66:	44bc      	add	ip, r7
 8003e68:	4463      	add	r3, ip
 8003e6a:	781b      	ldrb	r3, [r3, #0]
 8003e6c:	2b08      	cmp	r3, #8
 8003e6e:	d015      	beq.n	8003e9c <UART_SetConfig+0x46c>
 8003e70:	dc18      	bgt.n	8003ea4 <UART_SetConfig+0x474>
 8003e72:	2b04      	cmp	r3, #4
 8003e74:	d00d      	beq.n	8003e92 <UART_SetConfig+0x462>
 8003e76:	dc15      	bgt.n	8003ea4 <UART_SetConfig+0x474>
 8003e78:	2b00      	cmp	r3, #0
 8003e7a:	d002      	beq.n	8003e82 <UART_SetConfig+0x452>
 8003e7c:	2b02      	cmp	r3, #2
 8003e7e:	d005      	beq.n	8003e8c <UART_SetConfig+0x45c>
 8003e80:	e010      	b.n	8003ea4 <UART_SetConfig+0x474>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8003e82:	f7ff fcbd 	bl	8003800 <HAL_RCC_GetPCLK1Freq>
 8003e86:	0003      	movs	r3, r0
 8003e88:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003e8a:	e015      	b.n	8003eb8 <UART_SetConfig+0x488>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8003e8c:	4b2f      	ldr	r3, [pc, #188]	; (8003f4c <UART_SetConfig+0x51c>)
 8003e8e:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003e90:	e012      	b.n	8003eb8 <UART_SetConfig+0x488>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8003e92:	f7ff fc29 	bl	80036e8 <HAL_RCC_GetSysClockFreq>
 8003e96:	0003      	movs	r3, r0
 8003e98:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003e9a:	e00d      	b.n	8003eb8 <UART_SetConfig+0x488>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8003e9c:	2380      	movs	r3, #128	; 0x80
 8003e9e:	021b      	lsls	r3, r3, #8
 8003ea0:	637b      	str	r3, [r7, #52]	; 0x34
        break;
 8003ea2:	e009      	b.n	8003eb8 <UART_SetConfig+0x488>
      default:
        pclk = 0U;
 8003ea4:	2300      	movs	r3, #0
 8003ea6:	637b      	str	r3, [r7, #52]	; 0x34
        ret = HAL_ERROR;
 8003ea8:	231a      	movs	r3, #26
 8003eaa:	2220      	movs	r2, #32
 8003eac:	4694      	mov	ip, r2
 8003eae:	44bc      	add	ip, r7
 8003eb0:	4463      	add	r3, ip
 8003eb2:	2201      	movs	r2, #1
 8003eb4:	701a      	strb	r2, [r3, #0]
        break;
 8003eb6:	46c0      	nop			; (mov r8, r8)
    }

    if (pclk != 0U)
 8003eb8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d02b      	beq.n	8003f16 <UART_SetConfig+0x4e6>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003ebe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ec0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003ec2:	4b21      	ldr	r3, [pc, #132]	; (8003f48 <UART_SetConfig+0x518>)
 8003ec4:	0052      	lsls	r2, r2, #1
 8003ec6:	5ad3      	ldrh	r3, [r2, r3]
 8003ec8:	0019      	movs	r1, r3
 8003eca:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003ecc:	f7fc f936 	bl	800013c <__udivsi3>
 8003ed0:	0003      	movs	r3, r0
 8003ed2:	001a      	movs	r2, r3
 8003ed4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ed6:	685b      	ldr	r3, [r3, #4]
 8003ed8:	085b      	lsrs	r3, r3, #1
 8003eda:	18d2      	adds	r2, r2, r3
 8003edc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ede:	685b      	ldr	r3, [r3, #4]
 8003ee0:	0019      	movs	r1, r3
 8003ee2:	0010      	movs	r0, r2
 8003ee4:	f7fc f92a 	bl	800013c <__udivsi3>
 8003ee8:	0003      	movs	r3, r0
 8003eea:	b29b      	uxth	r3, r3
 8003eec:	633b      	str	r3, [r7, #48]	; 0x30
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003eee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ef0:	2b0f      	cmp	r3, #15
 8003ef2:	d909      	bls.n	8003f08 <UART_SetConfig+0x4d8>
 8003ef4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003ef6:	2380      	movs	r3, #128	; 0x80
 8003ef8:	025b      	lsls	r3, r3, #9
 8003efa:	429a      	cmp	r2, r3
 8003efc:	d204      	bcs.n	8003f08 <UART_SetConfig+0x4d8>
      {
        huart->Instance->BRR = usartdiv;
 8003efe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003f04:	60da      	str	r2, [r3, #12]
 8003f06:	e006      	b.n	8003f16 <UART_SetConfig+0x4e6>
      }
      else
      {
        ret = HAL_ERROR;
 8003f08:	231a      	movs	r3, #26
 8003f0a:	2220      	movs	r2, #32
 8003f0c:	4694      	mov	ip, r2
 8003f0e:	44bc      	add	ip, r7
 8003f10:	4463      	add	r3, ip
 8003f12:	2201      	movs	r2, #1
 8003f14:	701a      	strb	r2, [r3, #0]
      }
    }
  }

  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
 8003f16:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f18:	226a      	movs	r2, #106	; 0x6a
 8003f1a:	2101      	movs	r1, #1
 8003f1c:	5299      	strh	r1, [r3, r2]
  huart->NbRxDataToProcess = 1;
 8003f1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f20:	2268      	movs	r2, #104	; 0x68
 8003f22:	2101      	movs	r1, #1
 8003f24:	5299      	strh	r1, [r3, r2]

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8003f26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f28:	2200      	movs	r2, #0
 8003f2a:	671a      	str	r2, [r3, #112]	; 0x70
  huart->TxISR = NULL;
 8003f2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f2e:	2200      	movs	r2, #0
 8003f30:	675a      	str	r2, [r3, #116]	; 0x74

  return ret;
 8003f32:	231a      	movs	r3, #26
 8003f34:	2220      	movs	r2, #32
 8003f36:	4694      	mov	ip, r2
 8003f38:	44bc      	add	ip, r7
 8003f3a:	4463      	add	r3, ip
 8003f3c:	781b      	ldrb	r3, [r3, #0]
}
 8003f3e:	0018      	movs	r0, r3
 8003f40:	46bd      	mov	sp, r7
 8003f42:	b010      	add	sp, #64	; 0x40
 8003f44:	bdb0      	pop	{r4, r5, r7, pc}
 8003f46:	46c0      	nop			; (mov r8, r8)
 8003f48:	08007344 	.word	0x08007344
 8003f4c:	00f42400 	.word	0x00f42400

08003f50 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8003f50:	b580      	push	{r7, lr}
 8003f52:	b082      	sub	sp, #8
 8003f54:	af00      	add	r7, sp, #0
 8003f56:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003f5c:	2201      	movs	r2, #1
 8003f5e:	4013      	ands	r3, r2
 8003f60:	d00b      	beq.n	8003f7a <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	685b      	ldr	r3, [r3, #4]
 8003f68:	4a4a      	ldr	r2, [pc, #296]	; (8004094 <UART_AdvFeatureConfig+0x144>)
 8003f6a:	4013      	ands	r3, r2
 8003f6c:	0019      	movs	r1, r3
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	430a      	orrs	r2, r1
 8003f78:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003f7e:	2202      	movs	r2, #2
 8003f80:	4013      	ands	r3, r2
 8003f82:	d00b      	beq.n	8003f9c <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	681b      	ldr	r3, [r3, #0]
 8003f88:	685b      	ldr	r3, [r3, #4]
 8003f8a:	4a43      	ldr	r2, [pc, #268]	; (8004098 <UART_AdvFeatureConfig+0x148>)
 8003f8c:	4013      	ands	r3, r2
 8003f8e:	0019      	movs	r1, r3
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	430a      	orrs	r2, r1
 8003f9a:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003f9c:	687b      	ldr	r3, [r7, #4]
 8003f9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003fa0:	2204      	movs	r2, #4
 8003fa2:	4013      	ands	r3, r2
 8003fa4:	d00b      	beq.n	8003fbe <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	685b      	ldr	r3, [r3, #4]
 8003fac:	4a3b      	ldr	r2, [pc, #236]	; (800409c <UART_AdvFeatureConfig+0x14c>)
 8003fae:	4013      	ands	r3, r2
 8003fb0:	0019      	movs	r1, r3
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	430a      	orrs	r2, r1
 8003fbc:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003fc2:	2208      	movs	r2, #8
 8003fc4:	4013      	ands	r3, r2
 8003fc6:	d00b      	beq.n	8003fe0 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	685b      	ldr	r3, [r3, #4]
 8003fce:	4a34      	ldr	r2, [pc, #208]	; (80040a0 <UART_AdvFeatureConfig+0x150>)
 8003fd0:	4013      	ands	r3, r2
 8003fd2:	0019      	movs	r1, r3
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	430a      	orrs	r2, r1
 8003fde:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003fe4:	2210      	movs	r2, #16
 8003fe6:	4013      	ands	r3, r2
 8003fe8:	d00b      	beq.n	8004002 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	689b      	ldr	r3, [r3, #8]
 8003ff0:	4a2c      	ldr	r2, [pc, #176]	; (80040a4 <UART_AdvFeatureConfig+0x154>)
 8003ff2:	4013      	ands	r3, r2
 8003ff4:	0019      	movs	r1, r3
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	430a      	orrs	r2, r1
 8004000:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004006:	2220      	movs	r2, #32
 8004008:	4013      	ands	r3, r2
 800400a:	d00b      	beq.n	8004024 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	689b      	ldr	r3, [r3, #8]
 8004012:	4a25      	ldr	r2, [pc, #148]	; (80040a8 <UART_AdvFeatureConfig+0x158>)
 8004014:	4013      	ands	r3, r2
 8004016:	0019      	movs	r1, r3
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	430a      	orrs	r2, r1
 8004022:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004028:	2240      	movs	r2, #64	; 0x40
 800402a:	4013      	ands	r3, r2
 800402c:	d01d      	beq.n	800406a <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	685b      	ldr	r3, [r3, #4]
 8004034:	4a1d      	ldr	r2, [pc, #116]	; (80040ac <UART_AdvFeatureConfig+0x15c>)
 8004036:	4013      	ands	r3, r2
 8004038:	0019      	movs	r1, r3
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	430a      	orrs	r2, r1
 8004044:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800404a:	2380      	movs	r3, #128	; 0x80
 800404c:	035b      	lsls	r3, r3, #13
 800404e:	429a      	cmp	r2, r3
 8004050:	d10b      	bne.n	800406a <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	685b      	ldr	r3, [r3, #4]
 8004058:	4a15      	ldr	r2, [pc, #84]	; (80040b0 <UART_AdvFeatureConfig+0x160>)
 800405a:	4013      	ands	r3, r2
 800405c:	0019      	movs	r1, r3
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	430a      	orrs	r2, r1
 8004068:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800406e:	2280      	movs	r2, #128	; 0x80
 8004070:	4013      	ands	r3, r2
 8004072:	d00b      	beq.n	800408c <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	685b      	ldr	r3, [r3, #4]
 800407a:	4a0e      	ldr	r2, [pc, #56]	; (80040b4 <UART_AdvFeatureConfig+0x164>)
 800407c:	4013      	ands	r3, r2
 800407e:	0019      	movs	r1, r3
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	430a      	orrs	r2, r1
 800408a:	605a      	str	r2, [r3, #4]
  }
}
 800408c:	46c0      	nop			; (mov r8, r8)
 800408e:	46bd      	mov	sp, r7
 8004090:	b002      	add	sp, #8
 8004092:	bd80      	pop	{r7, pc}
 8004094:	fffdffff 	.word	0xfffdffff
 8004098:	fffeffff 	.word	0xfffeffff
 800409c:	fffbffff 	.word	0xfffbffff
 80040a0:	ffff7fff 	.word	0xffff7fff
 80040a4:	ffffefff 	.word	0xffffefff
 80040a8:	ffffdfff 	.word	0xffffdfff
 80040ac:	ffefffff 	.word	0xffefffff
 80040b0:	ff9fffff 	.word	0xff9fffff
 80040b4:	fff7ffff 	.word	0xfff7ffff

080040b8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 80040b8:	b580      	push	{r7, lr}
 80040ba:	b086      	sub	sp, #24
 80040bc:	af02      	add	r7, sp, #8
 80040be:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	228c      	movs	r2, #140	; 0x8c
 80040c4:	2100      	movs	r1, #0
 80040c6:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 80040c8:	f7fe fc78 	bl	80029bc <HAL_GetTick>
 80040cc:	0003      	movs	r3, r0
 80040ce:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	2208      	movs	r2, #8
 80040d8:	4013      	ands	r3, r2
 80040da:	2b08      	cmp	r3, #8
 80040dc:	d10c      	bne.n	80040f8 <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	2280      	movs	r2, #128	; 0x80
 80040e2:	0391      	lsls	r1, r2, #14
 80040e4:	6878      	ldr	r0, [r7, #4]
 80040e6:	4a18      	ldr	r2, [pc, #96]	; (8004148 <UART_CheckIdleState+0x90>)
 80040e8:	9200      	str	r2, [sp, #0]
 80040ea:	2200      	movs	r2, #0
 80040ec:	f000 f82e 	bl	800414c <UART_WaitOnFlagUntilTimeout>
 80040f0:	1e03      	subs	r3, r0, #0
 80040f2:	d001      	beq.n	80040f8 <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80040f4:	2303      	movs	r3, #3
 80040f6:	e023      	b.n	8004140 <UART_CheckIdleState+0x88>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	2204      	movs	r2, #4
 8004100:	4013      	ands	r3, r2
 8004102:	2b04      	cmp	r3, #4
 8004104:	d10c      	bne.n	8004120 <UART_CheckIdleState+0x68>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004106:	68fb      	ldr	r3, [r7, #12]
 8004108:	2280      	movs	r2, #128	; 0x80
 800410a:	03d1      	lsls	r1, r2, #15
 800410c:	6878      	ldr	r0, [r7, #4]
 800410e:	4a0e      	ldr	r2, [pc, #56]	; (8004148 <UART_CheckIdleState+0x90>)
 8004110:	9200      	str	r2, [sp, #0]
 8004112:	2200      	movs	r2, #0
 8004114:	f000 f81a 	bl	800414c <UART_WaitOnFlagUntilTimeout>
 8004118:	1e03      	subs	r3, r0, #0
 800411a:	d001      	beq.n	8004120 <UART_CheckIdleState+0x68>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 800411c:	2303      	movs	r3, #3
 800411e:	e00f      	b.n	8004140 <UART_CheckIdleState+0x88>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	2284      	movs	r2, #132	; 0x84
 8004124:	2120      	movs	r1, #32
 8004126:	5099      	str	r1, [r3, r2]
  huart->RxState = HAL_UART_STATE_READY;
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	2288      	movs	r2, #136	; 0x88
 800412c:	2120      	movs	r1, #32
 800412e:	5099      	str	r1, [r3, r2]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	2200      	movs	r2, #0
 8004134:	66da      	str	r2, [r3, #108]	; 0x6c

  __HAL_UNLOCK(huart);
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	2280      	movs	r2, #128	; 0x80
 800413a:	2100      	movs	r1, #0
 800413c:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 800413e:	2300      	movs	r3, #0
}
 8004140:	0018      	movs	r0, r3
 8004142:	46bd      	mov	sp, r7
 8004144:	b004      	add	sp, #16
 8004146:	bd80      	pop	{r7, pc}
 8004148:	01ffffff 	.word	0x01ffffff

0800414c <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800414c:	b580      	push	{r7, lr}
 800414e:	b094      	sub	sp, #80	; 0x50
 8004150:	af00      	add	r7, sp, #0
 8004152:	60f8      	str	r0, [r7, #12]
 8004154:	60b9      	str	r1, [r7, #8]
 8004156:	603b      	str	r3, [r7, #0]
 8004158:	1dfb      	adds	r3, r7, #7
 800415a:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800415c:	e0a7      	b.n	80042ae <UART_WaitOnFlagUntilTimeout+0x162>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800415e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8004160:	3301      	adds	r3, #1
 8004162:	d100      	bne.n	8004166 <UART_WaitOnFlagUntilTimeout+0x1a>
 8004164:	e0a3      	b.n	80042ae <UART_WaitOnFlagUntilTimeout+0x162>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004166:	f7fe fc29 	bl	80029bc <HAL_GetTick>
 800416a:	0002      	movs	r2, r0
 800416c:	683b      	ldr	r3, [r7, #0]
 800416e:	1ad3      	subs	r3, r2, r3
 8004170:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8004172:	429a      	cmp	r2, r3
 8004174:	d302      	bcc.n	800417c <UART_WaitOnFlagUntilTimeout+0x30>
 8004176:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8004178:	2b00      	cmp	r3, #0
 800417a:	d13f      	bne.n	80041fc <UART_WaitOnFlagUntilTimeout+0xb0>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800417c:	f3ef 8310 	mrs	r3, PRIMASK
 8004180:	62bb      	str	r3, [r7, #40]	; 0x28
  return(result);
 8004182:	6abb      	ldr	r3, [r7, #40]	; 0x28
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
 8004184:	647b      	str	r3, [r7, #68]	; 0x44
 8004186:	2301      	movs	r3, #1
 8004188:	62fb      	str	r3, [r7, #44]	; 0x2c
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800418a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800418c:	f383 8810 	msr	PRIMASK, r3
}
 8004190:	46c0      	nop			; (mov r8, r8)
 8004192:	68fb      	ldr	r3, [r7, #12]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	681a      	ldr	r2, [r3, #0]
 8004198:	68fb      	ldr	r3, [r7, #12]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	494e      	ldr	r1, [pc, #312]	; (80042d8 <UART_WaitOnFlagUntilTimeout+0x18c>)
 800419e:	400a      	ands	r2, r1
 80041a0:	601a      	str	r2, [r3, #0]
 80041a2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80041a4:	633b      	str	r3, [r7, #48]	; 0x30
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80041a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80041a8:	f383 8810 	msr	PRIMASK, r3
}
 80041ac:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80041ae:	f3ef 8310 	mrs	r3, PRIMASK
 80041b2:	637b      	str	r3, [r7, #52]	; 0x34
  return(result);
 80041b4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
                                                USART_CR1_TXEIE_TXFNFIE));
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80041b6:	643b      	str	r3, [r7, #64]	; 0x40
 80041b8:	2301      	movs	r3, #1
 80041ba:	63bb      	str	r3, [r7, #56]	; 0x38
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80041bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80041be:	f383 8810 	msr	PRIMASK, r3
}
 80041c2:	46c0      	nop			; (mov r8, r8)
 80041c4:	68fb      	ldr	r3, [r7, #12]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	689a      	ldr	r2, [r3, #8]
 80041ca:	68fb      	ldr	r3, [r7, #12]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	2101      	movs	r1, #1
 80041d0:	438a      	bics	r2, r1
 80041d2:	609a      	str	r2, [r3, #8]
 80041d4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80041d6:	63fb      	str	r3, [r7, #60]	; 0x3c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80041d8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80041da:	f383 8810 	msr	PRIMASK, r3
}
 80041de:	46c0      	nop			; (mov r8, r8)

        huart->gState = HAL_UART_STATE_READY;
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	2284      	movs	r2, #132	; 0x84
 80041e4:	2120      	movs	r1, #32
 80041e6:	5099      	str	r1, [r3, r2]
        huart->RxState = HAL_UART_STATE_READY;
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	2288      	movs	r2, #136	; 0x88
 80041ec:	2120      	movs	r1, #32
 80041ee:	5099      	str	r1, [r3, r2]

        __HAL_UNLOCK(huart);
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	2280      	movs	r2, #128	; 0x80
 80041f4:	2100      	movs	r1, #0
 80041f6:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 80041f8:	2303      	movs	r3, #3
 80041fa:	e069      	b.n	80042d0 <UART_WaitOnFlagUntilTimeout+0x184>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 80041fc:	68fb      	ldr	r3, [r7, #12]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	2204      	movs	r2, #4
 8004204:	4013      	ands	r3, r2
 8004206:	d052      	beq.n	80042ae <UART_WaitOnFlagUntilTimeout+0x162>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	69da      	ldr	r2, [r3, #28]
 800420e:	2380      	movs	r3, #128	; 0x80
 8004210:	011b      	lsls	r3, r3, #4
 8004212:	401a      	ands	r2, r3
 8004214:	2380      	movs	r3, #128	; 0x80
 8004216:	011b      	lsls	r3, r3, #4
 8004218:	429a      	cmp	r2, r3
 800421a:	d148      	bne.n	80042ae <UART_WaitOnFlagUntilTimeout+0x162>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	2280      	movs	r2, #128	; 0x80
 8004222:	0112      	lsls	r2, r2, #4
 8004224:	621a      	str	r2, [r3, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004226:	f3ef 8310 	mrs	r3, PRIMASK
 800422a:	613b      	str	r3, [r7, #16]
  return(result);
 800422c:	693b      	ldr	r3, [r7, #16]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
 800422e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004230:	2301      	movs	r3, #1
 8004232:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004234:	697b      	ldr	r3, [r7, #20]
 8004236:	f383 8810 	msr	PRIMASK, r3
}
 800423a:	46c0      	nop			; (mov r8, r8)
 800423c:	68fb      	ldr	r3, [r7, #12]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	681a      	ldr	r2, [r3, #0]
 8004242:	68fb      	ldr	r3, [r7, #12]
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	4924      	ldr	r1, [pc, #144]	; (80042d8 <UART_WaitOnFlagUntilTimeout+0x18c>)
 8004248:	400a      	ands	r2, r1
 800424a:	601a      	str	r2, [r3, #0]
 800424c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800424e:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004250:	69bb      	ldr	r3, [r7, #24]
 8004252:	f383 8810 	msr	PRIMASK, r3
}
 8004256:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8004258:	f3ef 8310 	mrs	r3, PRIMASK
 800425c:	61fb      	str	r3, [r7, #28]
  return(result);
 800425e:	69fb      	ldr	r3, [r7, #28]
                                                  USART_CR1_TXEIE_TXFNFIE));
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004260:	64bb      	str	r3, [r7, #72]	; 0x48
 8004262:	2301      	movs	r3, #1
 8004264:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004266:	6a3b      	ldr	r3, [r7, #32]
 8004268:	f383 8810 	msr	PRIMASK, r3
}
 800426c:	46c0      	nop			; (mov r8, r8)
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	689a      	ldr	r2, [r3, #8]
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	2101      	movs	r1, #1
 800427a:	438a      	bics	r2, r1
 800427c:	609a      	str	r2, [r3, #8]
 800427e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8004280:	627b      	str	r3, [r7, #36]	; 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8004282:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004284:	f383 8810 	msr	PRIMASK, r3
}
 8004288:	46c0      	nop			; (mov r8, r8)

          huart->gState = HAL_UART_STATE_READY;
 800428a:	68fb      	ldr	r3, [r7, #12]
 800428c:	2284      	movs	r2, #132	; 0x84
 800428e:	2120      	movs	r1, #32
 8004290:	5099      	str	r1, [r3, r2]
          huart->RxState = HAL_UART_STATE_READY;
 8004292:	68fb      	ldr	r3, [r7, #12]
 8004294:	2288      	movs	r2, #136	; 0x88
 8004296:	2120      	movs	r1, #32
 8004298:	5099      	str	r1, [r3, r2]
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800429a:	68fb      	ldr	r3, [r7, #12]
 800429c:	228c      	movs	r2, #140	; 0x8c
 800429e:	2120      	movs	r1, #32
 80042a0:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	2280      	movs	r2, #128	; 0x80
 80042a6:	2100      	movs	r1, #0
 80042a8:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 80042aa:	2303      	movs	r3, #3
 80042ac:	e010      	b.n	80042d0 <UART_WaitOnFlagUntilTimeout+0x184>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80042ae:	68fb      	ldr	r3, [r7, #12]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	69db      	ldr	r3, [r3, #28]
 80042b4:	68ba      	ldr	r2, [r7, #8]
 80042b6:	4013      	ands	r3, r2
 80042b8:	68ba      	ldr	r2, [r7, #8]
 80042ba:	1ad3      	subs	r3, r2, r3
 80042bc:	425a      	negs	r2, r3
 80042be:	4153      	adcs	r3, r2
 80042c0:	b2db      	uxtb	r3, r3
 80042c2:	001a      	movs	r2, r3
 80042c4:	1dfb      	adds	r3, r7, #7
 80042c6:	781b      	ldrb	r3, [r3, #0]
 80042c8:	429a      	cmp	r2, r3
 80042ca:	d100      	bne.n	80042ce <UART_WaitOnFlagUntilTimeout+0x182>
 80042cc:	e747      	b.n	800415e <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80042ce:	2300      	movs	r3, #0
}
 80042d0:	0018      	movs	r0, r3
 80042d2:	46bd      	mov	sp, r7
 80042d4:	b014      	add	sp, #80	; 0x50
 80042d6:	bd80      	pop	{r7, pc}
 80042d8:	fffffe5f 	.word	0xfffffe5f

080042dc <__errno>:
 80042dc:	4b01      	ldr	r3, [pc, #4]	; (80042e4 <__errno+0x8>)
 80042de:	6818      	ldr	r0, [r3, #0]
 80042e0:	4770      	bx	lr
 80042e2:	46c0      	nop			; (mov r8, r8)
 80042e4:	20000014 	.word	0x20000014

080042e8 <__libc_init_array>:
 80042e8:	b570      	push	{r4, r5, r6, lr}
 80042ea:	2600      	movs	r6, #0
 80042ec:	4d0c      	ldr	r5, [pc, #48]	; (8004320 <__libc_init_array+0x38>)
 80042ee:	4c0d      	ldr	r4, [pc, #52]	; (8004324 <__libc_init_array+0x3c>)
 80042f0:	1b64      	subs	r4, r4, r5
 80042f2:	10a4      	asrs	r4, r4, #2
 80042f4:	42a6      	cmp	r6, r4
 80042f6:	d109      	bne.n	800430c <__libc_init_array+0x24>
 80042f8:	2600      	movs	r6, #0
 80042fa:	f002 ff6d 	bl	80071d8 <_init>
 80042fe:	4d0a      	ldr	r5, [pc, #40]	; (8004328 <__libc_init_array+0x40>)
 8004300:	4c0a      	ldr	r4, [pc, #40]	; (800432c <__libc_init_array+0x44>)
 8004302:	1b64      	subs	r4, r4, r5
 8004304:	10a4      	asrs	r4, r4, #2
 8004306:	42a6      	cmp	r6, r4
 8004308:	d105      	bne.n	8004316 <__libc_init_array+0x2e>
 800430a:	bd70      	pop	{r4, r5, r6, pc}
 800430c:	00b3      	lsls	r3, r6, #2
 800430e:	58eb      	ldr	r3, [r5, r3]
 8004310:	4798      	blx	r3
 8004312:	3601      	adds	r6, #1
 8004314:	e7ee      	b.n	80042f4 <__libc_init_array+0xc>
 8004316:	00b3      	lsls	r3, r6, #2
 8004318:	58eb      	ldr	r3, [r5, r3]
 800431a:	4798      	blx	r3
 800431c:	3601      	adds	r6, #1
 800431e:	e7f2      	b.n	8004306 <__libc_init_array+0x1e>
 8004320:	08007744 	.word	0x08007744
 8004324:	08007744 	.word	0x08007744
 8004328:	08007744 	.word	0x08007744
 800432c:	08007748 	.word	0x08007748

08004330 <memset>:
 8004330:	0003      	movs	r3, r0
 8004332:	1882      	adds	r2, r0, r2
 8004334:	4293      	cmp	r3, r2
 8004336:	d100      	bne.n	800433a <memset+0xa>
 8004338:	4770      	bx	lr
 800433a:	7019      	strb	r1, [r3, #0]
 800433c:	3301      	adds	r3, #1
 800433e:	e7f9      	b.n	8004334 <memset+0x4>

08004340 <__cvt>:
 8004340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004342:	001e      	movs	r6, r3
 8004344:	2300      	movs	r3, #0
 8004346:	0014      	movs	r4, r2
 8004348:	b08b      	sub	sp, #44	; 0x2c
 800434a:	429e      	cmp	r6, r3
 800434c:	da04      	bge.n	8004358 <__cvt+0x18>
 800434e:	2180      	movs	r1, #128	; 0x80
 8004350:	0609      	lsls	r1, r1, #24
 8004352:	1873      	adds	r3, r6, r1
 8004354:	001e      	movs	r6, r3
 8004356:	232d      	movs	r3, #45	; 0x2d
 8004358:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800435a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800435c:	7013      	strb	r3, [r2, #0]
 800435e:	2320      	movs	r3, #32
 8004360:	2203      	movs	r2, #3
 8004362:	439f      	bics	r7, r3
 8004364:	2f46      	cmp	r7, #70	; 0x46
 8004366:	d007      	beq.n	8004378 <__cvt+0x38>
 8004368:	003b      	movs	r3, r7
 800436a:	3b45      	subs	r3, #69	; 0x45
 800436c:	4259      	negs	r1, r3
 800436e:	414b      	adcs	r3, r1
 8004370:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004372:	3a01      	subs	r2, #1
 8004374:	18cb      	adds	r3, r1, r3
 8004376:	9310      	str	r3, [sp, #64]	; 0x40
 8004378:	ab09      	add	r3, sp, #36	; 0x24
 800437a:	9304      	str	r3, [sp, #16]
 800437c:	ab08      	add	r3, sp, #32
 800437e:	9303      	str	r3, [sp, #12]
 8004380:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004382:	9200      	str	r2, [sp, #0]
 8004384:	9302      	str	r3, [sp, #8]
 8004386:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004388:	0022      	movs	r2, r4
 800438a:	9301      	str	r3, [sp, #4]
 800438c:	0033      	movs	r3, r6
 800438e:	f000 fcfd 	bl	8004d8c <_dtoa_r>
 8004392:	0005      	movs	r5, r0
 8004394:	2f47      	cmp	r7, #71	; 0x47
 8004396:	d102      	bne.n	800439e <__cvt+0x5e>
 8004398:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800439a:	07db      	lsls	r3, r3, #31
 800439c:	d528      	bpl.n	80043f0 <__cvt+0xb0>
 800439e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80043a0:	18eb      	adds	r3, r5, r3
 80043a2:	9307      	str	r3, [sp, #28]
 80043a4:	2f46      	cmp	r7, #70	; 0x46
 80043a6:	d114      	bne.n	80043d2 <__cvt+0x92>
 80043a8:	782b      	ldrb	r3, [r5, #0]
 80043aa:	2b30      	cmp	r3, #48	; 0x30
 80043ac:	d10c      	bne.n	80043c8 <__cvt+0x88>
 80043ae:	2200      	movs	r2, #0
 80043b0:	2300      	movs	r3, #0
 80043b2:	0020      	movs	r0, r4
 80043b4:	0031      	movs	r1, r6
 80043b6:	f7fc f847 	bl	8000448 <__aeabi_dcmpeq>
 80043ba:	2800      	cmp	r0, #0
 80043bc:	d104      	bne.n	80043c8 <__cvt+0x88>
 80043be:	2301      	movs	r3, #1
 80043c0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80043c2:	1a9b      	subs	r3, r3, r2
 80043c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80043c6:	6013      	str	r3, [r2, #0]
 80043c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80043ca:	9a07      	ldr	r2, [sp, #28]
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	18d3      	adds	r3, r2, r3
 80043d0:	9307      	str	r3, [sp, #28]
 80043d2:	2200      	movs	r2, #0
 80043d4:	2300      	movs	r3, #0
 80043d6:	0020      	movs	r0, r4
 80043d8:	0031      	movs	r1, r6
 80043da:	f7fc f835 	bl	8000448 <__aeabi_dcmpeq>
 80043de:	2800      	cmp	r0, #0
 80043e0:	d001      	beq.n	80043e6 <__cvt+0xa6>
 80043e2:	9b07      	ldr	r3, [sp, #28]
 80043e4:	9309      	str	r3, [sp, #36]	; 0x24
 80043e6:	2230      	movs	r2, #48	; 0x30
 80043e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043ea:	9907      	ldr	r1, [sp, #28]
 80043ec:	428b      	cmp	r3, r1
 80043ee:	d306      	bcc.n	80043fe <__cvt+0xbe>
 80043f0:	0028      	movs	r0, r5
 80043f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043f4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80043f6:	1b5b      	subs	r3, r3, r5
 80043f8:	6013      	str	r3, [r2, #0]
 80043fa:	b00b      	add	sp, #44	; 0x2c
 80043fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043fe:	1c59      	adds	r1, r3, #1
 8004400:	9109      	str	r1, [sp, #36]	; 0x24
 8004402:	701a      	strb	r2, [r3, #0]
 8004404:	e7f0      	b.n	80043e8 <__cvt+0xa8>

08004406 <__exponent>:
 8004406:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004408:	1c83      	adds	r3, r0, #2
 800440a:	b087      	sub	sp, #28
 800440c:	9303      	str	r3, [sp, #12]
 800440e:	0005      	movs	r5, r0
 8004410:	000c      	movs	r4, r1
 8004412:	232b      	movs	r3, #43	; 0x2b
 8004414:	7002      	strb	r2, [r0, #0]
 8004416:	2900      	cmp	r1, #0
 8004418:	da01      	bge.n	800441e <__exponent+0x18>
 800441a:	424c      	negs	r4, r1
 800441c:	3302      	adds	r3, #2
 800441e:	706b      	strb	r3, [r5, #1]
 8004420:	2c09      	cmp	r4, #9
 8004422:	dd31      	ble.n	8004488 <__exponent+0x82>
 8004424:	270a      	movs	r7, #10
 8004426:	ab04      	add	r3, sp, #16
 8004428:	1dde      	adds	r6, r3, #7
 800442a:	0020      	movs	r0, r4
 800442c:	0039      	movs	r1, r7
 800442e:	9601      	str	r6, [sp, #4]
 8004430:	f7fb fff4 	bl	800041c <__aeabi_idivmod>
 8004434:	3e01      	subs	r6, #1
 8004436:	3130      	adds	r1, #48	; 0x30
 8004438:	0020      	movs	r0, r4
 800443a:	7031      	strb	r1, [r6, #0]
 800443c:	0039      	movs	r1, r7
 800443e:	9402      	str	r4, [sp, #8]
 8004440:	f7fb ff06 	bl	8000250 <__divsi3>
 8004444:	9b02      	ldr	r3, [sp, #8]
 8004446:	0004      	movs	r4, r0
 8004448:	2b63      	cmp	r3, #99	; 0x63
 800444a:	dcee      	bgt.n	800442a <__exponent+0x24>
 800444c:	9b01      	ldr	r3, [sp, #4]
 800444e:	3430      	adds	r4, #48	; 0x30
 8004450:	1e9a      	subs	r2, r3, #2
 8004452:	0013      	movs	r3, r2
 8004454:	9903      	ldr	r1, [sp, #12]
 8004456:	7014      	strb	r4, [r2, #0]
 8004458:	a804      	add	r0, sp, #16
 800445a:	3007      	adds	r0, #7
 800445c:	4298      	cmp	r0, r3
 800445e:	d80e      	bhi.n	800447e <__exponent+0x78>
 8004460:	ab04      	add	r3, sp, #16
 8004462:	3307      	adds	r3, #7
 8004464:	2000      	movs	r0, #0
 8004466:	429a      	cmp	r2, r3
 8004468:	d804      	bhi.n	8004474 <__exponent+0x6e>
 800446a:	ab04      	add	r3, sp, #16
 800446c:	3009      	adds	r0, #9
 800446e:	18c0      	adds	r0, r0, r3
 8004470:	9b01      	ldr	r3, [sp, #4]
 8004472:	1ac0      	subs	r0, r0, r3
 8004474:	9b03      	ldr	r3, [sp, #12]
 8004476:	1818      	adds	r0, r3, r0
 8004478:	1b40      	subs	r0, r0, r5
 800447a:	b007      	add	sp, #28
 800447c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800447e:	7818      	ldrb	r0, [r3, #0]
 8004480:	3301      	adds	r3, #1
 8004482:	7008      	strb	r0, [r1, #0]
 8004484:	3101      	adds	r1, #1
 8004486:	e7e7      	b.n	8004458 <__exponent+0x52>
 8004488:	2330      	movs	r3, #48	; 0x30
 800448a:	18e4      	adds	r4, r4, r3
 800448c:	70ab      	strb	r3, [r5, #2]
 800448e:	1d28      	adds	r0, r5, #4
 8004490:	70ec      	strb	r4, [r5, #3]
 8004492:	e7f1      	b.n	8004478 <__exponent+0x72>

08004494 <_printf_float>:
 8004494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004496:	b095      	sub	sp, #84	; 0x54
 8004498:	000c      	movs	r4, r1
 800449a:	9208      	str	r2, [sp, #32]
 800449c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800449e:	9309      	str	r3, [sp, #36]	; 0x24
 80044a0:	0007      	movs	r7, r0
 80044a2:	f001 fa91 	bl	80059c8 <_localeconv_r>
 80044a6:	6803      	ldr	r3, [r0, #0]
 80044a8:	0018      	movs	r0, r3
 80044aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80044ac:	f7fb fe2a 	bl	8000104 <strlen>
 80044b0:	2300      	movs	r3, #0
 80044b2:	9312      	str	r3, [sp, #72]	; 0x48
 80044b4:	7e23      	ldrb	r3, [r4, #24]
 80044b6:	2207      	movs	r2, #7
 80044b8:	001e      	movs	r6, r3
 80044ba:	6823      	ldr	r3, [r4, #0]
 80044bc:	900d      	str	r0, [sp, #52]	; 0x34
 80044be:	930c      	str	r3, [sp, #48]	; 0x30
 80044c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80044c2:	682b      	ldr	r3, [r5, #0]
 80044c4:	05c9      	lsls	r1, r1, #23
 80044c6:	d547      	bpl.n	8004558 <_printf_float+0xc4>
 80044c8:	189b      	adds	r3, r3, r2
 80044ca:	4393      	bics	r3, r2
 80044cc:	001a      	movs	r2, r3
 80044ce:	3208      	adds	r2, #8
 80044d0:	602a      	str	r2, [r5, #0]
 80044d2:	681a      	ldr	r2, [r3, #0]
 80044d4:	685b      	ldr	r3, [r3, #4]
 80044d6:	64a2      	str	r2, [r4, #72]	; 0x48
 80044d8:	64e3      	str	r3, [r4, #76]	; 0x4c
 80044da:	2201      	movs	r2, #1
 80044dc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80044de:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80044e0:	930a      	str	r3, [sp, #40]	; 0x28
 80044e2:	006b      	lsls	r3, r5, #1
 80044e4:	085b      	lsrs	r3, r3, #1
 80044e6:	930e      	str	r3, [sp, #56]	; 0x38
 80044e8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80044ea:	4ba8      	ldr	r3, [pc, #672]	; (800478c <_printf_float+0x2f8>)
 80044ec:	990e      	ldr	r1, [sp, #56]	; 0x38
 80044ee:	4252      	negs	r2, r2
 80044f0:	f7fd fe32 	bl	8002158 <__aeabi_dcmpun>
 80044f4:	2800      	cmp	r0, #0
 80044f6:	d131      	bne.n	800455c <_printf_float+0xc8>
 80044f8:	2201      	movs	r2, #1
 80044fa:	4ba4      	ldr	r3, [pc, #656]	; (800478c <_printf_float+0x2f8>)
 80044fc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80044fe:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004500:	4252      	negs	r2, r2
 8004502:	f7fb ffb1 	bl	8000468 <__aeabi_dcmple>
 8004506:	2800      	cmp	r0, #0
 8004508:	d128      	bne.n	800455c <_printf_float+0xc8>
 800450a:	2200      	movs	r2, #0
 800450c:	2300      	movs	r3, #0
 800450e:	0029      	movs	r1, r5
 8004510:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004512:	f7fb ff9f 	bl	8000454 <__aeabi_dcmplt>
 8004516:	2800      	cmp	r0, #0
 8004518:	d003      	beq.n	8004522 <_printf_float+0x8e>
 800451a:	0023      	movs	r3, r4
 800451c:	222d      	movs	r2, #45	; 0x2d
 800451e:	3343      	adds	r3, #67	; 0x43
 8004520:	701a      	strb	r2, [r3, #0]
 8004522:	4d9b      	ldr	r5, [pc, #620]	; (8004790 <_printf_float+0x2fc>)
 8004524:	2e47      	cmp	r6, #71	; 0x47
 8004526:	d900      	bls.n	800452a <_printf_float+0x96>
 8004528:	4d9a      	ldr	r5, [pc, #616]	; (8004794 <_printf_float+0x300>)
 800452a:	2303      	movs	r3, #3
 800452c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800452e:	6123      	str	r3, [r4, #16]
 8004530:	3301      	adds	r3, #1
 8004532:	439a      	bics	r2, r3
 8004534:	2300      	movs	r3, #0
 8004536:	6022      	str	r2, [r4, #0]
 8004538:	930a      	str	r3, [sp, #40]	; 0x28
 800453a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800453c:	0021      	movs	r1, r4
 800453e:	9300      	str	r3, [sp, #0]
 8004540:	0038      	movs	r0, r7
 8004542:	9b08      	ldr	r3, [sp, #32]
 8004544:	aa13      	add	r2, sp, #76	; 0x4c
 8004546:	f000 f9f3 	bl	8004930 <_printf_common>
 800454a:	1c43      	adds	r3, r0, #1
 800454c:	d000      	beq.n	8004550 <_printf_float+0xbc>
 800454e:	e09e      	b.n	800468e <_printf_float+0x1fa>
 8004550:	2001      	movs	r0, #1
 8004552:	4240      	negs	r0, r0
 8004554:	b015      	add	sp, #84	; 0x54
 8004556:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004558:	3307      	adds	r3, #7
 800455a:	e7b6      	b.n	80044ca <_printf_float+0x36>
 800455c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800455e:	002b      	movs	r3, r5
 8004560:	0010      	movs	r0, r2
 8004562:	0029      	movs	r1, r5
 8004564:	f7fd fdf8 	bl	8002158 <__aeabi_dcmpun>
 8004568:	2800      	cmp	r0, #0
 800456a:	d00a      	beq.n	8004582 <_printf_float+0xee>
 800456c:	2d00      	cmp	r5, #0
 800456e:	da03      	bge.n	8004578 <_printf_float+0xe4>
 8004570:	0023      	movs	r3, r4
 8004572:	222d      	movs	r2, #45	; 0x2d
 8004574:	3343      	adds	r3, #67	; 0x43
 8004576:	701a      	strb	r2, [r3, #0]
 8004578:	4d87      	ldr	r5, [pc, #540]	; (8004798 <_printf_float+0x304>)
 800457a:	2e47      	cmp	r6, #71	; 0x47
 800457c:	d9d5      	bls.n	800452a <_printf_float+0x96>
 800457e:	4d87      	ldr	r5, [pc, #540]	; (800479c <_printf_float+0x308>)
 8004580:	e7d3      	b.n	800452a <_printf_float+0x96>
 8004582:	2220      	movs	r2, #32
 8004584:	0031      	movs	r1, r6
 8004586:	6863      	ldr	r3, [r4, #4]
 8004588:	4391      	bics	r1, r2
 800458a:	910e      	str	r1, [sp, #56]	; 0x38
 800458c:	1c5a      	adds	r2, r3, #1
 800458e:	d147      	bne.n	8004620 <_printf_float+0x18c>
 8004590:	3307      	adds	r3, #7
 8004592:	6063      	str	r3, [r4, #4]
 8004594:	2380      	movs	r3, #128	; 0x80
 8004596:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004598:	00db      	lsls	r3, r3, #3
 800459a:	4313      	orrs	r3, r2
 800459c:	2200      	movs	r2, #0
 800459e:	9206      	str	r2, [sp, #24]
 80045a0:	aa12      	add	r2, sp, #72	; 0x48
 80045a2:	9205      	str	r2, [sp, #20]
 80045a4:	aa11      	add	r2, sp, #68	; 0x44
 80045a6:	9203      	str	r2, [sp, #12]
 80045a8:	2223      	movs	r2, #35	; 0x23
 80045aa:	a908      	add	r1, sp, #32
 80045ac:	6023      	str	r3, [r4, #0]
 80045ae:	9301      	str	r3, [sp, #4]
 80045b0:	6863      	ldr	r3, [r4, #4]
 80045b2:	1852      	adds	r2, r2, r1
 80045b4:	9202      	str	r2, [sp, #8]
 80045b6:	9300      	str	r3, [sp, #0]
 80045b8:	0038      	movs	r0, r7
 80045ba:	002b      	movs	r3, r5
 80045bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80045be:	9604      	str	r6, [sp, #16]
 80045c0:	f7ff febe 	bl	8004340 <__cvt>
 80045c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80045c6:	0005      	movs	r5, r0
 80045c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80045ca:	2b47      	cmp	r3, #71	; 0x47
 80045cc:	d108      	bne.n	80045e0 <_printf_float+0x14c>
 80045ce:	1ccb      	adds	r3, r1, #3
 80045d0:	db02      	blt.n	80045d8 <_printf_float+0x144>
 80045d2:	6863      	ldr	r3, [r4, #4]
 80045d4:	4299      	cmp	r1, r3
 80045d6:	dd46      	ble.n	8004666 <_printf_float+0x1d2>
 80045d8:	0033      	movs	r3, r6
 80045da:	3b02      	subs	r3, #2
 80045dc:	b2db      	uxtb	r3, r3
 80045de:	001e      	movs	r6, r3
 80045e0:	2e65      	cmp	r6, #101	; 0x65
 80045e2:	d824      	bhi.n	800462e <_printf_float+0x19a>
 80045e4:	0020      	movs	r0, r4
 80045e6:	0032      	movs	r2, r6
 80045e8:	3901      	subs	r1, #1
 80045ea:	3050      	adds	r0, #80	; 0x50
 80045ec:	9111      	str	r1, [sp, #68]	; 0x44
 80045ee:	f7ff ff0a 	bl	8004406 <__exponent>
 80045f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80045f4:	900a      	str	r0, [sp, #40]	; 0x28
 80045f6:	1813      	adds	r3, r2, r0
 80045f8:	6123      	str	r3, [r4, #16]
 80045fa:	2a01      	cmp	r2, #1
 80045fc:	dc02      	bgt.n	8004604 <_printf_float+0x170>
 80045fe:	6822      	ldr	r2, [r4, #0]
 8004600:	07d2      	lsls	r2, r2, #31
 8004602:	d501      	bpl.n	8004608 <_printf_float+0x174>
 8004604:	3301      	adds	r3, #1
 8004606:	6123      	str	r3, [r4, #16]
 8004608:	2323      	movs	r3, #35	; 0x23
 800460a:	aa08      	add	r2, sp, #32
 800460c:	189b      	adds	r3, r3, r2
 800460e:	781b      	ldrb	r3, [r3, #0]
 8004610:	2b00      	cmp	r3, #0
 8004612:	d100      	bne.n	8004616 <_printf_float+0x182>
 8004614:	e791      	b.n	800453a <_printf_float+0xa6>
 8004616:	0023      	movs	r3, r4
 8004618:	222d      	movs	r2, #45	; 0x2d
 800461a:	3343      	adds	r3, #67	; 0x43
 800461c:	701a      	strb	r2, [r3, #0]
 800461e:	e78c      	b.n	800453a <_printf_float+0xa6>
 8004620:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004622:	2a47      	cmp	r2, #71	; 0x47
 8004624:	d1b6      	bne.n	8004594 <_printf_float+0x100>
 8004626:	2b00      	cmp	r3, #0
 8004628:	d1b4      	bne.n	8004594 <_printf_float+0x100>
 800462a:	3301      	adds	r3, #1
 800462c:	e7b1      	b.n	8004592 <_printf_float+0xfe>
 800462e:	2e66      	cmp	r6, #102	; 0x66
 8004630:	d11b      	bne.n	800466a <_printf_float+0x1d6>
 8004632:	6863      	ldr	r3, [r4, #4]
 8004634:	2900      	cmp	r1, #0
 8004636:	dd0d      	ble.n	8004654 <_printf_float+0x1c0>
 8004638:	6121      	str	r1, [r4, #16]
 800463a:	2b00      	cmp	r3, #0
 800463c:	d102      	bne.n	8004644 <_printf_float+0x1b0>
 800463e:	6822      	ldr	r2, [r4, #0]
 8004640:	07d2      	lsls	r2, r2, #31
 8004642:	d502      	bpl.n	800464a <_printf_float+0x1b6>
 8004644:	3301      	adds	r3, #1
 8004646:	1859      	adds	r1, r3, r1
 8004648:	6121      	str	r1, [r4, #16]
 800464a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800464c:	65a3      	str	r3, [r4, #88]	; 0x58
 800464e:	2300      	movs	r3, #0
 8004650:	930a      	str	r3, [sp, #40]	; 0x28
 8004652:	e7d9      	b.n	8004608 <_printf_float+0x174>
 8004654:	2b00      	cmp	r3, #0
 8004656:	d103      	bne.n	8004660 <_printf_float+0x1cc>
 8004658:	2201      	movs	r2, #1
 800465a:	6821      	ldr	r1, [r4, #0]
 800465c:	4211      	tst	r1, r2
 800465e:	d000      	beq.n	8004662 <_printf_float+0x1ce>
 8004660:	1c9a      	adds	r2, r3, #2
 8004662:	6122      	str	r2, [r4, #16]
 8004664:	e7f1      	b.n	800464a <_printf_float+0x1b6>
 8004666:	2367      	movs	r3, #103	; 0x67
 8004668:	001e      	movs	r6, r3
 800466a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800466c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800466e:	4293      	cmp	r3, r2
 8004670:	db06      	blt.n	8004680 <_printf_float+0x1ec>
 8004672:	6822      	ldr	r2, [r4, #0]
 8004674:	6123      	str	r3, [r4, #16]
 8004676:	07d2      	lsls	r2, r2, #31
 8004678:	d5e7      	bpl.n	800464a <_printf_float+0x1b6>
 800467a:	3301      	adds	r3, #1
 800467c:	6123      	str	r3, [r4, #16]
 800467e:	e7e4      	b.n	800464a <_printf_float+0x1b6>
 8004680:	2101      	movs	r1, #1
 8004682:	2b00      	cmp	r3, #0
 8004684:	dc01      	bgt.n	800468a <_printf_float+0x1f6>
 8004686:	1849      	adds	r1, r1, r1
 8004688:	1ac9      	subs	r1, r1, r3
 800468a:	1852      	adds	r2, r2, r1
 800468c:	e7e9      	b.n	8004662 <_printf_float+0x1ce>
 800468e:	6822      	ldr	r2, [r4, #0]
 8004690:	0553      	lsls	r3, r2, #21
 8004692:	d408      	bmi.n	80046a6 <_printf_float+0x212>
 8004694:	6923      	ldr	r3, [r4, #16]
 8004696:	002a      	movs	r2, r5
 8004698:	0038      	movs	r0, r7
 800469a:	9908      	ldr	r1, [sp, #32]
 800469c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800469e:	47a8      	blx	r5
 80046a0:	1c43      	adds	r3, r0, #1
 80046a2:	d129      	bne.n	80046f8 <_printf_float+0x264>
 80046a4:	e754      	b.n	8004550 <_printf_float+0xbc>
 80046a6:	2e65      	cmp	r6, #101	; 0x65
 80046a8:	d800      	bhi.n	80046ac <_printf_float+0x218>
 80046aa:	e0ec      	b.n	8004886 <_printf_float+0x3f2>
 80046ac:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80046ae:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80046b0:	2200      	movs	r2, #0
 80046b2:	2300      	movs	r3, #0
 80046b4:	f7fb fec8 	bl	8000448 <__aeabi_dcmpeq>
 80046b8:	2800      	cmp	r0, #0
 80046ba:	d034      	beq.n	8004726 <_printf_float+0x292>
 80046bc:	2301      	movs	r3, #1
 80046be:	0038      	movs	r0, r7
 80046c0:	4a37      	ldr	r2, [pc, #220]	; (80047a0 <_printf_float+0x30c>)
 80046c2:	9908      	ldr	r1, [sp, #32]
 80046c4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80046c6:	47a8      	blx	r5
 80046c8:	1c43      	adds	r3, r0, #1
 80046ca:	d100      	bne.n	80046ce <_printf_float+0x23a>
 80046cc:	e740      	b.n	8004550 <_printf_float+0xbc>
 80046ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80046d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80046d2:	4293      	cmp	r3, r2
 80046d4:	db02      	blt.n	80046dc <_printf_float+0x248>
 80046d6:	6823      	ldr	r3, [r4, #0]
 80046d8:	07db      	lsls	r3, r3, #31
 80046da:	d50d      	bpl.n	80046f8 <_printf_float+0x264>
 80046dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80046de:	0038      	movs	r0, r7
 80046e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80046e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80046e4:	9908      	ldr	r1, [sp, #32]
 80046e6:	47a8      	blx	r5
 80046e8:	2500      	movs	r5, #0
 80046ea:	1c43      	adds	r3, r0, #1
 80046ec:	d100      	bne.n	80046f0 <_printf_float+0x25c>
 80046ee:	e72f      	b.n	8004550 <_printf_float+0xbc>
 80046f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80046f2:	3b01      	subs	r3, #1
 80046f4:	42ab      	cmp	r3, r5
 80046f6:	dc0a      	bgt.n	800470e <_printf_float+0x27a>
 80046f8:	6823      	ldr	r3, [r4, #0]
 80046fa:	079b      	lsls	r3, r3, #30
 80046fc:	d500      	bpl.n	8004700 <_printf_float+0x26c>
 80046fe:	e114      	b.n	800492a <_printf_float+0x496>
 8004700:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004702:	68e0      	ldr	r0, [r4, #12]
 8004704:	4298      	cmp	r0, r3
 8004706:	db00      	blt.n	800470a <_printf_float+0x276>
 8004708:	e724      	b.n	8004554 <_printf_float+0xc0>
 800470a:	0018      	movs	r0, r3
 800470c:	e722      	b.n	8004554 <_printf_float+0xc0>
 800470e:	0022      	movs	r2, r4
 8004710:	2301      	movs	r3, #1
 8004712:	0038      	movs	r0, r7
 8004714:	9908      	ldr	r1, [sp, #32]
 8004716:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004718:	321a      	adds	r2, #26
 800471a:	47b0      	blx	r6
 800471c:	1c43      	adds	r3, r0, #1
 800471e:	d100      	bne.n	8004722 <_printf_float+0x28e>
 8004720:	e716      	b.n	8004550 <_printf_float+0xbc>
 8004722:	3501      	adds	r5, #1
 8004724:	e7e4      	b.n	80046f0 <_printf_float+0x25c>
 8004726:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004728:	2b00      	cmp	r3, #0
 800472a:	dc3b      	bgt.n	80047a4 <_printf_float+0x310>
 800472c:	2301      	movs	r3, #1
 800472e:	0038      	movs	r0, r7
 8004730:	4a1b      	ldr	r2, [pc, #108]	; (80047a0 <_printf_float+0x30c>)
 8004732:	9908      	ldr	r1, [sp, #32]
 8004734:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004736:	47b0      	blx	r6
 8004738:	1c43      	adds	r3, r0, #1
 800473a:	d100      	bne.n	800473e <_printf_float+0x2aa>
 800473c:	e708      	b.n	8004550 <_printf_float+0xbc>
 800473e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004740:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004742:	4313      	orrs	r3, r2
 8004744:	d102      	bne.n	800474c <_printf_float+0x2b8>
 8004746:	6823      	ldr	r3, [r4, #0]
 8004748:	07db      	lsls	r3, r3, #31
 800474a:	d5d5      	bpl.n	80046f8 <_printf_float+0x264>
 800474c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800474e:	0038      	movs	r0, r7
 8004750:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004752:	9908      	ldr	r1, [sp, #32]
 8004754:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004756:	47b0      	blx	r6
 8004758:	1c43      	adds	r3, r0, #1
 800475a:	d100      	bne.n	800475e <_printf_float+0x2ca>
 800475c:	e6f8      	b.n	8004550 <_printf_float+0xbc>
 800475e:	2300      	movs	r3, #0
 8004760:	930a      	str	r3, [sp, #40]	; 0x28
 8004762:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004764:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004766:	425b      	negs	r3, r3
 8004768:	4293      	cmp	r3, r2
 800476a:	dc01      	bgt.n	8004770 <_printf_float+0x2dc>
 800476c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800476e:	e792      	b.n	8004696 <_printf_float+0x202>
 8004770:	0022      	movs	r2, r4
 8004772:	2301      	movs	r3, #1
 8004774:	0038      	movs	r0, r7
 8004776:	9908      	ldr	r1, [sp, #32]
 8004778:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800477a:	321a      	adds	r2, #26
 800477c:	47b0      	blx	r6
 800477e:	1c43      	adds	r3, r0, #1
 8004780:	d100      	bne.n	8004784 <_printf_float+0x2f0>
 8004782:	e6e5      	b.n	8004550 <_printf_float+0xbc>
 8004784:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004786:	3301      	adds	r3, #1
 8004788:	e7ea      	b.n	8004760 <_printf_float+0x2cc>
 800478a:	46c0      	nop			; (mov r8, r8)
 800478c:	7fefffff 	.word	0x7fefffff
 8004790:	08007360 	.word	0x08007360
 8004794:	08007364 	.word	0x08007364
 8004798:	08007368 	.word	0x08007368
 800479c:	0800736c 	.word	0x0800736c
 80047a0:	08007370 	.word	0x08007370
 80047a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80047a6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80047a8:	920a      	str	r2, [sp, #40]	; 0x28
 80047aa:	429a      	cmp	r2, r3
 80047ac:	dd00      	ble.n	80047b0 <_printf_float+0x31c>
 80047ae:	930a      	str	r3, [sp, #40]	; 0x28
 80047b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047b2:	2b00      	cmp	r3, #0
 80047b4:	dc3d      	bgt.n	8004832 <_printf_float+0x39e>
 80047b6:	2300      	movs	r3, #0
 80047b8:	930e      	str	r3, [sp, #56]	; 0x38
 80047ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047bc:	43db      	mvns	r3, r3
 80047be:	17db      	asrs	r3, r3, #31
 80047c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80047c2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80047c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80047c6:	930c      	str	r3, [sp, #48]	; 0x30
 80047c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047ca:	4013      	ands	r3, r2
 80047cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80047ce:	1ad3      	subs	r3, r2, r3
 80047d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80047d2:	4293      	cmp	r3, r2
 80047d4:	dc36      	bgt.n	8004844 <_printf_float+0x3b0>
 80047d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80047d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80047da:	4293      	cmp	r3, r2
 80047dc:	db40      	blt.n	8004860 <_printf_float+0x3cc>
 80047de:	6823      	ldr	r3, [r4, #0]
 80047e0:	07db      	lsls	r3, r3, #31
 80047e2:	d43d      	bmi.n	8004860 <_printf_float+0x3cc>
 80047e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80047e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80047e8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80047ea:	1ad3      	subs	r3, r2, r3
 80047ec:	1a52      	subs	r2, r2, r1
 80047ee:	920a      	str	r2, [sp, #40]	; 0x28
 80047f0:	429a      	cmp	r2, r3
 80047f2:	dd00      	ble.n	80047f6 <_printf_float+0x362>
 80047f4:	930a      	str	r3, [sp, #40]	; 0x28
 80047f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047f8:	2b00      	cmp	r3, #0
 80047fa:	dc3a      	bgt.n	8004872 <_printf_float+0x3de>
 80047fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047fe:	2500      	movs	r5, #0
 8004800:	43db      	mvns	r3, r3
 8004802:	17db      	asrs	r3, r3, #31
 8004804:	930b      	str	r3, [sp, #44]	; 0x2c
 8004806:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004808:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800480a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800480c:	1a9b      	subs	r3, r3, r2
 800480e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004810:	400a      	ands	r2, r1
 8004812:	1a9b      	subs	r3, r3, r2
 8004814:	42ab      	cmp	r3, r5
 8004816:	dc00      	bgt.n	800481a <_printf_float+0x386>
 8004818:	e76e      	b.n	80046f8 <_printf_float+0x264>
 800481a:	0022      	movs	r2, r4
 800481c:	2301      	movs	r3, #1
 800481e:	0038      	movs	r0, r7
 8004820:	9908      	ldr	r1, [sp, #32]
 8004822:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004824:	321a      	adds	r2, #26
 8004826:	47b0      	blx	r6
 8004828:	1c43      	adds	r3, r0, #1
 800482a:	d100      	bne.n	800482e <_printf_float+0x39a>
 800482c:	e690      	b.n	8004550 <_printf_float+0xbc>
 800482e:	3501      	adds	r5, #1
 8004830:	e7e9      	b.n	8004806 <_printf_float+0x372>
 8004832:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004834:	002a      	movs	r2, r5
 8004836:	0038      	movs	r0, r7
 8004838:	9908      	ldr	r1, [sp, #32]
 800483a:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800483c:	47b0      	blx	r6
 800483e:	1c43      	adds	r3, r0, #1
 8004840:	d1b9      	bne.n	80047b6 <_printf_float+0x322>
 8004842:	e685      	b.n	8004550 <_printf_float+0xbc>
 8004844:	0022      	movs	r2, r4
 8004846:	2301      	movs	r3, #1
 8004848:	0038      	movs	r0, r7
 800484a:	9908      	ldr	r1, [sp, #32]
 800484c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800484e:	321a      	adds	r2, #26
 8004850:	47b0      	blx	r6
 8004852:	1c43      	adds	r3, r0, #1
 8004854:	d100      	bne.n	8004858 <_printf_float+0x3c4>
 8004856:	e67b      	b.n	8004550 <_printf_float+0xbc>
 8004858:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800485a:	3301      	adds	r3, #1
 800485c:	930e      	str	r3, [sp, #56]	; 0x38
 800485e:	e7b0      	b.n	80047c2 <_printf_float+0x32e>
 8004860:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004862:	0038      	movs	r0, r7
 8004864:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004866:	9908      	ldr	r1, [sp, #32]
 8004868:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800486a:	47b0      	blx	r6
 800486c:	1c43      	adds	r3, r0, #1
 800486e:	d1b9      	bne.n	80047e4 <_printf_float+0x350>
 8004870:	e66e      	b.n	8004550 <_printf_float+0xbc>
 8004872:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004874:	0038      	movs	r0, r7
 8004876:	18ea      	adds	r2, r5, r3
 8004878:	9908      	ldr	r1, [sp, #32]
 800487a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800487c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800487e:	47a8      	blx	r5
 8004880:	1c43      	adds	r3, r0, #1
 8004882:	d1bb      	bne.n	80047fc <_printf_float+0x368>
 8004884:	e664      	b.n	8004550 <_printf_float+0xbc>
 8004886:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004888:	2b01      	cmp	r3, #1
 800488a:	dc02      	bgt.n	8004892 <_printf_float+0x3fe>
 800488c:	2301      	movs	r3, #1
 800488e:	421a      	tst	r2, r3
 8004890:	d038      	beq.n	8004904 <_printf_float+0x470>
 8004892:	2301      	movs	r3, #1
 8004894:	002a      	movs	r2, r5
 8004896:	0038      	movs	r0, r7
 8004898:	9908      	ldr	r1, [sp, #32]
 800489a:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800489c:	47b0      	blx	r6
 800489e:	1c43      	adds	r3, r0, #1
 80048a0:	d100      	bne.n	80048a4 <_printf_float+0x410>
 80048a2:	e655      	b.n	8004550 <_printf_float+0xbc>
 80048a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80048a6:	0038      	movs	r0, r7
 80048a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80048aa:	9908      	ldr	r1, [sp, #32]
 80048ac:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80048ae:	47b0      	blx	r6
 80048b0:	1c43      	adds	r3, r0, #1
 80048b2:	d100      	bne.n	80048b6 <_printf_float+0x422>
 80048b4:	e64c      	b.n	8004550 <_printf_float+0xbc>
 80048b6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80048b8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80048ba:	2200      	movs	r2, #0
 80048bc:	2300      	movs	r3, #0
 80048be:	f7fb fdc3 	bl	8000448 <__aeabi_dcmpeq>
 80048c2:	2800      	cmp	r0, #0
 80048c4:	d11c      	bne.n	8004900 <_printf_float+0x46c>
 80048c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80048c8:	1c6a      	adds	r2, r5, #1
 80048ca:	3b01      	subs	r3, #1
 80048cc:	0038      	movs	r0, r7
 80048ce:	9908      	ldr	r1, [sp, #32]
 80048d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80048d2:	47a8      	blx	r5
 80048d4:	1c43      	adds	r3, r0, #1
 80048d6:	d10f      	bne.n	80048f8 <_printf_float+0x464>
 80048d8:	e63a      	b.n	8004550 <_printf_float+0xbc>
 80048da:	0022      	movs	r2, r4
 80048dc:	2301      	movs	r3, #1
 80048de:	0038      	movs	r0, r7
 80048e0:	9908      	ldr	r1, [sp, #32]
 80048e2:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80048e4:	321a      	adds	r2, #26
 80048e6:	47b0      	blx	r6
 80048e8:	1c43      	adds	r3, r0, #1
 80048ea:	d100      	bne.n	80048ee <_printf_float+0x45a>
 80048ec:	e630      	b.n	8004550 <_printf_float+0xbc>
 80048ee:	3501      	adds	r5, #1
 80048f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80048f2:	3b01      	subs	r3, #1
 80048f4:	42ab      	cmp	r3, r5
 80048f6:	dcf0      	bgt.n	80048da <_printf_float+0x446>
 80048f8:	0022      	movs	r2, r4
 80048fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80048fc:	3250      	adds	r2, #80	; 0x50
 80048fe:	e6cb      	b.n	8004698 <_printf_float+0x204>
 8004900:	2500      	movs	r5, #0
 8004902:	e7f5      	b.n	80048f0 <_printf_float+0x45c>
 8004904:	002a      	movs	r2, r5
 8004906:	e7e1      	b.n	80048cc <_printf_float+0x438>
 8004908:	0022      	movs	r2, r4
 800490a:	2301      	movs	r3, #1
 800490c:	0038      	movs	r0, r7
 800490e:	9908      	ldr	r1, [sp, #32]
 8004910:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8004912:	3219      	adds	r2, #25
 8004914:	47b0      	blx	r6
 8004916:	1c43      	adds	r3, r0, #1
 8004918:	d100      	bne.n	800491c <_printf_float+0x488>
 800491a:	e619      	b.n	8004550 <_printf_float+0xbc>
 800491c:	3501      	adds	r5, #1
 800491e:	68e3      	ldr	r3, [r4, #12]
 8004920:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004922:	1a9b      	subs	r3, r3, r2
 8004924:	42ab      	cmp	r3, r5
 8004926:	dcef      	bgt.n	8004908 <_printf_float+0x474>
 8004928:	e6ea      	b.n	8004700 <_printf_float+0x26c>
 800492a:	2500      	movs	r5, #0
 800492c:	e7f7      	b.n	800491e <_printf_float+0x48a>
 800492e:	46c0      	nop			; (mov r8, r8)

08004930 <_printf_common>:
 8004930:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004932:	0015      	movs	r5, r2
 8004934:	9301      	str	r3, [sp, #4]
 8004936:	688a      	ldr	r2, [r1, #8]
 8004938:	690b      	ldr	r3, [r1, #16]
 800493a:	000c      	movs	r4, r1
 800493c:	9000      	str	r0, [sp, #0]
 800493e:	4293      	cmp	r3, r2
 8004940:	da00      	bge.n	8004944 <_printf_common+0x14>
 8004942:	0013      	movs	r3, r2
 8004944:	0022      	movs	r2, r4
 8004946:	602b      	str	r3, [r5, #0]
 8004948:	3243      	adds	r2, #67	; 0x43
 800494a:	7812      	ldrb	r2, [r2, #0]
 800494c:	2a00      	cmp	r2, #0
 800494e:	d001      	beq.n	8004954 <_printf_common+0x24>
 8004950:	3301      	adds	r3, #1
 8004952:	602b      	str	r3, [r5, #0]
 8004954:	6823      	ldr	r3, [r4, #0]
 8004956:	069b      	lsls	r3, r3, #26
 8004958:	d502      	bpl.n	8004960 <_printf_common+0x30>
 800495a:	682b      	ldr	r3, [r5, #0]
 800495c:	3302      	adds	r3, #2
 800495e:	602b      	str	r3, [r5, #0]
 8004960:	6822      	ldr	r2, [r4, #0]
 8004962:	2306      	movs	r3, #6
 8004964:	0017      	movs	r7, r2
 8004966:	401f      	ands	r7, r3
 8004968:	421a      	tst	r2, r3
 800496a:	d027      	beq.n	80049bc <_printf_common+0x8c>
 800496c:	0023      	movs	r3, r4
 800496e:	3343      	adds	r3, #67	; 0x43
 8004970:	781b      	ldrb	r3, [r3, #0]
 8004972:	1e5a      	subs	r2, r3, #1
 8004974:	4193      	sbcs	r3, r2
 8004976:	6822      	ldr	r2, [r4, #0]
 8004978:	0692      	lsls	r2, r2, #26
 800497a:	d430      	bmi.n	80049de <_printf_common+0xae>
 800497c:	0022      	movs	r2, r4
 800497e:	9901      	ldr	r1, [sp, #4]
 8004980:	9800      	ldr	r0, [sp, #0]
 8004982:	9e08      	ldr	r6, [sp, #32]
 8004984:	3243      	adds	r2, #67	; 0x43
 8004986:	47b0      	blx	r6
 8004988:	1c43      	adds	r3, r0, #1
 800498a:	d025      	beq.n	80049d8 <_printf_common+0xa8>
 800498c:	2306      	movs	r3, #6
 800498e:	6820      	ldr	r0, [r4, #0]
 8004990:	682a      	ldr	r2, [r5, #0]
 8004992:	68e1      	ldr	r1, [r4, #12]
 8004994:	2500      	movs	r5, #0
 8004996:	4003      	ands	r3, r0
 8004998:	2b04      	cmp	r3, #4
 800499a:	d103      	bne.n	80049a4 <_printf_common+0x74>
 800499c:	1a8d      	subs	r5, r1, r2
 800499e:	43eb      	mvns	r3, r5
 80049a0:	17db      	asrs	r3, r3, #31
 80049a2:	401d      	ands	r5, r3
 80049a4:	68a3      	ldr	r3, [r4, #8]
 80049a6:	6922      	ldr	r2, [r4, #16]
 80049a8:	4293      	cmp	r3, r2
 80049aa:	dd01      	ble.n	80049b0 <_printf_common+0x80>
 80049ac:	1a9b      	subs	r3, r3, r2
 80049ae:	18ed      	adds	r5, r5, r3
 80049b0:	2700      	movs	r7, #0
 80049b2:	42bd      	cmp	r5, r7
 80049b4:	d120      	bne.n	80049f8 <_printf_common+0xc8>
 80049b6:	2000      	movs	r0, #0
 80049b8:	e010      	b.n	80049dc <_printf_common+0xac>
 80049ba:	3701      	adds	r7, #1
 80049bc:	68e3      	ldr	r3, [r4, #12]
 80049be:	682a      	ldr	r2, [r5, #0]
 80049c0:	1a9b      	subs	r3, r3, r2
 80049c2:	42bb      	cmp	r3, r7
 80049c4:	ddd2      	ble.n	800496c <_printf_common+0x3c>
 80049c6:	0022      	movs	r2, r4
 80049c8:	2301      	movs	r3, #1
 80049ca:	9901      	ldr	r1, [sp, #4]
 80049cc:	9800      	ldr	r0, [sp, #0]
 80049ce:	9e08      	ldr	r6, [sp, #32]
 80049d0:	3219      	adds	r2, #25
 80049d2:	47b0      	blx	r6
 80049d4:	1c43      	adds	r3, r0, #1
 80049d6:	d1f0      	bne.n	80049ba <_printf_common+0x8a>
 80049d8:	2001      	movs	r0, #1
 80049da:	4240      	negs	r0, r0
 80049dc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80049de:	2030      	movs	r0, #48	; 0x30
 80049e0:	18e1      	adds	r1, r4, r3
 80049e2:	3143      	adds	r1, #67	; 0x43
 80049e4:	7008      	strb	r0, [r1, #0]
 80049e6:	0021      	movs	r1, r4
 80049e8:	1c5a      	adds	r2, r3, #1
 80049ea:	3145      	adds	r1, #69	; 0x45
 80049ec:	7809      	ldrb	r1, [r1, #0]
 80049ee:	18a2      	adds	r2, r4, r2
 80049f0:	3243      	adds	r2, #67	; 0x43
 80049f2:	3302      	adds	r3, #2
 80049f4:	7011      	strb	r1, [r2, #0]
 80049f6:	e7c1      	b.n	800497c <_printf_common+0x4c>
 80049f8:	0022      	movs	r2, r4
 80049fa:	2301      	movs	r3, #1
 80049fc:	9901      	ldr	r1, [sp, #4]
 80049fe:	9800      	ldr	r0, [sp, #0]
 8004a00:	9e08      	ldr	r6, [sp, #32]
 8004a02:	321a      	adds	r2, #26
 8004a04:	47b0      	blx	r6
 8004a06:	1c43      	adds	r3, r0, #1
 8004a08:	d0e6      	beq.n	80049d8 <_printf_common+0xa8>
 8004a0a:	3701      	adds	r7, #1
 8004a0c:	e7d1      	b.n	80049b2 <_printf_common+0x82>
	...

08004a10 <_printf_i>:
 8004a10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a12:	b08b      	sub	sp, #44	; 0x2c
 8004a14:	9206      	str	r2, [sp, #24]
 8004a16:	000a      	movs	r2, r1
 8004a18:	3243      	adds	r2, #67	; 0x43
 8004a1a:	9307      	str	r3, [sp, #28]
 8004a1c:	9005      	str	r0, [sp, #20]
 8004a1e:	9204      	str	r2, [sp, #16]
 8004a20:	7e0a      	ldrb	r2, [r1, #24]
 8004a22:	000c      	movs	r4, r1
 8004a24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004a26:	2a78      	cmp	r2, #120	; 0x78
 8004a28:	d806      	bhi.n	8004a38 <_printf_i+0x28>
 8004a2a:	2a62      	cmp	r2, #98	; 0x62
 8004a2c:	d808      	bhi.n	8004a40 <_printf_i+0x30>
 8004a2e:	2a00      	cmp	r2, #0
 8004a30:	d100      	bne.n	8004a34 <_printf_i+0x24>
 8004a32:	e0c0      	b.n	8004bb6 <_printf_i+0x1a6>
 8004a34:	2a58      	cmp	r2, #88	; 0x58
 8004a36:	d052      	beq.n	8004ade <_printf_i+0xce>
 8004a38:	0026      	movs	r6, r4
 8004a3a:	3642      	adds	r6, #66	; 0x42
 8004a3c:	7032      	strb	r2, [r6, #0]
 8004a3e:	e022      	b.n	8004a86 <_printf_i+0x76>
 8004a40:	0010      	movs	r0, r2
 8004a42:	3863      	subs	r0, #99	; 0x63
 8004a44:	2815      	cmp	r0, #21
 8004a46:	d8f7      	bhi.n	8004a38 <_printf_i+0x28>
 8004a48:	f7fb fb6e 	bl	8000128 <__gnu_thumb1_case_shi>
 8004a4c:	001f0016 	.word	0x001f0016
 8004a50:	fff6fff6 	.word	0xfff6fff6
 8004a54:	fff6fff6 	.word	0xfff6fff6
 8004a58:	fff6001f 	.word	0xfff6001f
 8004a5c:	fff6fff6 	.word	0xfff6fff6
 8004a60:	00a8fff6 	.word	0x00a8fff6
 8004a64:	009a0036 	.word	0x009a0036
 8004a68:	fff6fff6 	.word	0xfff6fff6
 8004a6c:	fff600b9 	.word	0xfff600b9
 8004a70:	fff60036 	.word	0xfff60036
 8004a74:	009efff6 	.word	0x009efff6
 8004a78:	0026      	movs	r6, r4
 8004a7a:	681a      	ldr	r2, [r3, #0]
 8004a7c:	3642      	adds	r6, #66	; 0x42
 8004a7e:	1d11      	adds	r1, r2, #4
 8004a80:	6019      	str	r1, [r3, #0]
 8004a82:	6813      	ldr	r3, [r2, #0]
 8004a84:	7033      	strb	r3, [r6, #0]
 8004a86:	2301      	movs	r3, #1
 8004a88:	e0a7      	b.n	8004bda <_printf_i+0x1ca>
 8004a8a:	6808      	ldr	r0, [r1, #0]
 8004a8c:	6819      	ldr	r1, [r3, #0]
 8004a8e:	1d0a      	adds	r2, r1, #4
 8004a90:	0605      	lsls	r5, r0, #24
 8004a92:	d50b      	bpl.n	8004aac <_printf_i+0x9c>
 8004a94:	680d      	ldr	r5, [r1, #0]
 8004a96:	601a      	str	r2, [r3, #0]
 8004a98:	2d00      	cmp	r5, #0
 8004a9a:	da03      	bge.n	8004aa4 <_printf_i+0x94>
 8004a9c:	232d      	movs	r3, #45	; 0x2d
 8004a9e:	9a04      	ldr	r2, [sp, #16]
 8004aa0:	426d      	negs	r5, r5
 8004aa2:	7013      	strb	r3, [r2, #0]
 8004aa4:	4b61      	ldr	r3, [pc, #388]	; (8004c2c <_printf_i+0x21c>)
 8004aa6:	270a      	movs	r7, #10
 8004aa8:	9303      	str	r3, [sp, #12]
 8004aaa:	e032      	b.n	8004b12 <_printf_i+0x102>
 8004aac:	680d      	ldr	r5, [r1, #0]
 8004aae:	601a      	str	r2, [r3, #0]
 8004ab0:	0641      	lsls	r1, r0, #25
 8004ab2:	d5f1      	bpl.n	8004a98 <_printf_i+0x88>
 8004ab4:	b22d      	sxth	r5, r5
 8004ab6:	e7ef      	b.n	8004a98 <_printf_i+0x88>
 8004ab8:	680d      	ldr	r5, [r1, #0]
 8004aba:	6819      	ldr	r1, [r3, #0]
 8004abc:	1d08      	adds	r0, r1, #4
 8004abe:	6018      	str	r0, [r3, #0]
 8004ac0:	062e      	lsls	r6, r5, #24
 8004ac2:	d501      	bpl.n	8004ac8 <_printf_i+0xb8>
 8004ac4:	680d      	ldr	r5, [r1, #0]
 8004ac6:	e003      	b.n	8004ad0 <_printf_i+0xc0>
 8004ac8:	066d      	lsls	r5, r5, #25
 8004aca:	d5fb      	bpl.n	8004ac4 <_printf_i+0xb4>
 8004acc:	680d      	ldr	r5, [r1, #0]
 8004ace:	b2ad      	uxth	r5, r5
 8004ad0:	4b56      	ldr	r3, [pc, #344]	; (8004c2c <_printf_i+0x21c>)
 8004ad2:	270a      	movs	r7, #10
 8004ad4:	9303      	str	r3, [sp, #12]
 8004ad6:	2a6f      	cmp	r2, #111	; 0x6f
 8004ad8:	d117      	bne.n	8004b0a <_printf_i+0xfa>
 8004ada:	2708      	movs	r7, #8
 8004adc:	e015      	b.n	8004b0a <_printf_i+0xfa>
 8004ade:	3145      	adds	r1, #69	; 0x45
 8004ae0:	700a      	strb	r2, [r1, #0]
 8004ae2:	4a52      	ldr	r2, [pc, #328]	; (8004c2c <_printf_i+0x21c>)
 8004ae4:	9203      	str	r2, [sp, #12]
 8004ae6:	681a      	ldr	r2, [r3, #0]
 8004ae8:	6821      	ldr	r1, [r4, #0]
 8004aea:	ca20      	ldmia	r2!, {r5}
 8004aec:	601a      	str	r2, [r3, #0]
 8004aee:	0608      	lsls	r0, r1, #24
 8004af0:	d550      	bpl.n	8004b94 <_printf_i+0x184>
 8004af2:	07cb      	lsls	r3, r1, #31
 8004af4:	d502      	bpl.n	8004afc <_printf_i+0xec>
 8004af6:	2320      	movs	r3, #32
 8004af8:	4319      	orrs	r1, r3
 8004afa:	6021      	str	r1, [r4, #0]
 8004afc:	2710      	movs	r7, #16
 8004afe:	2d00      	cmp	r5, #0
 8004b00:	d103      	bne.n	8004b0a <_printf_i+0xfa>
 8004b02:	2320      	movs	r3, #32
 8004b04:	6822      	ldr	r2, [r4, #0]
 8004b06:	439a      	bics	r2, r3
 8004b08:	6022      	str	r2, [r4, #0]
 8004b0a:	0023      	movs	r3, r4
 8004b0c:	2200      	movs	r2, #0
 8004b0e:	3343      	adds	r3, #67	; 0x43
 8004b10:	701a      	strb	r2, [r3, #0]
 8004b12:	6863      	ldr	r3, [r4, #4]
 8004b14:	60a3      	str	r3, [r4, #8]
 8004b16:	2b00      	cmp	r3, #0
 8004b18:	db03      	blt.n	8004b22 <_printf_i+0x112>
 8004b1a:	2204      	movs	r2, #4
 8004b1c:	6821      	ldr	r1, [r4, #0]
 8004b1e:	4391      	bics	r1, r2
 8004b20:	6021      	str	r1, [r4, #0]
 8004b22:	2d00      	cmp	r5, #0
 8004b24:	d102      	bne.n	8004b2c <_printf_i+0x11c>
 8004b26:	9e04      	ldr	r6, [sp, #16]
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	d00c      	beq.n	8004b46 <_printf_i+0x136>
 8004b2c:	9e04      	ldr	r6, [sp, #16]
 8004b2e:	0028      	movs	r0, r5
 8004b30:	0039      	movs	r1, r7
 8004b32:	f7fb fb89 	bl	8000248 <__aeabi_uidivmod>
 8004b36:	9b03      	ldr	r3, [sp, #12]
 8004b38:	3e01      	subs	r6, #1
 8004b3a:	5c5b      	ldrb	r3, [r3, r1]
 8004b3c:	7033      	strb	r3, [r6, #0]
 8004b3e:	002b      	movs	r3, r5
 8004b40:	0005      	movs	r5, r0
 8004b42:	429f      	cmp	r7, r3
 8004b44:	d9f3      	bls.n	8004b2e <_printf_i+0x11e>
 8004b46:	2f08      	cmp	r7, #8
 8004b48:	d109      	bne.n	8004b5e <_printf_i+0x14e>
 8004b4a:	6823      	ldr	r3, [r4, #0]
 8004b4c:	07db      	lsls	r3, r3, #31
 8004b4e:	d506      	bpl.n	8004b5e <_printf_i+0x14e>
 8004b50:	6863      	ldr	r3, [r4, #4]
 8004b52:	6922      	ldr	r2, [r4, #16]
 8004b54:	4293      	cmp	r3, r2
 8004b56:	dc02      	bgt.n	8004b5e <_printf_i+0x14e>
 8004b58:	2330      	movs	r3, #48	; 0x30
 8004b5a:	3e01      	subs	r6, #1
 8004b5c:	7033      	strb	r3, [r6, #0]
 8004b5e:	9b04      	ldr	r3, [sp, #16]
 8004b60:	1b9b      	subs	r3, r3, r6
 8004b62:	6123      	str	r3, [r4, #16]
 8004b64:	9b07      	ldr	r3, [sp, #28]
 8004b66:	0021      	movs	r1, r4
 8004b68:	9300      	str	r3, [sp, #0]
 8004b6a:	9805      	ldr	r0, [sp, #20]
 8004b6c:	9b06      	ldr	r3, [sp, #24]
 8004b6e:	aa09      	add	r2, sp, #36	; 0x24
 8004b70:	f7ff fede 	bl	8004930 <_printf_common>
 8004b74:	1c43      	adds	r3, r0, #1
 8004b76:	d135      	bne.n	8004be4 <_printf_i+0x1d4>
 8004b78:	2001      	movs	r0, #1
 8004b7a:	4240      	negs	r0, r0
 8004b7c:	b00b      	add	sp, #44	; 0x2c
 8004b7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b80:	2220      	movs	r2, #32
 8004b82:	6809      	ldr	r1, [r1, #0]
 8004b84:	430a      	orrs	r2, r1
 8004b86:	6022      	str	r2, [r4, #0]
 8004b88:	0022      	movs	r2, r4
 8004b8a:	2178      	movs	r1, #120	; 0x78
 8004b8c:	3245      	adds	r2, #69	; 0x45
 8004b8e:	7011      	strb	r1, [r2, #0]
 8004b90:	4a27      	ldr	r2, [pc, #156]	; (8004c30 <_printf_i+0x220>)
 8004b92:	e7a7      	b.n	8004ae4 <_printf_i+0xd4>
 8004b94:	0648      	lsls	r0, r1, #25
 8004b96:	d5ac      	bpl.n	8004af2 <_printf_i+0xe2>
 8004b98:	b2ad      	uxth	r5, r5
 8004b9a:	e7aa      	b.n	8004af2 <_printf_i+0xe2>
 8004b9c:	681a      	ldr	r2, [r3, #0]
 8004b9e:	680d      	ldr	r5, [r1, #0]
 8004ba0:	1d10      	adds	r0, r2, #4
 8004ba2:	6949      	ldr	r1, [r1, #20]
 8004ba4:	6018      	str	r0, [r3, #0]
 8004ba6:	6813      	ldr	r3, [r2, #0]
 8004ba8:	062e      	lsls	r6, r5, #24
 8004baa:	d501      	bpl.n	8004bb0 <_printf_i+0x1a0>
 8004bac:	6019      	str	r1, [r3, #0]
 8004bae:	e002      	b.n	8004bb6 <_printf_i+0x1a6>
 8004bb0:	066d      	lsls	r5, r5, #25
 8004bb2:	d5fb      	bpl.n	8004bac <_printf_i+0x19c>
 8004bb4:	8019      	strh	r1, [r3, #0]
 8004bb6:	2300      	movs	r3, #0
 8004bb8:	9e04      	ldr	r6, [sp, #16]
 8004bba:	6123      	str	r3, [r4, #16]
 8004bbc:	e7d2      	b.n	8004b64 <_printf_i+0x154>
 8004bbe:	681a      	ldr	r2, [r3, #0]
 8004bc0:	1d11      	adds	r1, r2, #4
 8004bc2:	6019      	str	r1, [r3, #0]
 8004bc4:	6816      	ldr	r6, [r2, #0]
 8004bc6:	2100      	movs	r1, #0
 8004bc8:	0030      	movs	r0, r6
 8004bca:	6862      	ldr	r2, [r4, #4]
 8004bcc:	f000 ff0a 	bl	80059e4 <memchr>
 8004bd0:	2800      	cmp	r0, #0
 8004bd2:	d001      	beq.n	8004bd8 <_printf_i+0x1c8>
 8004bd4:	1b80      	subs	r0, r0, r6
 8004bd6:	6060      	str	r0, [r4, #4]
 8004bd8:	6863      	ldr	r3, [r4, #4]
 8004bda:	6123      	str	r3, [r4, #16]
 8004bdc:	2300      	movs	r3, #0
 8004bde:	9a04      	ldr	r2, [sp, #16]
 8004be0:	7013      	strb	r3, [r2, #0]
 8004be2:	e7bf      	b.n	8004b64 <_printf_i+0x154>
 8004be4:	6923      	ldr	r3, [r4, #16]
 8004be6:	0032      	movs	r2, r6
 8004be8:	9906      	ldr	r1, [sp, #24]
 8004bea:	9805      	ldr	r0, [sp, #20]
 8004bec:	9d07      	ldr	r5, [sp, #28]
 8004bee:	47a8      	blx	r5
 8004bf0:	1c43      	adds	r3, r0, #1
 8004bf2:	d0c1      	beq.n	8004b78 <_printf_i+0x168>
 8004bf4:	6823      	ldr	r3, [r4, #0]
 8004bf6:	079b      	lsls	r3, r3, #30
 8004bf8:	d415      	bmi.n	8004c26 <_printf_i+0x216>
 8004bfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bfc:	68e0      	ldr	r0, [r4, #12]
 8004bfe:	4298      	cmp	r0, r3
 8004c00:	dabc      	bge.n	8004b7c <_printf_i+0x16c>
 8004c02:	0018      	movs	r0, r3
 8004c04:	e7ba      	b.n	8004b7c <_printf_i+0x16c>
 8004c06:	0022      	movs	r2, r4
 8004c08:	2301      	movs	r3, #1
 8004c0a:	9906      	ldr	r1, [sp, #24]
 8004c0c:	9805      	ldr	r0, [sp, #20]
 8004c0e:	9e07      	ldr	r6, [sp, #28]
 8004c10:	3219      	adds	r2, #25
 8004c12:	47b0      	blx	r6
 8004c14:	1c43      	adds	r3, r0, #1
 8004c16:	d0af      	beq.n	8004b78 <_printf_i+0x168>
 8004c18:	3501      	adds	r5, #1
 8004c1a:	68e3      	ldr	r3, [r4, #12]
 8004c1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004c1e:	1a9b      	subs	r3, r3, r2
 8004c20:	42ab      	cmp	r3, r5
 8004c22:	dcf0      	bgt.n	8004c06 <_printf_i+0x1f6>
 8004c24:	e7e9      	b.n	8004bfa <_printf_i+0x1ea>
 8004c26:	2500      	movs	r5, #0
 8004c28:	e7f7      	b.n	8004c1a <_printf_i+0x20a>
 8004c2a:	46c0      	nop			; (mov r8, r8)
 8004c2c:	08007372 	.word	0x08007372
 8004c30:	08007383 	.word	0x08007383

08004c34 <siprintf>:
 8004c34:	b40e      	push	{r1, r2, r3}
 8004c36:	b500      	push	{lr}
 8004c38:	490b      	ldr	r1, [pc, #44]	; (8004c68 <siprintf+0x34>)
 8004c3a:	b09c      	sub	sp, #112	; 0x70
 8004c3c:	ab1d      	add	r3, sp, #116	; 0x74
 8004c3e:	9002      	str	r0, [sp, #8]
 8004c40:	9006      	str	r0, [sp, #24]
 8004c42:	9107      	str	r1, [sp, #28]
 8004c44:	9104      	str	r1, [sp, #16]
 8004c46:	4809      	ldr	r0, [pc, #36]	; (8004c6c <siprintf+0x38>)
 8004c48:	4909      	ldr	r1, [pc, #36]	; (8004c70 <siprintf+0x3c>)
 8004c4a:	cb04      	ldmia	r3!, {r2}
 8004c4c:	9105      	str	r1, [sp, #20]
 8004c4e:	6800      	ldr	r0, [r0, #0]
 8004c50:	a902      	add	r1, sp, #8
 8004c52:	9301      	str	r3, [sp, #4]
 8004c54:	f001 fb90 	bl	8006378 <_svfiprintf_r>
 8004c58:	2300      	movs	r3, #0
 8004c5a:	9a02      	ldr	r2, [sp, #8]
 8004c5c:	7013      	strb	r3, [r2, #0]
 8004c5e:	b01c      	add	sp, #112	; 0x70
 8004c60:	bc08      	pop	{r3}
 8004c62:	b003      	add	sp, #12
 8004c64:	4718      	bx	r3
 8004c66:	46c0      	nop			; (mov r8, r8)
 8004c68:	7fffffff 	.word	0x7fffffff
 8004c6c:	20000014 	.word	0x20000014
 8004c70:	ffff0208 	.word	0xffff0208

08004c74 <quorem>:
 8004c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c76:	0006      	movs	r6, r0
 8004c78:	690d      	ldr	r5, [r1, #16]
 8004c7a:	6933      	ldr	r3, [r6, #16]
 8004c7c:	b087      	sub	sp, #28
 8004c7e:	2000      	movs	r0, #0
 8004c80:	9102      	str	r1, [sp, #8]
 8004c82:	42ab      	cmp	r3, r5
 8004c84:	db6b      	blt.n	8004d5e <quorem+0xea>
 8004c86:	000b      	movs	r3, r1
 8004c88:	3d01      	subs	r5, #1
 8004c8a:	00ac      	lsls	r4, r5, #2
 8004c8c:	3314      	adds	r3, #20
 8004c8e:	9305      	str	r3, [sp, #20]
 8004c90:	191b      	adds	r3, r3, r4
 8004c92:	9303      	str	r3, [sp, #12]
 8004c94:	0033      	movs	r3, r6
 8004c96:	3314      	adds	r3, #20
 8004c98:	9301      	str	r3, [sp, #4]
 8004c9a:	191c      	adds	r4, r3, r4
 8004c9c:	9b03      	ldr	r3, [sp, #12]
 8004c9e:	6827      	ldr	r7, [r4, #0]
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	0038      	movs	r0, r7
 8004ca4:	9300      	str	r3, [sp, #0]
 8004ca6:	3301      	adds	r3, #1
 8004ca8:	0019      	movs	r1, r3
 8004caa:	9304      	str	r3, [sp, #16]
 8004cac:	f7fb fa46 	bl	800013c <__udivsi3>
 8004cb0:	9b04      	ldr	r3, [sp, #16]
 8004cb2:	9000      	str	r0, [sp, #0]
 8004cb4:	429f      	cmp	r7, r3
 8004cb6:	d329      	bcc.n	8004d0c <quorem+0x98>
 8004cb8:	2300      	movs	r3, #0
 8004cba:	469c      	mov	ip, r3
 8004cbc:	9801      	ldr	r0, [sp, #4]
 8004cbe:	9f05      	ldr	r7, [sp, #20]
 8004cc0:	9304      	str	r3, [sp, #16]
 8004cc2:	cf08      	ldmia	r7!, {r3}
 8004cc4:	9a00      	ldr	r2, [sp, #0]
 8004cc6:	b299      	uxth	r1, r3
 8004cc8:	4351      	muls	r1, r2
 8004cca:	0c1b      	lsrs	r3, r3, #16
 8004ccc:	4353      	muls	r3, r2
 8004cce:	4461      	add	r1, ip
 8004cd0:	0c0a      	lsrs	r2, r1, #16
 8004cd2:	189b      	adds	r3, r3, r2
 8004cd4:	0c1a      	lsrs	r2, r3, #16
 8004cd6:	9305      	str	r3, [sp, #20]
 8004cd8:	6803      	ldr	r3, [r0, #0]
 8004cda:	4694      	mov	ip, r2
 8004cdc:	b29a      	uxth	r2, r3
 8004cde:	9b04      	ldr	r3, [sp, #16]
 8004ce0:	b289      	uxth	r1, r1
 8004ce2:	18d2      	adds	r2, r2, r3
 8004ce4:	6803      	ldr	r3, [r0, #0]
 8004ce6:	1a52      	subs	r2, r2, r1
 8004ce8:	0c19      	lsrs	r1, r3, #16
 8004cea:	466b      	mov	r3, sp
 8004cec:	8a9b      	ldrh	r3, [r3, #20]
 8004cee:	1acb      	subs	r3, r1, r3
 8004cf0:	1411      	asrs	r1, r2, #16
 8004cf2:	185b      	adds	r3, r3, r1
 8004cf4:	1419      	asrs	r1, r3, #16
 8004cf6:	b292      	uxth	r2, r2
 8004cf8:	041b      	lsls	r3, r3, #16
 8004cfa:	431a      	orrs	r2, r3
 8004cfc:	9b03      	ldr	r3, [sp, #12]
 8004cfe:	9104      	str	r1, [sp, #16]
 8004d00:	c004      	stmia	r0!, {r2}
 8004d02:	42bb      	cmp	r3, r7
 8004d04:	d2dd      	bcs.n	8004cc2 <quorem+0x4e>
 8004d06:	6823      	ldr	r3, [r4, #0]
 8004d08:	2b00      	cmp	r3, #0
 8004d0a:	d02e      	beq.n	8004d6a <quorem+0xf6>
 8004d0c:	0030      	movs	r0, r6
 8004d0e:	9902      	ldr	r1, [sp, #8]
 8004d10:	f001 f902 	bl	8005f18 <__mcmp>
 8004d14:	2800      	cmp	r0, #0
 8004d16:	db21      	blt.n	8004d5c <quorem+0xe8>
 8004d18:	0030      	movs	r0, r6
 8004d1a:	2400      	movs	r4, #0
 8004d1c:	9b00      	ldr	r3, [sp, #0]
 8004d1e:	9902      	ldr	r1, [sp, #8]
 8004d20:	3301      	adds	r3, #1
 8004d22:	9300      	str	r3, [sp, #0]
 8004d24:	3014      	adds	r0, #20
 8004d26:	3114      	adds	r1, #20
 8004d28:	6802      	ldr	r2, [r0, #0]
 8004d2a:	c908      	ldmia	r1!, {r3}
 8004d2c:	b292      	uxth	r2, r2
 8004d2e:	1914      	adds	r4, r2, r4
 8004d30:	b29a      	uxth	r2, r3
 8004d32:	1aa2      	subs	r2, r4, r2
 8004d34:	6804      	ldr	r4, [r0, #0]
 8004d36:	0c1b      	lsrs	r3, r3, #16
 8004d38:	0c24      	lsrs	r4, r4, #16
 8004d3a:	1ae3      	subs	r3, r4, r3
 8004d3c:	1414      	asrs	r4, r2, #16
 8004d3e:	191b      	adds	r3, r3, r4
 8004d40:	141c      	asrs	r4, r3, #16
 8004d42:	b292      	uxth	r2, r2
 8004d44:	041b      	lsls	r3, r3, #16
 8004d46:	4313      	orrs	r3, r2
 8004d48:	c008      	stmia	r0!, {r3}
 8004d4a:	9b03      	ldr	r3, [sp, #12]
 8004d4c:	428b      	cmp	r3, r1
 8004d4e:	d2eb      	bcs.n	8004d28 <quorem+0xb4>
 8004d50:	9a01      	ldr	r2, [sp, #4]
 8004d52:	00ab      	lsls	r3, r5, #2
 8004d54:	18d3      	adds	r3, r2, r3
 8004d56:	681a      	ldr	r2, [r3, #0]
 8004d58:	2a00      	cmp	r2, #0
 8004d5a:	d010      	beq.n	8004d7e <quorem+0x10a>
 8004d5c:	9800      	ldr	r0, [sp, #0]
 8004d5e:	b007      	add	sp, #28
 8004d60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d62:	6823      	ldr	r3, [r4, #0]
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	d104      	bne.n	8004d72 <quorem+0xfe>
 8004d68:	3d01      	subs	r5, #1
 8004d6a:	9b01      	ldr	r3, [sp, #4]
 8004d6c:	3c04      	subs	r4, #4
 8004d6e:	42a3      	cmp	r3, r4
 8004d70:	d3f7      	bcc.n	8004d62 <quorem+0xee>
 8004d72:	6135      	str	r5, [r6, #16]
 8004d74:	e7ca      	b.n	8004d0c <quorem+0x98>
 8004d76:	681a      	ldr	r2, [r3, #0]
 8004d78:	2a00      	cmp	r2, #0
 8004d7a:	d104      	bne.n	8004d86 <quorem+0x112>
 8004d7c:	3d01      	subs	r5, #1
 8004d7e:	9a01      	ldr	r2, [sp, #4]
 8004d80:	3b04      	subs	r3, #4
 8004d82:	429a      	cmp	r2, r3
 8004d84:	d3f7      	bcc.n	8004d76 <quorem+0x102>
 8004d86:	6135      	str	r5, [r6, #16]
 8004d88:	e7e8      	b.n	8004d5c <quorem+0xe8>
	...

08004d8c <_dtoa_r>:
 8004d8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d8e:	b09d      	sub	sp, #116	; 0x74
 8004d90:	9202      	str	r2, [sp, #8]
 8004d92:	9303      	str	r3, [sp, #12]
 8004d94:	9b02      	ldr	r3, [sp, #8]
 8004d96:	9c03      	ldr	r4, [sp, #12]
 8004d98:	930a      	str	r3, [sp, #40]	; 0x28
 8004d9a:	940b      	str	r4, [sp, #44]	; 0x2c
 8004d9c:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8004d9e:	0007      	movs	r7, r0
 8004da0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8004da2:	2c00      	cmp	r4, #0
 8004da4:	d10e      	bne.n	8004dc4 <_dtoa_r+0x38>
 8004da6:	2010      	movs	r0, #16
 8004da8:	f000 fe12 	bl	80059d0 <malloc>
 8004dac:	1e02      	subs	r2, r0, #0
 8004dae:	6278      	str	r0, [r7, #36]	; 0x24
 8004db0:	d104      	bne.n	8004dbc <_dtoa_r+0x30>
 8004db2:	21ea      	movs	r1, #234	; 0xea
 8004db4:	4bc0      	ldr	r3, [pc, #768]	; (80050b8 <_dtoa_r+0x32c>)
 8004db6:	48c1      	ldr	r0, [pc, #772]	; (80050bc <_dtoa_r+0x330>)
 8004db8:	f001 fbf0 	bl	800659c <__assert_func>
 8004dbc:	6044      	str	r4, [r0, #4]
 8004dbe:	6084      	str	r4, [r0, #8]
 8004dc0:	6004      	str	r4, [r0, #0]
 8004dc2:	60c4      	str	r4, [r0, #12]
 8004dc4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dc6:	6819      	ldr	r1, [r3, #0]
 8004dc8:	2900      	cmp	r1, #0
 8004dca:	d00a      	beq.n	8004de2 <_dtoa_r+0x56>
 8004dcc:	685a      	ldr	r2, [r3, #4]
 8004dce:	2301      	movs	r3, #1
 8004dd0:	4093      	lsls	r3, r2
 8004dd2:	604a      	str	r2, [r1, #4]
 8004dd4:	608b      	str	r3, [r1, #8]
 8004dd6:	0038      	movs	r0, r7
 8004dd8:	f000 fe5c 	bl	8005a94 <_Bfree>
 8004ddc:	2200      	movs	r2, #0
 8004dde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004de0:	601a      	str	r2, [r3, #0]
 8004de2:	9b03      	ldr	r3, [sp, #12]
 8004de4:	2b00      	cmp	r3, #0
 8004de6:	da21      	bge.n	8004e2c <_dtoa_r+0xa0>
 8004de8:	2301      	movs	r3, #1
 8004dea:	602b      	str	r3, [r5, #0]
 8004dec:	9b03      	ldr	r3, [sp, #12]
 8004dee:	005b      	lsls	r3, r3, #1
 8004df0:	085b      	lsrs	r3, r3, #1
 8004df2:	930b      	str	r3, [sp, #44]	; 0x2c
 8004df4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004df6:	4bb2      	ldr	r3, [pc, #712]	; (80050c0 <_dtoa_r+0x334>)
 8004df8:	002a      	movs	r2, r5
 8004dfa:	9318      	str	r3, [sp, #96]	; 0x60
 8004dfc:	401a      	ands	r2, r3
 8004dfe:	429a      	cmp	r2, r3
 8004e00:	d117      	bne.n	8004e32 <_dtoa_r+0xa6>
 8004e02:	4bb0      	ldr	r3, [pc, #704]	; (80050c4 <_dtoa_r+0x338>)
 8004e04:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004e06:	0328      	lsls	r0, r5, #12
 8004e08:	6013      	str	r3, [r2, #0]
 8004e0a:	9b02      	ldr	r3, [sp, #8]
 8004e0c:	0b00      	lsrs	r0, r0, #12
 8004e0e:	4318      	orrs	r0, r3
 8004e10:	d101      	bne.n	8004e16 <_dtoa_r+0x8a>
 8004e12:	f000 fdc3 	bl	800599c <_dtoa_r+0xc10>
 8004e16:	48ac      	ldr	r0, [pc, #688]	; (80050c8 <_dtoa_r+0x33c>)
 8004e18:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004e1a:	9005      	str	r0, [sp, #20]
 8004e1c:	2b00      	cmp	r3, #0
 8004e1e:	d002      	beq.n	8004e26 <_dtoa_r+0x9a>
 8004e20:	4baa      	ldr	r3, [pc, #680]	; (80050cc <_dtoa_r+0x340>)
 8004e22:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004e24:	6013      	str	r3, [r2, #0]
 8004e26:	9805      	ldr	r0, [sp, #20]
 8004e28:	b01d      	add	sp, #116	; 0x74
 8004e2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004e2c:	2300      	movs	r3, #0
 8004e2e:	602b      	str	r3, [r5, #0]
 8004e30:	e7e0      	b.n	8004df4 <_dtoa_r+0x68>
 8004e32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004e34:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8004e36:	9312      	str	r3, [sp, #72]	; 0x48
 8004e38:	9413      	str	r4, [sp, #76]	; 0x4c
 8004e3a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004e3c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004e3e:	2200      	movs	r2, #0
 8004e40:	2300      	movs	r3, #0
 8004e42:	f7fb fb01 	bl	8000448 <__aeabi_dcmpeq>
 8004e46:	1e04      	subs	r4, r0, #0
 8004e48:	d00b      	beq.n	8004e62 <_dtoa_r+0xd6>
 8004e4a:	2301      	movs	r3, #1
 8004e4c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004e4e:	6013      	str	r3, [r2, #0]
 8004e50:	4b9f      	ldr	r3, [pc, #636]	; (80050d0 <_dtoa_r+0x344>)
 8004e52:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004e54:	9305      	str	r3, [sp, #20]
 8004e56:	2a00      	cmp	r2, #0
 8004e58:	d0e5      	beq.n	8004e26 <_dtoa_r+0x9a>
 8004e5a:	4a9e      	ldr	r2, [pc, #632]	; (80050d4 <_dtoa_r+0x348>)
 8004e5c:	9926      	ldr	r1, [sp, #152]	; 0x98
 8004e5e:	600a      	str	r2, [r1, #0]
 8004e60:	e7e1      	b.n	8004e26 <_dtoa_r+0x9a>
 8004e62:	ab1a      	add	r3, sp, #104	; 0x68
 8004e64:	9301      	str	r3, [sp, #4]
 8004e66:	ab1b      	add	r3, sp, #108	; 0x6c
 8004e68:	9300      	str	r3, [sp, #0]
 8004e6a:	0038      	movs	r0, r7
 8004e6c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004e6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004e70:	f001 f906 	bl	8006080 <__d2b>
 8004e74:	006e      	lsls	r6, r5, #1
 8004e76:	9004      	str	r0, [sp, #16]
 8004e78:	0d76      	lsrs	r6, r6, #21
 8004e7a:	d100      	bne.n	8004e7e <_dtoa_r+0xf2>
 8004e7c:	e07c      	b.n	8004f78 <_dtoa_r+0x1ec>
 8004e7e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004e80:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004e82:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004e84:	4a94      	ldr	r2, [pc, #592]	; (80050d8 <_dtoa_r+0x34c>)
 8004e86:	031b      	lsls	r3, r3, #12
 8004e88:	0b1b      	lsrs	r3, r3, #12
 8004e8a:	431a      	orrs	r2, r3
 8004e8c:	0011      	movs	r1, r2
 8004e8e:	4b93      	ldr	r3, [pc, #588]	; (80050dc <_dtoa_r+0x350>)
 8004e90:	9416      	str	r4, [sp, #88]	; 0x58
 8004e92:	18f6      	adds	r6, r6, r3
 8004e94:	2200      	movs	r2, #0
 8004e96:	4b92      	ldr	r3, [pc, #584]	; (80050e0 <_dtoa_r+0x354>)
 8004e98:	f7fc fdcc 	bl	8001a34 <__aeabi_dsub>
 8004e9c:	4a91      	ldr	r2, [pc, #580]	; (80050e4 <_dtoa_r+0x358>)
 8004e9e:	4b92      	ldr	r3, [pc, #584]	; (80050e8 <_dtoa_r+0x35c>)
 8004ea0:	f7fc fb5c 	bl	800155c <__aeabi_dmul>
 8004ea4:	4a91      	ldr	r2, [pc, #580]	; (80050ec <_dtoa_r+0x360>)
 8004ea6:	4b92      	ldr	r3, [pc, #584]	; (80050f0 <_dtoa_r+0x364>)
 8004ea8:	f7fb fbe8 	bl	800067c <__aeabi_dadd>
 8004eac:	0004      	movs	r4, r0
 8004eae:	0030      	movs	r0, r6
 8004eb0:	000d      	movs	r5, r1
 8004eb2:	f7fd f9a5 	bl	8002200 <__aeabi_i2d>
 8004eb6:	4a8f      	ldr	r2, [pc, #572]	; (80050f4 <_dtoa_r+0x368>)
 8004eb8:	4b8f      	ldr	r3, [pc, #572]	; (80050f8 <_dtoa_r+0x36c>)
 8004eba:	f7fc fb4f 	bl	800155c <__aeabi_dmul>
 8004ebe:	0002      	movs	r2, r0
 8004ec0:	000b      	movs	r3, r1
 8004ec2:	0020      	movs	r0, r4
 8004ec4:	0029      	movs	r1, r5
 8004ec6:	f7fb fbd9 	bl	800067c <__aeabi_dadd>
 8004eca:	0004      	movs	r4, r0
 8004ecc:	000d      	movs	r5, r1
 8004ece:	f7fd f961 	bl	8002194 <__aeabi_d2iz>
 8004ed2:	2200      	movs	r2, #0
 8004ed4:	9002      	str	r0, [sp, #8]
 8004ed6:	2300      	movs	r3, #0
 8004ed8:	0020      	movs	r0, r4
 8004eda:	0029      	movs	r1, r5
 8004edc:	f7fb faba 	bl	8000454 <__aeabi_dcmplt>
 8004ee0:	2800      	cmp	r0, #0
 8004ee2:	d00b      	beq.n	8004efc <_dtoa_r+0x170>
 8004ee4:	9802      	ldr	r0, [sp, #8]
 8004ee6:	f7fd f98b 	bl	8002200 <__aeabi_i2d>
 8004eea:	002b      	movs	r3, r5
 8004eec:	0022      	movs	r2, r4
 8004eee:	f7fb faab 	bl	8000448 <__aeabi_dcmpeq>
 8004ef2:	4243      	negs	r3, r0
 8004ef4:	4158      	adcs	r0, r3
 8004ef6:	9b02      	ldr	r3, [sp, #8]
 8004ef8:	1a1b      	subs	r3, r3, r0
 8004efa:	9302      	str	r3, [sp, #8]
 8004efc:	2301      	movs	r3, #1
 8004efe:	9315      	str	r3, [sp, #84]	; 0x54
 8004f00:	9b02      	ldr	r3, [sp, #8]
 8004f02:	2b16      	cmp	r3, #22
 8004f04:	d80f      	bhi.n	8004f26 <_dtoa_r+0x19a>
 8004f06:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004f08:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004f0a:	00da      	lsls	r2, r3, #3
 8004f0c:	4b7b      	ldr	r3, [pc, #492]	; (80050fc <_dtoa_r+0x370>)
 8004f0e:	189b      	adds	r3, r3, r2
 8004f10:	681a      	ldr	r2, [r3, #0]
 8004f12:	685b      	ldr	r3, [r3, #4]
 8004f14:	f7fb fa9e 	bl	8000454 <__aeabi_dcmplt>
 8004f18:	2800      	cmp	r0, #0
 8004f1a:	d049      	beq.n	8004fb0 <_dtoa_r+0x224>
 8004f1c:	9b02      	ldr	r3, [sp, #8]
 8004f1e:	3b01      	subs	r3, #1
 8004f20:	9302      	str	r3, [sp, #8]
 8004f22:	2300      	movs	r3, #0
 8004f24:	9315      	str	r3, [sp, #84]	; 0x54
 8004f26:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004f28:	1b9e      	subs	r6, r3, r6
 8004f2a:	2300      	movs	r3, #0
 8004f2c:	9308      	str	r3, [sp, #32]
 8004f2e:	0033      	movs	r3, r6
 8004f30:	3b01      	subs	r3, #1
 8004f32:	930d      	str	r3, [sp, #52]	; 0x34
 8004f34:	d504      	bpl.n	8004f40 <_dtoa_r+0x1b4>
 8004f36:	2301      	movs	r3, #1
 8004f38:	1b9b      	subs	r3, r3, r6
 8004f3a:	9308      	str	r3, [sp, #32]
 8004f3c:	2300      	movs	r3, #0
 8004f3e:	930d      	str	r3, [sp, #52]	; 0x34
 8004f40:	9b02      	ldr	r3, [sp, #8]
 8004f42:	2b00      	cmp	r3, #0
 8004f44:	db36      	blt.n	8004fb4 <_dtoa_r+0x228>
 8004f46:	9a02      	ldr	r2, [sp, #8]
 8004f48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004f4a:	4694      	mov	ip, r2
 8004f4c:	4463      	add	r3, ip
 8004f4e:	930d      	str	r3, [sp, #52]	; 0x34
 8004f50:	2300      	movs	r3, #0
 8004f52:	9214      	str	r2, [sp, #80]	; 0x50
 8004f54:	930e      	str	r3, [sp, #56]	; 0x38
 8004f56:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004f58:	2401      	movs	r4, #1
 8004f5a:	2b09      	cmp	r3, #9
 8004f5c:	d862      	bhi.n	8005024 <_dtoa_r+0x298>
 8004f5e:	2b05      	cmp	r3, #5
 8004f60:	dd02      	ble.n	8004f68 <_dtoa_r+0x1dc>
 8004f62:	2400      	movs	r4, #0
 8004f64:	3b04      	subs	r3, #4
 8004f66:	9322      	str	r3, [sp, #136]	; 0x88
 8004f68:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004f6a:	1e98      	subs	r0, r3, #2
 8004f6c:	2803      	cmp	r0, #3
 8004f6e:	d862      	bhi.n	8005036 <_dtoa_r+0x2aa>
 8004f70:	f7fb f8d0 	bl	8000114 <__gnu_thumb1_case_uqi>
 8004f74:	56343629 	.word	0x56343629
 8004f78:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004f7a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004f7c:	189e      	adds	r6, r3, r2
 8004f7e:	4b60      	ldr	r3, [pc, #384]	; (8005100 <_dtoa_r+0x374>)
 8004f80:	18f2      	adds	r2, r6, r3
 8004f82:	2a20      	cmp	r2, #32
 8004f84:	dd0f      	ble.n	8004fa6 <_dtoa_r+0x21a>
 8004f86:	2340      	movs	r3, #64	; 0x40
 8004f88:	1a9b      	subs	r3, r3, r2
 8004f8a:	409d      	lsls	r5, r3
 8004f8c:	4b5d      	ldr	r3, [pc, #372]	; (8005104 <_dtoa_r+0x378>)
 8004f8e:	9802      	ldr	r0, [sp, #8]
 8004f90:	18f3      	adds	r3, r6, r3
 8004f92:	40d8      	lsrs	r0, r3
 8004f94:	4328      	orrs	r0, r5
 8004f96:	f7fd f963 	bl	8002260 <__aeabi_ui2d>
 8004f9a:	2301      	movs	r3, #1
 8004f9c:	4c5a      	ldr	r4, [pc, #360]	; (8005108 <_dtoa_r+0x37c>)
 8004f9e:	3e01      	subs	r6, #1
 8004fa0:	1909      	adds	r1, r1, r4
 8004fa2:	9316      	str	r3, [sp, #88]	; 0x58
 8004fa4:	e776      	b.n	8004e94 <_dtoa_r+0x108>
 8004fa6:	2320      	movs	r3, #32
 8004fa8:	9802      	ldr	r0, [sp, #8]
 8004faa:	1a9b      	subs	r3, r3, r2
 8004fac:	4098      	lsls	r0, r3
 8004fae:	e7f2      	b.n	8004f96 <_dtoa_r+0x20a>
 8004fb0:	9015      	str	r0, [sp, #84]	; 0x54
 8004fb2:	e7b8      	b.n	8004f26 <_dtoa_r+0x19a>
 8004fb4:	9b08      	ldr	r3, [sp, #32]
 8004fb6:	9a02      	ldr	r2, [sp, #8]
 8004fb8:	1a9b      	subs	r3, r3, r2
 8004fba:	9308      	str	r3, [sp, #32]
 8004fbc:	4253      	negs	r3, r2
 8004fbe:	930e      	str	r3, [sp, #56]	; 0x38
 8004fc0:	2300      	movs	r3, #0
 8004fc2:	9314      	str	r3, [sp, #80]	; 0x50
 8004fc4:	e7c7      	b.n	8004f56 <_dtoa_r+0x1ca>
 8004fc6:	2300      	movs	r3, #0
 8004fc8:	930f      	str	r3, [sp, #60]	; 0x3c
 8004fca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	dc36      	bgt.n	800503e <_dtoa_r+0x2b2>
 8004fd0:	2301      	movs	r3, #1
 8004fd2:	001a      	movs	r2, r3
 8004fd4:	930c      	str	r3, [sp, #48]	; 0x30
 8004fd6:	9306      	str	r3, [sp, #24]
 8004fd8:	9223      	str	r2, [sp, #140]	; 0x8c
 8004fda:	e00d      	b.n	8004ff8 <_dtoa_r+0x26c>
 8004fdc:	2301      	movs	r3, #1
 8004fde:	e7f3      	b.n	8004fc8 <_dtoa_r+0x23c>
 8004fe0:	2300      	movs	r3, #0
 8004fe2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004fe4:	930f      	str	r3, [sp, #60]	; 0x3c
 8004fe6:	4694      	mov	ip, r2
 8004fe8:	9b02      	ldr	r3, [sp, #8]
 8004fea:	4463      	add	r3, ip
 8004fec:	930c      	str	r3, [sp, #48]	; 0x30
 8004fee:	3301      	adds	r3, #1
 8004ff0:	9306      	str	r3, [sp, #24]
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	dc00      	bgt.n	8004ff8 <_dtoa_r+0x26c>
 8004ff6:	2301      	movs	r3, #1
 8004ff8:	2200      	movs	r2, #0
 8004ffa:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004ffc:	6042      	str	r2, [r0, #4]
 8004ffe:	3204      	adds	r2, #4
 8005000:	0015      	movs	r5, r2
 8005002:	3514      	adds	r5, #20
 8005004:	6841      	ldr	r1, [r0, #4]
 8005006:	429d      	cmp	r5, r3
 8005008:	d91d      	bls.n	8005046 <_dtoa_r+0x2ba>
 800500a:	0038      	movs	r0, r7
 800500c:	f000 fcfe 	bl	8005a0c <_Balloc>
 8005010:	9005      	str	r0, [sp, #20]
 8005012:	2800      	cmp	r0, #0
 8005014:	d11b      	bne.n	800504e <_dtoa_r+0x2c2>
 8005016:	21d5      	movs	r1, #213	; 0xd5
 8005018:	0002      	movs	r2, r0
 800501a:	4b3c      	ldr	r3, [pc, #240]	; (800510c <_dtoa_r+0x380>)
 800501c:	0049      	lsls	r1, r1, #1
 800501e:	e6ca      	b.n	8004db6 <_dtoa_r+0x2a>
 8005020:	2301      	movs	r3, #1
 8005022:	e7de      	b.n	8004fe2 <_dtoa_r+0x256>
 8005024:	2300      	movs	r3, #0
 8005026:	940f      	str	r4, [sp, #60]	; 0x3c
 8005028:	9322      	str	r3, [sp, #136]	; 0x88
 800502a:	3b01      	subs	r3, #1
 800502c:	930c      	str	r3, [sp, #48]	; 0x30
 800502e:	9306      	str	r3, [sp, #24]
 8005030:	2200      	movs	r2, #0
 8005032:	3313      	adds	r3, #19
 8005034:	e7d0      	b.n	8004fd8 <_dtoa_r+0x24c>
 8005036:	2301      	movs	r3, #1
 8005038:	930f      	str	r3, [sp, #60]	; 0x3c
 800503a:	3b02      	subs	r3, #2
 800503c:	e7f6      	b.n	800502c <_dtoa_r+0x2a0>
 800503e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005040:	930c      	str	r3, [sp, #48]	; 0x30
 8005042:	9306      	str	r3, [sp, #24]
 8005044:	e7d8      	b.n	8004ff8 <_dtoa_r+0x26c>
 8005046:	3101      	adds	r1, #1
 8005048:	6041      	str	r1, [r0, #4]
 800504a:	0052      	lsls	r2, r2, #1
 800504c:	e7d8      	b.n	8005000 <_dtoa_r+0x274>
 800504e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005050:	9a05      	ldr	r2, [sp, #20]
 8005052:	601a      	str	r2, [r3, #0]
 8005054:	9b06      	ldr	r3, [sp, #24]
 8005056:	2b0e      	cmp	r3, #14
 8005058:	d900      	bls.n	800505c <_dtoa_r+0x2d0>
 800505a:	e0eb      	b.n	8005234 <_dtoa_r+0x4a8>
 800505c:	2c00      	cmp	r4, #0
 800505e:	d100      	bne.n	8005062 <_dtoa_r+0x2d6>
 8005060:	e0e8      	b.n	8005234 <_dtoa_r+0x4a8>
 8005062:	9b02      	ldr	r3, [sp, #8]
 8005064:	2b00      	cmp	r3, #0
 8005066:	dd68      	ble.n	800513a <_dtoa_r+0x3ae>
 8005068:	001a      	movs	r2, r3
 800506a:	210f      	movs	r1, #15
 800506c:	4b23      	ldr	r3, [pc, #140]	; (80050fc <_dtoa_r+0x370>)
 800506e:	400a      	ands	r2, r1
 8005070:	00d2      	lsls	r2, r2, #3
 8005072:	189b      	adds	r3, r3, r2
 8005074:	681d      	ldr	r5, [r3, #0]
 8005076:	685e      	ldr	r6, [r3, #4]
 8005078:	9b02      	ldr	r3, [sp, #8]
 800507a:	111c      	asrs	r4, r3, #4
 800507c:	2302      	movs	r3, #2
 800507e:	9310      	str	r3, [sp, #64]	; 0x40
 8005080:	9b02      	ldr	r3, [sp, #8]
 8005082:	05db      	lsls	r3, r3, #23
 8005084:	d50b      	bpl.n	800509e <_dtoa_r+0x312>
 8005086:	4b22      	ldr	r3, [pc, #136]	; (8005110 <_dtoa_r+0x384>)
 8005088:	400c      	ands	r4, r1
 800508a:	6a1a      	ldr	r2, [r3, #32]
 800508c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800508e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005090:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005092:	f7fb fe5d 	bl	8000d50 <__aeabi_ddiv>
 8005096:	2303      	movs	r3, #3
 8005098:	900a      	str	r0, [sp, #40]	; 0x28
 800509a:	910b      	str	r1, [sp, #44]	; 0x2c
 800509c:	9310      	str	r3, [sp, #64]	; 0x40
 800509e:	4b1c      	ldr	r3, [pc, #112]	; (8005110 <_dtoa_r+0x384>)
 80050a0:	9307      	str	r3, [sp, #28]
 80050a2:	2c00      	cmp	r4, #0
 80050a4:	d136      	bne.n	8005114 <_dtoa_r+0x388>
 80050a6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80050a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80050aa:	002a      	movs	r2, r5
 80050ac:	0033      	movs	r3, r6
 80050ae:	f7fb fe4f 	bl	8000d50 <__aeabi_ddiv>
 80050b2:	900a      	str	r0, [sp, #40]	; 0x28
 80050b4:	910b      	str	r1, [sp, #44]	; 0x2c
 80050b6:	e05c      	b.n	8005172 <_dtoa_r+0x3e6>
 80050b8:	080073a1 	.word	0x080073a1
 80050bc:	080073b8 	.word	0x080073b8
 80050c0:	7ff00000 	.word	0x7ff00000
 80050c4:	0000270f 	.word	0x0000270f
 80050c8:	0800739d 	.word	0x0800739d
 80050cc:	080073a0 	.word	0x080073a0
 80050d0:	08007370 	.word	0x08007370
 80050d4:	08007371 	.word	0x08007371
 80050d8:	3ff00000 	.word	0x3ff00000
 80050dc:	fffffc01 	.word	0xfffffc01
 80050e0:	3ff80000 	.word	0x3ff80000
 80050e4:	636f4361 	.word	0x636f4361
 80050e8:	3fd287a7 	.word	0x3fd287a7
 80050ec:	8b60c8b3 	.word	0x8b60c8b3
 80050f0:	3fc68a28 	.word	0x3fc68a28
 80050f4:	509f79fb 	.word	0x509f79fb
 80050f8:	3fd34413 	.word	0x3fd34413
 80050fc:	080074b0 	.word	0x080074b0
 8005100:	00000432 	.word	0x00000432
 8005104:	00000412 	.word	0x00000412
 8005108:	fe100000 	.word	0xfe100000
 800510c:	08007417 	.word	0x08007417
 8005110:	08007488 	.word	0x08007488
 8005114:	2301      	movs	r3, #1
 8005116:	421c      	tst	r4, r3
 8005118:	d00b      	beq.n	8005132 <_dtoa_r+0x3a6>
 800511a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800511c:	0028      	movs	r0, r5
 800511e:	3301      	adds	r3, #1
 8005120:	9310      	str	r3, [sp, #64]	; 0x40
 8005122:	9b07      	ldr	r3, [sp, #28]
 8005124:	0031      	movs	r1, r6
 8005126:	681a      	ldr	r2, [r3, #0]
 8005128:	685b      	ldr	r3, [r3, #4]
 800512a:	f7fc fa17 	bl	800155c <__aeabi_dmul>
 800512e:	0005      	movs	r5, r0
 8005130:	000e      	movs	r6, r1
 8005132:	9b07      	ldr	r3, [sp, #28]
 8005134:	1064      	asrs	r4, r4, #1
 8005136:	3308      	adds	r3, #8
 8005138:	e7b2      	b.n	80050a0 <_dtoa_r+0x314>
 800513a:	2302      	movs	r3, #2
 800513c:	9310      	str	r3, [sp, #64]	; 0x40
 800513e:	9b02      	ldr	r3, [sp, #8]
 8005140:	2b00      	cmp	r3, #0
 8005142:	d016      	beq.n	8005172 <_dtoa_r+0x3e6>
 8005144:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005146:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005148:	425c      	negs	r4, r3
 800514a:	230f      	movs	r3, #15
 800514c:	4ab5      	ldr	r2, [pc, #724]	; (8005424 <_dtoa_r+0x698>)
 800514e:	4023      	ands	r3, r4
 8005150:	00db      	lsls	r3, r3, #3
 8005152:	18d3      	adds	r3, r2, r3
 8005154:	681a      	ldr	r2, [r3, #0]
 8005156:	685b      	ldr	r3, [r3, #4]
 8005158:	f7fc fa00 	bl	800155c <__aeabi_dmul>
 800515c:	2601      	movs	r6, #1
 800515e:	2300      	movs	r3, #0
 8005160:	900a      	str	r0, [sp, #40]	; 0x28
 8005162:	910b      	str	r1, [sp, #44]	; 0x2c
 8005164:	4db0      	ldr	r5, [pc, #704]	; (8005428 <_dtoa_r+0x69c>)
 8005166:	1124      	asrs	r4, r4, #4
 8005168:	2c00      	cmp	r4, #0
 800516a:	d000      	beq.n	800516e <_dtoa_r+0x3e2>
 800516c:	e094      	b.n	8005298 <_dtoa_r+0x50c>
 800516e:	2b00      	cmp	r3, #0
 8005170:	d19f      	bne.n	80050b2 <_dtoa_r+0x326>
 8005172:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005174:	2b00      	cmp	r3, #0
 8005176:	d100      	bne.n	800517a <_dtoa_r+0x3ee>
 8005178:	e09b      	b.n	80052b2 <_dtoa_r+0x526>
 800517a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800517c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800517e:	2200      	movs	r2, #0
 8005180:	0020      	movs	r0, r4
 8005182:	0029      	movs	r1, r5
 8005184:	4ba9      	ldr	r3, [pc, #676]	; (800542c <_dtoa_r+0x6a0>)
 8005186:	f7fb f965 	bl	8000454 <__aeabi_dcmplt>
 800518a:	2800      	cmp	r0, #0
 800518c:	d100      	bne.n	8005190 <_dtoa_r+0x404>
 800518e:	e090      	b.n	80052b2 <_dtoa_r+0x526>
 8005190:	9b06      	ldr	r3, [sp, #24]
 8005192:	2b00      	cmp	r3, #0
 8005194:	d100      	bne.n	8005198 <_dtoa_r+0x40c>
 8005196:	e08c      	b.n	80052b2 <_dtoa_r+0x526>
 8005198:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800519a:	2b00      	cmp	r3, #0
 800519c:	dd46      	ble.n	800522c <_dtoa_r+0x4a0>
 800519e:	9b02      	ldr	r3, [sp, #8]
 80051a0:	2200      	movs	r2, #0
 80051a2:	0020      	movs	r0, r4
 80051a4:	0029      	movs	r1, r5
 80051a6:	1e5e      	subs	r6, r3, #1
 80051a8:	4ba1      	ldr	r3, [pc, #644]	; (8005430 <_dtoa_r+0x6a4>)
 80051aa:	f7fc f9d7 	bl	800155c <__aeabi_dmul>
 80051ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80051b0:	900a      	str	r0, [sp, #40]	; 0x28
 80051b2:	910b      	str	r1, [sp, #44]	; 0x2c
 80051b4:	3301      	adds	r3, #1
 80051b6:	9310      	str	r3, [sp, #64]	; 0x40
 80051b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80051ba:	9810      	ldr	r0, [sp, #64]	; 0x40
 80051bc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80051be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80051c0:	9307      	str	r3, [sp, #28]
 80051c2:	f7fd f81d 	bl	8002200 <__aeabi_i2d>
 80051c6:	0022      	movs	r2, r4
 80051c8:	002b      	movs	r3, r5
 80051ca:	f7fc f9c7 	bl	800155c <__aeabi_dmul>
 80051ce:	2200      	movs	r2, #0
 80051d0:	4b98      	ldr	r3, [pc, #608]	; (8005434 <_dtoa_r+0x6a8>)
 80051d2:	f7fb fa53 	bl	800067c <__aeabi_dadd>
 80051d6:	9010      	str	r0, [sp, #64]	; 0x40
 80051d8:	9111      	str	r1, [sp, #68]	; 0x44
 80051da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80051dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051de:	920a      	str	r2, [sp, #40]	; 0x28
 80051e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80051e2:	4a95      	ldr	r2, [pc, #596]	; (8005438 <_dtoa_r+0x6ac>)
 80051e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051e6:	4694      	mov	ip, r2
 80051e8:	4463      	add	r3, ip
 80051ea:	9317      	str	r3, [sp, #92]	; 0x5c
 80051ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80051ee:	9b07      	ldr	r3, [sp, #28]
 80051f0:	2b00      	cmp	r3, #0
 80051f2:	d161      	bne.n	80052b8 <_dtoa_r+0x52c>
 80051f4:	2200      	movs	r2, #0
 80051f6:	0020      	movs	r0, r4
 80051f8:	0029      	movs	r1, r5
 80051fa:	4b90      	ldr	r3, [pc, #576]	; (800543c <_dtoa_r+0x6b0>)
 80051fc:	f7fc fc1a 	bl	8001a34 <__aeabi_dsub>
 8005200:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005202:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005204:	0004      	movs	r4, r0
 8005206:	000d      	movs	r5, r1
 8005208:	f7fb f938 	bl	800047c <__aeabi_dcmpgt>
 800520c:	2800      	cmp	r0, #0
 800520e:	d000      	beq.n	8005212 <_dtoa_r+0x486>
 8005210:	e2b5      	b.n	800577e <_dtoa_r+0x9f2>
 8005212:	488b      	ldr	r0, [pc, #556]	; (8005440 <_dtoa_r+0x6b4>)
 8005214:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005216:	4684      	mov	ip, r0
 8005218:	4461      	add	r1, ip
 800521a:	000b      	movs	r3, r1
 800521c:	0020      	movs	r0, r4
 800521e:	0029      	movs	r1, r5
 8005220:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005222:	f7fb f917 	bl	8000454 <__aeabi_dcmplt>
 8005226:	2800      	cmp	r0, #0
 8005228:	d000      	beq.n	800522c <_dtoa_r+0x4a0>
 800522a:	e2a5      	b.n	8005778 <_dtoa_r+0x9ec>
 800522c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800522e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8005230:	930a      	str	r3, [sp, #40]	; 0x28
 8005232:	940b      	str	r4, [sp, #44]	; 0x2c
 8005234:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005236:	2b00      	cmp	r3, #0
 8005238:	da00      	bge.n	800523c <_dtoa_r+0x4b0>
 800523a:	e171      	b.n	8005520 <_dtoa_r+0x794>
 800523c:	9a02      	ldr	r2, [sp, #8]
 800523e:	2a0e      	cmp	r2, #14
 8005240:	dd00      	ble.n	8005244 <_dtoa_r+0x4b8>
 8005242:	e16d      	b.n	8005520 <_dtoa_r+0x794>
 8005244:	4b77      	ldr	r3, [pc, #476]	; (8005424 <_dtoa_r+0x698>)
 8005246:	00d2      	lsls	r2, r2, #3
 8005248:	189b      	adds	r3, r3, r2
 800524a:	685c      	ldr	r4, [r3, #4]
 800524c:	681b      	ldr	r3, [r3, #0]
 800524e:	9308      	str	r3, [sp, #32]
 8005250:	9409      	str	r4, [sp, #36]	; 0x24
 8005252:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005254:	2b00      	cmp	r3, #0
 8005256:	db00      	blt.n	800525a <_dtoa_r+0x4ce>
 8005258:	e0f6      	b.n	8005448 <_dtoa_r+0x6bc>
 800525a:	9b06      	ldr	r3, [sp, #24]
 800525c:	2b00      	cmp	r3, #0
 800525e:	dd00      	ble.n	8005262 <_dtoa_r+0x4d6>
 8005260:	e0f2      	b.n	8005448 <_dtoa_r+0x6bc>
 8005262:	d000      	beq.n	8005266 <_dtoa_r+0x4da>
 8005264:	e288      	b.n	8005778 <_dtoa_r+0x9ec>
 8005266:	9808      	ldr	r0, [sp, #32]
 8005268:	9909      	ldr	r1, [sp, #36]	; 0x24
 800526a:	2200      	movs	r2, #0
 800526c:	4b73      	ldr	r3, [pc, #460]	; (800543c <_dtoa_r+0x6b0>)
 800526e:	f7fc f975 	bl	800155c <__aeabi_dmul>
 8005272:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005274:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005276:	f7fb f90b 	bl	8000490 <__aeabi_dcmpge>
 800527a:	9e06      	ldr	r6, [sp, #24]
 800527c:	0035      	movs	r5, r6
 800527e:	2800      	cmp	r0, #0
 8005280:	d000      	beq.n	8005284 <_dtoa_r+0x4f8>
 8005282:	e25f      	b.n	8005744 <_dtoa_r+0x9b8>
 8005284:	9b05      	ldr	r3, [sp, #20]
 8005286:	9a05      	ldr	r2, [sp, #20]
 8005288:	3301      	adds	r3, #1
 800528a:	9307      	str	r3, [sp, #28]
 800528c:	2331      	movs	r3, #49	; 0x31
 800528e:	7013      	strb	r3, [r2, #0]
 8005290:	9b02      	ldr	r3, [sp, #8]
 8005292:	3301      	adds	r3, #1
 8005294:	9302      	str	r3, [sp, #8]
 8005296:	e25a      	b.n	800574e <_dtoa_r+0x9c2>
 8005298:	4234      	tst	r4, r6
 800529a:	d007      	beq.n	80052ac <_dtoa_r+0x520>
 800529c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800529e:	3301      	adds	r3, #1
 80052a0:	9310      	str	r3, [sp, #64]	; 0x40
 80052a2:	682a      	ldr	r2, [r5, #0]
 80052a4:	686b      	ldr	r3, [r5, #4]
 80052a6:	f7fc f959 	bl	800155c <__aeabi_dmul>
 80052aa:	0033      	movs	r3, r6
 80052ac:	1064      	asrs	r4, r4, #1
 80052ae:	3508      	adds	r5, #8
 80052b0:	e75a      	b.n	8005168 <_dtoa_r+0x3dc>
 80052b2:	9e02      	ldr	r6, [sp, #8]
 80052b4:	9b06      	ldr	r3, [sp, #24]
 80052b6:	e780      	b.n	80051ba <_dtoa_r+0x42e>
 80052b8:	9b07      	ldr	r3, [sp, #28]
 80052ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80052bc:	1e5a      	subs	r2, r3, #1
 80052be:	4b59      	ldr	r3, [pc, #356]	; (8005424 <_dtoa_r+0x698>)
 80052c0:	00d2      	lsls	r2, r2, #3
 80052c2:	189b      	adds	r3, r3, r2
 80052c4:	681a      	ldr	r2, [r3, #0]
 80052c6:	685b      	ldr	r3, [r3, #4]
 80052c8:	2900      	cmp	r1, #0
 80052ca:	d051      	beq.n	8005370 <_dtoa_r+0x5e4>
 80052cc:	2000      	movs	r0, #0
 80052ce:	495d      	ldr	r1, [pc, #372]	; (8005444 <_dtoa_r+0x6b8>)
 80052d0:	f7fb fd3e 	bl	8000d50 <__aeabi_ddiv>
 80052d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80052d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80052d8:	f7fc fbac 	bl	8001a34 <__aeabi_dsub>
 80052dc:	9a05      	ldr	r2, [sp, #20]
 80052de:	9b05      	ldr	r3, [sp, #20]
 80052e0:	4694      	mov	ip, r2
 80052e2:	9310      	str	r3, [sp, #64]	; 0x40
 80052e4:	9b07      	ldr	r3, [sp, #28]
 80052e6:	900a      	str	r0, [sp, #40]	; 0x28
 80052e8:	910b      	str	r1, [sp, #44]	; 0x2c
 80052ea:	4463      	add	r3, ip
 80052ec:	9319      	str	r3, [sp, #100]	; 0x64
 80052ee:	0029      	movs	r1, r5
 80052f0:	0020      	movs	r0, r4
 80052f2:	f7fc ff4f 	bl	8002194 <__aeabi_d2iz>
 80052f6:	9017      	str	r0, [sp, #92]	; 0x5c
 80052f8:	f7fc ff82 	bl	8002200 <__aeabi_i2d>
 80052fc:	0002      	movs	r2, r0
 80052fe:	000b      	movs	r3, r1
 8005300:	0020      	movs	r0, r4
 8005302:	0029      	movs	r1, r5
 8005304:	f7fc fb96 	bl	8001a34 <__aeabi_dsub>
 8005308:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800530a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800530c:	3301      	adds	r3, #1
 800530e:	9307      	str	r3, [sp, #28]
 8005310:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005312:	0004      	movs	r4, r0
 8005314:	3330      	adds	r3, #48	; 0x30
 8005316:	7013      	strb	r3, [r2, #0]
 8005318:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800531a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800531c:	000d      	movs	r5, r1
 800531e:	f7fb f899 	bl	8000454 <__aeabi_dcmplt>
 8005322:	2800      	cmp	r0, #0
 8005324:	d175      	bne.n	8005412 <_dtoa_r+0x686>
 8005326:	0022      	movs	r2, r4
 8005328:	002b      	movs	r3, r5
 800532a:	2000      	movs	r0, #0
 800532c:	493f      	ldr	r1, [pc, #252]	; (800542c <_dtoa_r+0x6a0>)
 800532e:	f7fc fb81 	bl	8001a34 <__aeabi_dsub>
 8005332:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005334:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005336:	f7fb f88d 	bl	8000454 <__aeabi_dcmplt>
 800533a:	2800      	cmp	r0, #0
 800533c:	d000      	beq.n	8005340 <_dtoa_r+0x5b4>
 800533e:	e0d1      	b.n	80054e4 <_dtoa_r+0x758>
 8005340:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005342:	9a07      	ldr	r2, [sp, #28]
 8005344:	4293      	cmp	r3, r2
 8005346:	d100      	bne.n	800534a <_dtoa_r+0x5be>
 8005348:	e770      	b.n	800522c <_dtoa_r+0x4a0>
 800534a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800534c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800534e:	2200      	movs	r2, #0
 8005350:	4b37      	ldr	r3, [pc, #220]	; (8005430 <_dtoa_r+0x6a4>)
 8005352:	f7fc f903 	bl	800155c <__aeabi_dmul>
 8005356:	4b36      	ldr	r3, [pc, #216]	; (8005430 <_dtoa_r+0x6a4>)
 8005358:	900a      	str	r0, [sp, #40]	; 0x28
 800535a:	910b      	str	r1, [sp, #44]	; 0x2c
 800535c:	2200      	movs	r2, #0
 800535e:	0020      	movs	r0, r4
 8005360:	0029      	movs	r1, r5
 8005362:	f7fc f8fb 	bl	800155c <__aeabi_dmul>
 8005366:	9b07      	ldr	r3, [sp, #28]
 8005368:	0004      	movs	r4, r0
 800536a:	000d      	movs	r5, r1
 800536c:	9310      	str	r3, [sp, #64]	; 0x40
 800536e:	e7be      	b.n	80052ee <_dtoa_r+0x562>
 8005370:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005372:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005374:	f7fc f8f2 	bl	800155c <__aeabi_dmul>
 8005378:	9a05      	ldr	r2, [sp, #20]
 800537a:	9b05      	ldr	r3, [sp, #20]
 800537c:	4694      	mov	ip, r2
 800537e:	930a      	str	r3, [sp, #40]	; 0x28
 8005380:	9b07      	ldr	r3, [sp, #28]
 8005382:	9010      	str	r0, [sp, #64]	; 0x40
 8005384:	9111      	str	r1, [sp, #68]	; 0x44
 8005386:	4463      	add	r3, ip
 8005388:	9319      	str	r3, [sp, #100]	; 0x64
 800538a:	0029      	movs	r1, r5
 800538c:	0020      	movs	r0, r4
 800538e:	f7fc ff01 	bl	8002194 <__aeabi_d2iz>
 8005392:	9017      	str	r0, [sp, #92]	; 0x5c
 8005394:	f7fc ff34 	bl	8002200 <__aeabi_i2d>
 8005398:	0002      	movs	r2, r0
 800539a:	000b      	movs	r3, r1
 800539c:	0020      	movs	r0, r4
 800539e:	0029      	movs	r1, r5
 80053a0:	f7fc fb48 	bl	8001a34 <__aeabi_dsub>
 80053a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80053a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80053a8:	3330      	adds	r3, #48	; 0x30
 80053aa:	7013      	strb	r3, [r2, #0]
 80053ac:	0013      	movs	r3, r2
 80053ae:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80053b0:	3301      	adds	r3, #1
 80053b2:	0004      	movs	r4, r0
 80053b4:	000d      	movs	r5, r1
 80053b6:	930a      	str	r3, [sp, #40]	; 0x28
 80053b8:	4293      	cmp	r3, r2
 80053ba:	d12c      	bne.n	8005416 <_dtoa_r+0x68a>
 80053bc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80053be:	9911      	ldr	r1, [sp, #68]	; 0x44
 80053c0:	9a05      	ldr	r2, [sp, #20]
 80053c2:	9b07      	ldr	r3, [sp, #28]
 80053c4:	4694      	mov	ip, r2
 80053c6:	4463      	add	r3, ip
 80053c8:	2200      	movs	r2, #0
 80053ca:	9307      	str	r3, [sp, #28]
 80053cc:	4b1d      	ldr	r3, [pc, #116]	; (8005444 <_dtoa_r+0x6b8>)
 80053ce:	f7fb f955 	bl	800067c <__aeabi_dadd>
 80053d2:	0002      	movs	r2, r0
 80053d4:	000b      	movs	r3, r1
 80053d6:	0020      	movs	r0, r4
 80053d8:	0029      	movs	r1, r5
 80053da:	f7fb f84f 	bl	800047c <__aeabi_dcmpgt>
 80053de:	2800      	cmp	r0, #0
 80053e0:	d000      	beq.n	80053e4 <_dtoa_r+0x658>
 80053e2:	e07f      	b.n	80054e4 <_dtoa_r+0x758>
 80053e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80053e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053e8:	2000      	movs	r0, #0
 80053ea:	4916      	ldr	r1, [pc, #88]	; (8005444 <_dtoa_r+0x6b8>)
 80053ec:	f7fc fb22 	bl	8001a34 <__aeabi_dsub>
 80053f0:	0002      	movs	r2, r0
 80053f2:	000b      	movs	r3, r1
 80053f4:	0020      	movs	r0, r4
 80053f6:	0029      	movs	r1, r5
 80053f8:	f7fb f82c 	bl	8000454 <__aeabi_dcmplt>
 80053fc:	2800      	cmp	r0, #0
 80053fe:	d100      	bne.n	8005402 <_dtoa_r+0x676>
 8005400:	e714      	b.n	800522c <_dtoa_r+0x4a0>
 8005402:	9b07      	ldr	r3, [sp, #28]
 8005404:	001a      	movs	r2, r3
 8005406:	3a01      	subs	r2, #1
 8005408:	9207      	str	r2, [sp, #28]
 800540a:	7812      	ldrb	r2, [r2, #0]
 800540c:	2a30      	cmp	r2, #48	; 0x30
 800540e:	d0f8      	beq.n	8005402 <_dtoa_r+0x676>
 8005410:	9307      	str	r3, [sp, #28]
 8005412:	9602      	str	r6, [sp, #8]
 8005414:	e054      	b.n	80054c0 <_dtoa_r+0x734>
 8005416:	2200      	movs	r2, #0
 8005418:	4b05      	ldr	r3, [pc, #20]	; (8005430 <_dtoa_r+0x6a4>)
 800541a:	f7fc f89f 	bl	800155c <__aeabi_dmul>
 800541e:	0004      	movs	r4, r0
 8005420:	000d      	movs	r5, r1
 8005422:	e7b2      	b.n	800538a <_dtoa_r+0x5fe>
 8005424:	080074b0 	.word	0x080074b0
 8005428:	08007488 	.word	0x08007488
 800542c:	3ff00000 	.word	0x3ff00000
 8005430:	40240000 	.word	0x40240000
 8005434:	401c0000 	.word	0x401c0000
 8005438:	fcc00000 	.word	0xfcc00000
 800543c:	40140000 	.word	0x40140000
 8005440:	7cc00000 	.word	0x7cc00000
 8005444:	3fe00000 	.word	0x3fe00000
 8005448:	9b06      	ldr	r3, [sp, #24]
 800544a:	9e05      	ldr	r6, [sp, #20]
 800544c:	3b01      	subs	r3, #1
 800544e:	199b      	adds	r3, r3, r6
 8005450:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005452:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005454:	930a      	str	r3, [sp, #40]	; 0x28
 8005456:	9a08      	ldr	r2, [sp, #32]
 8005458:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800545a:	0020      	movs	r0, r4
 800545c:	0029      	movs	r1, r5
 800545e:	f7fb fc77 	bl	8000d50 <__aeabi_ddiv>
 8005462:	f7fc fe97 	bl	8002194 <__aeabi_d2iz>
 8005466:	9006      	str	r0, [sp, #24]
 8005468:	f7fc feca 	bl	8002200 <__aeabi_i2d>
 800546c:	9a08      	ldr	r2, [sp, #32]
 800546e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005470:	f7fc f874 	bl	800155c <__aeabi_dmul>
 8005474:	0002      	movs	r2, r0
 8005476:	000b      	movs	r3, r1
 8005478:	0020      	movs	r0, r4
 800547a:	0029      	movs	r1, r5
 800547c:	f7fc fada 	bl	8001a34 <__aeabi_dsub>
 8005480:	0033      	movs	r3, r6
 8005482:	9a06      	ldr	r2, [sp, #24]
 8005484:	3601      	adds	r6, #1
 8005486:	3230      	adds	r2, #48	; 0x30
 8005488:	701a      	strb	r2, [r3, #0]
 800548a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800548c:	9607      	str	r6, [sp, #28]
 800548e:	429a      	cmp	r2, r3
 8005490:	d139      	bne.n	8005506 <_dtoa_r+0x77a>
 8005492:	0002      	movs	r2, r0
 8005494:	000b      	movs	r3, r1
 8005496:	f7fb f8f1 	bl	800067c <__aeabi_dadd>
 800549a:	9a08      	ldr	r2, [sp, #32]
 800549c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800549e:	0004      	movs	r4, r0
 80054a0:	000d      	movs	r5, r1
 80054a2:	f7fa ffeb 	bl	800047c <__aeabi_dcmpgt>
 80054a6:	2800      	cmp	r0, #0
 80054a8:	d11b      	bne.n	80054e2 <_dtoa_r+0x756>
 80054aa:	9a08      	ldr	r2, [sp, #32]
 80054ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80054ae:	0020      	movs	r0, r4
 80054b0:	0029      	movs	r1, r5
 80054b2:	f7fa ffc9 	bl	8000448 <__aeabi_dcmpeq>
 80054b6:	2800      	cmp	r0, #0
 80054b8:	d002      	beq.n	80054c0 <_dtoa_r+0x734>
 80054ba:	9b06      	ldr	r3, [sp, #24]
 80054bc:	07db      	lsls	r3, r3, #31
 80054be:	d410      	bmi.n	80054e2 <_dtoa_r+0x756>
 80054c0:	0038      	movs	r0, r7
 80054c2:	9904      	ldr	r1, [sp, #16]
 80054c4:	f000 fae6 	bl	8005a94 <_Bfree>
 80054c8:	2300      	movs	r3, #0
 80054ca:	9a07      	ldr	r2, [sp, #28]
 80054cc:	9802      	ldr	r0, [sp, #8]
 80054ce:	7013      	strb	r3, [r2, #0]
 80054d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80054d2:	3001      	adds	r0, #1
 80054d4:	6018      	str	r0, [r3, #0]
 80054d6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d100      	bne.n	80054de <_dtoa_r+0x752>
 80054dc:	e4a3      	b.n	8004e26 <_dtoa_r+0x9a>
 80054de:	601a      	str	r2, [r3, #0]
 80054e0:	e4a1      	b.n	8004e26 <_dtoa_r+0x9a>
 80054e2:	9e02      	ldr	r6, [sp, #8]
 80054e4:	9b07      	ldr	r3, [sp, #28]
 80054e6:	9307      	str	r3, [sp, #28]
 80054e8:	3b01      	subs	r3, #1
 80054ea:	781a      	ldrb	r2, [r3, #0]
 80054ec:	2a39      	cmp	r2, #57	; 0x39
 80054ee:	d106      	bne.n	80054fe <_dtoa_r+0x772>
 80054f0:	9a05      	ldr	r2, [sp, #20]
 80054f2:	429a      	cmp	r2, r3
 80054f4:	d1f7      	bne.n	80054e6 <_dtoa_r+0x75a>
 80054f6:	2230      	movs	r2, #48	; 0x30
 80054f8:	9905      	ldr	r1, [sp, #20]
 80054fa:	3601      	adds	r6, #1
 80054fc:	700a      	strb	r2, [r1, #0]
 80054fe:	781a      	ldrb	r2, [r3, #0]
 8005500:	3201      	adds	r2, #1
 8005502:	701a      	strb	r2, [r3, #0]
 8005504:	e785      	b.n	8005412 <_dtoa_r+0x686>
 8005506:	2200      	movs	r2, #0
 8005508:	4bad      	ldr	r3, [pc, #692]	; (80057c0 <_dtoa_r+0xa34>)
 800550a:	f7fc f827 	bl	800155c <__aeabi_dmul>
 800550e:	2200      	movs	r2, #0
 8005510:	2300      	movs	r3, #0
 8005512:	0004      	movs	r4, r0
 8005514:	000d      	movs	r5, r1
 8005516:	f7fa ff97 	bl	8000448 <__aeabi_dcmpeq>
 800551a:	2800      	cmp	r0, #0
 800551c:	d09b      	beq.n	8005456 <_dtoa_r+0x6ca>
 800551e:	e7cf      	b.n	80054c0 <_dtoa_r+0x734>
 8005520:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005522:	2a00      	cmp	r2, #0
 8005524:	d100      	bne.n	8005528 <_dtoa_r+0x79c>
 8005526:	e082      	b.n	800562e <_dtoa_r+0x8a2>
 8005528:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800552a:	2a01      	cmp	r2, #1
 800552c:	dc66      	bgt.n	80055fc <_dtoa_r+0x870>
 800552e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8005530:	2a00      	cmp	r2, #0
 8005532:	d05f      	beq.n	80055f4 <_dtoa_r+0x868>
 8005534:	4aa3      	ldr	r2, [pc, #652]	; (80057c4 <_dtoa_r+0xa38>)
 8005536:	189b      	adds	r3, r3, r2
 8005538:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800553a:	9c08      	ldr	r4, [sp, #32]
 800553c:	9a08      	ldr	r2, [sp, #32]
 800553e:	2101      	movs	r1, #1
 8005540:	18d2      	adds	r2, r2, r3
 8005542:	9208      	str	r2, [sp, #32]
 8005544:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005546:	0038      	movs	r0, r7
 8005548:	18d3      	adds	r3, r2, r3
 800554a:	930d      	str	r3, [sp, #52]	; 0x34
 800554c:	f000 fb52 	bl	8005bf4 <__i2b>
 8005550:	0005      	movs	r5, r0
 8005552:	2c00      	cmp	r4, #0
 8005554:	dd0e      	ble.n	8005574 <_dtoa_r+0x7e8>
 8005556:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005558:	2b00      	cmp	r3, #0
 800555a:	dd0b      	ble.n	8005574 <_dtoa_r+0x7e8>
 800555c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800555e:	0023      	movs	r3, r4
 8005560:	4294      	cmp	r4, r2
 8005562:	dd00      	ble.n	8005566 <_dtoa_r+0x7da>
 8005564:	0013      	movs	r3, r2
 8005566:	9a08      	ldr	r2, [sp, #32]
 8005568:	1ae4      	subs	r4, r4, r3
 800556a:	1ad2      	subs	r2, r2, r3
 800556c:	9208      	str	r2, [sp, #32]
 800556e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005570:	1ad3      	subs	r3, r2, r3
 8005572:	930d      	str	r3, [sp, #52]	; 0x34
 8005574:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005576:	2b00      	cmp	r3, #0
 8005578:	d01f      	beq.n	80055ba <_dtoa_r+0x82e>
 800557a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800557c:	2b00      	cmp	r3, #0
 800557e:	d05a      	beq.n	8005636 <_dtoa_r+0x8aa>
 8005580:	2e00      	cmp	r6, #0
 8005582:	dd11      	ble.n	80055a8 <_dtoa_r+0x81c>
 8005584:	0029      	movs	r1, r5
 8005586:	0032      	movs	r2, r6
 8005588:	0038      	movs	r0, r7
 800558a:	f000 fbf9 	bl	8005d80 <__pow5mult>
 800558e:	9a04      	ldr	r2, [sp, #16]
 8005590:	0001      	movs	r1, r0
 8005592:	0005      	movs	r5, r0
 8005594:	0038      	movs	r0, r7
 8005596:	f000 fb43 	bl	8005c20 <__multiply>
 800559a:	9904      	ldr	r1, [sp, #16]
 800559c:	9007      	str	r0, [sp, #28]
 800559e:	0038      	movs	r0, r7
 80055a0:	f000 fa78 	bl	8005a94 <_Bfree>
 80055a4:	9b07      	ldr	r3, [sp, #28]
 80055a6:	9304      	str	r3, [sp, #16]
 80055a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80055aa:	1b9a      	subs	r2, r3, r6
 80055ac:	42b3      	cmp	r3, r6
 80055ae:	d004      	beq.n	80055ba <_dtoa_r+0x82e>
 80055b0:	0038      	movs	r0, r7
 80055b2:	9904      	ldr	r1, [sp, #16]
 80055b4:	f000 fbe4 	bl	8005d80 <__pow5mult>
 80055b8:	9004      	str	r0, [sp, #16]
 80055ba:	2101      	movs	r1, #1
 80055bc:	0038      	movs	r0, r7
 80055be:	f000 fb19 	bl	8005bf4 <__i2b>
 80055c2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80055c4:	0006      	movs	r6, r0
 80055c6:	2b00      	cmp	r3, #0
 80055c8:	dd37      	ble.n	800563a <_dtoa_r+0x8ae>
 80055ca:	001a      	movs	r2, r3
 80055cc:	0001      	movs	r1, r0
 80055ce:	0038      	movs	r0, r7
 80055d0:	f000 fbd6 	bl	8005d80 <__pow5mult>
 80055d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80055d6:	0006      	movs	r6, r0
 80055d8:	2b01      	cmp	r3, #1
 80055da:	dd33      	ble.n	8005644 <_dtoa_r+0x8b8>
 80055dc:	2300      	movs	r3, #0
 80055de:	9307      	str	r3, [sp, #28]
 80055e0:	6933      	ldr	r3, [r6, #16]
 80055e2:	3303      	adds	r3, #3
 80055e4:	009b      	lsls	r3, r3, #2
 80055e6:	18f3      	adds	r3, r6, r3
 80055e8:	6858      	ldr	r0, [r3, #4]
 80055ea:	f000 fabb 	bl	8005b64 <__hi0bits>
 80055ee:	2320      	movs	r3, #32
 80055f0:	1a18      	subs	r0, r3, r0
 80055f2:	e03f      	b.n	8005674 <_dtoa_r+0x8e8>
 80055f4:	2336      	movs	r3, #54	; 0x36
 80055f6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80055f8:	1a9b      	subs	r3, r3, r2
 80055fa:	e79d      	b.n	8005538 <_dtoa_r+0x7ac>
 80055fc:	9b06      	ldr	r3, [sp, #24]
 80055fe:	1e5e      	subs	r6, r3, #1
 8005600:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005602:	42b3      	cmp	r3, r6
 8005604:	db08      	blt.n	8005618 <_dtoa_r+0x88c>
 8005606:	1b9e      	subs	r6, r3, r6
 8005608:	9b06      	ldr	r3, [sp, #24]
 800560a:	2b00      	cmp	r3, #0
 800560c:	da0c      	bge.n	8005628 <_dtoa_r+0x89c>
 800560e:	9b08      	ldr	r3, [sp, #32]
 8005610:	9a06      	ldr	r2, [sp, #24]
 8005612:	1a9c      	subs	r4, r3, r2
 8005614:	2300      	movs	r3, #0
 8005616:	e791      	b.n	800553c <_dtoa_r+0x7b0>
 8005618:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800561a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800561c:	1af3      	subs	r3, r6, r3
 800561e:	18d3      	adds	r3, r2, r3
 8005620:	960e      	str	r6, [sp, #56]	; 0x38
 8005622:	9314      	str	r3, [sp, #80]	; 0x50
 8005624:	2600      	movs	r6, #0
 8005626:	e7ef      	b.n	8005608 <_dtoa_r+0x87c>
 8005628:	9c08      	ldr	r4, [sp, #32]
 800562a:	9b06      	ldr	r3, [sp, #24]
 800562c:	e786      	b.n	800553c <_dtoa_r+0x7b0>
 800562e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005630:	9c08      	ldr	r4, [sp, #32]
 8005632:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005634:	e78d      	b.n	8005552 <_dtoa_r+0x7c6>
 8005636:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005638:	e7ba      	b.n	80055b0 <_dtoa_r+0x824>
 800563a:	2300      	movs	r3, #0
 800563c:	9307      	str	r3, [sp, #28]
 800563e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005640:	2b01      	cmp	r3, #1
 8005642:	dc13      	bgt.n	800566c <_dtoa_r+0x8e0>
 8005644:	2300      	movs	r3, #0
 8005646:	9307      	str	r3, [sp, #28]
 8005648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800564a:	2b00      	cmp	r3, #0
 800564c:	d10e      	bne.n	800566c <_dtoa_r+0x8e0>
 800564e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005650:	031b      	lsls	r3, r3, #12
 8005652:	d10b      	bne.n	800566c <_dtoa_r+0x8e0>
 8005654:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005656:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005658:	4213      	tst	r3, r2
 800565a:	d007      	beq.n	800566c <_dtoa_r+0x8e0>
 800565c:	9b08      	ldr	r3, [sp, #32]
 800565e:	3301      	adds	r3, #1
 8005660:	9308      	str	r3, [sp, #32]
 8005662:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005664:	3301      	adds	r3, #1
 8005666:	930d      	str	r3, [sp, #52]	; 0x34
 8005668:	2301      	movs	r3, #1
 800566a:	9307      	str	r3, [sp, #28]
 800566c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800566e:	2001      	movs	r0, #1
 8005670:	2b00      	cmp	r3, #0
 8005672:	d1b5      	bne.n	80055e0 <_dtoa_r+0x854>
 8005674:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005676:	221f      	movs	r2, #31
 8005678:	1818      	adds	r0, r3, r0
 800567a:	0003      	movs	r3, r0
 800567c:	4013      	ands	r3, r2
 800567e:	4210      	tst	r0, r2
 8005680:	d046      	beq.n	8005710 <_dtoa_r+0x984>
 8005682:	3201      	adds	r2, #1
 8005684:	1ad2      	subs	r2, r2, r3
 8005686:	2a04      	cmp	r2, #4
 8005688:	dd3f      	ble.n	800570a <_dtoa_r+0x97e>
 800568a:	221c      	movs	r2, #28
 800568c:	1ad3      	subs	r3, r2, r3
 800568e:	9a08      	ldr	r2, [sp, #32]
 8005690:	18e4      	adds	r4, r4, r3
 8005692:	18d2      	adds	r2, r2, r3
 8005694:	9208      	str	r2, [sp, #32]
 8005696:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005698:	18d3      	adds	r3, r2, r3
 800569a:	930d      	str	r3, [sp, #52]	; 0x34
 800569c:	9b08      	ldr	r3, [sp, #32]
 800569e:	2b00      	cmp	r3, #0
 80056a0:	dd05      	ble.n	80056ae <_dtoa_r+0x922>
 80056a2:	001a      	movs	r2, r3
 80056a4:	0038      	movs	r0, r7
 80056a6:	9904      	ldr	r1, [sp, #16]
 80056a8:	f000 fbc6 	bl	8005e38 <__lshift>
 80056ac:	9004      	str	r0, [sp, #16]
 80056ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	dd05      	ble.n	80056c0 <_dtoa_r+0x934>
 80056b4:	0031      	movs	r1, r6
 80056b6:	001a      	movs	r2, r3
 80056b8:	0038      	movs	r0, r7
 80056ba:	f000 fbbd 	bl	8005e38 <__lshift>
 80056be:	0006      	movs	r6, r0
 80056c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80056c2:	2b00      	cmp	r3, #0
 80056c4:	d026      	beq.n	8005714 <_dtoa_r+0x988>
 80056c6:	0031      	movs	r1, r6
 80056c8:	9804      	ldr	r0, [sp, #16]
 80056ca:	f000 fc25 	bl	8005f18 <__mcmp>
 80056ce:	2800      	cmp	r0, #0
 80056d0:	da20      	bge.n	8005714 <_dtoa_r+0x988>
 80056d2:	9b02      	ldr	r3, [sp, #8]
 80056d4:	220a      	movs	r2, #10
 80056d6:	3b01      	subs	r3, #1
 80056d8:	9302      	str	r3, [sp, #8]
 80056da:	0038      	movs	r0, r7
 80056dc:	2300      	movs	r3, #0
 80056de:	9904      	ldr	r1, [sp, #16]
 80056e0:	f000 f9fc 	bl	8005adc <__multadd>
 80056e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80056e6:	9004      	str	r0, [sp, #16]
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d100      	bne.n	80056ee <_dtoa_r+0x962>
 80056ec:	e160      	b.n	80059b0 <_dtoa_r+0xc24>
 80056ee:	2300      	movs	r3, #0
 80056f0:	0029      	movs	r1, r5
 80056f2:	220a      	movs	r2, #10
 80056f4:	0038      	movs	r0, r7
 80056f6:	f000 f9f1 	bl	8005adc <__multadd>
 80056fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80056fc:	0005      	movs	r5, r0
 80056fe:	2b00      	cmp	r3, #0
 8005700:	dc47      	bgt.n	8005792 <_dtoa_r+0xa06>
 8005702:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005704:	2b02      	cmp	r3, #2
 8005706:	dc0d      	bgt.n	8005724 <_dtoa_r+0x998>
 8005708:	e043      	b.n	8005792 <_dtoa_r+0xa06>
 800570a:	2a04      	cmp	r2, #4
 800570c:	d0c6      	beq.n	800569c <_dtoa_r+0x910>
 800570e:	0013      	movs	r3, r2
 8005710:	331c      	adds	r3, #28
 8005712:	e7bc      	b.n	800568e <_dtoa_r+0x902>
 8005714:	9b06      	ldr	r3, [sp, #24]
 8005716:	2b00      	cmp	r3, #0
 8005718:	dc35      	bgt.n	8005786 <_dtoa_r+0x9fa>
 800571a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800571c:	2b02      	cmp	r3, #2
 800571e:	dd32      	ble.n	8005786 <_dtoa_r+0x9fa>
 8005720:	9b06      	ldr	r3, [sp, #24]
 8005722:	930c      	str	r3, [sp, #48]	; 0x30
 8005724:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005726:	2b00      	cmp	r3, #0
 8005728:	d10c      	bne.n	8005744 <_dtoa_r+0x9b8>
 800572a:	0031      	movs	r1, r6
 800572c:	2205      	movs	r2, #5
 800572e:	0038      	movs	r0, r7
 8005730:	f000 f9d4 	bl	8005adc <__multadd>
 8005734:	0006      	movs	r6, r0
 8005736:	0001      	movs	r1, r0
 8005738:	9804      	ldr	r0, [sp, #16]
 800573a:	f000 fbed 	bl	8005f18 <__mcmp>
 800573e:	2800      	cmp	r0, #0
 8005740:	dd00      	ble.n	8005744 <_dtoa_r+0x9b8>
 8005742:	e59f      	b.n	8005284 <_dtoa_r+0x4f8>
 8005744:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005746:	43db      	mvns	r3, r3
 8005748:	9302      	str	r3, [sp, #8]
 800574a:	9b05      	ldr	r3, [sp, #20]
 800574c:	9307      	str	r3, [sp, #28]
 800574e:	2400      	movs	r4, #0
 8005750:	0031      	movs	r1, r6
 8005752:	0038      	movs	r0, r7
 8005754:	f000 f99e 	bl	8005a94 <_Bfree>
 8005758:	2d00      	cmp	r5, #0
 800575a:	d100      	bne.n	800575e <_dtoa_r+0x9d2>
 800575c:	e6b0      	b.n	80054c0 <_dtoa_r+0x734>
 800575e:	2c00      	cmp	r4, #0
 8005760:	d005      	beq.n	800576e <_dtoa_r+0x9e2>
 8005762:	42ac      	cmp	r4, r5
 8005764:	d003      	beq.n	800576e <_dtoa_r+0x9e2>
 8005766:	0021      	movs	r1, r4
 8005768:	0038      	movs	r0, r7
 800576a:	f000 f993 	bl	8005a94 <_Bfree>
 800576e:	0029      	movs	r1, r5
 8005770:	0038      	movs	r0, r7
 8005772:	f000 f98f 	bl	8005a94 <_Bfree>
 8005776:	e6a3      	b.n	80054c0 <_dtoa_r+0x734>
 8005778:	2600      	movs	r6, #0
 800577a:	0035      	movs	r5, r6
 800577c:	e7e2      	b.n	8005744 <_dtoa_r+0x9b8>
 800577e:	9602      	str	r6, [sp, #8]
 8005780:	9e07      	ldr	r6, [sp, #28]
 8005782:	0035      	movs	r5, r6
 8005784:	e57e      	b.n	8005284 <_dtoa_r+0x4f8>
 8005786:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005788:	2b00      	cmp	r3, #0
 800578a:	d100      	bne.n	800578e <_dtoa_r+0xa02>
 800578c:	e0c8      	b.n	8005920 <_dtoa_r+0xb94>
 800578e:	9b06      	ldr	r3, [sp, #24]
 8005790:	930c      	str	r3, [sp, #48]	; 0x30
 8005792:	2c00      	cmp	r4, #0
 8005794:	dd05      	ble.n	80057a2 <_dtoa_r+0xa16>
 8005796:	0029      	movs	r1, r5
 8005798:	0022      	movs	r2, r4
 800579a:	0038      	movs	r0, r7
 800579c:	f000 fb4c 	bl	8005e38 <__lshift>
 80057a0:	0005      	movs	r5, r0
 80057a2:	9b07      	ldr	r3, [sp, #28]
 80057a4:	0028      	movs	r0, r5
 80057a6:	2b00      	cmp	r3, #0
 80057a8:	d01f      	beq.n	80057ea <_dtoa_r+0xa5e>
 80057aa:	0038      	movs	r0, r7
 80057ac:	6869      	ldr	r1, [r5, #4]
 80057ae:	f000 f92d 	bl	8005a0c <_Balloc>
 80057b2:	1e04      	subs	r4, r0, #0
 80057b4:	d10c      	bne.n	80057d0 <_dtoa_r+0xa44>
 80057b6:	0002      	movs	r2, r0
 80057b8:	4b03      	ldr	r3, [pc, #12]	; (80057c8 <_dtoa_r+0xa3c>)
 80057ba:	4904      	ldr	r1, [pc, #16]	; (80057cc <_dtoa_r+0xa40>)
 80057bc:	f7ff fafb 	bl	8004db6 <_dtoa_r+0x2a>
 80057c0:	40240000 	.word	0x40240000
 80057c4:	00000433 	.word	0x00000433
 80057c8:	08007417 	.word	0x08007417
 80057cc:	000002ea 	.word	0x000002ea
 80057d0:	0029      	movs	r1, r5
 80057d2:	692b      	ldr	r3, [r5, #16]
 80057d4:	310c      	adds	r1, #12
 80057d6:	1c9a      	adds	r2, r3, #2
 80057d8:	0092      	lsls	r2, r2, #2
 80057da:	300c      	adds	r0, #12
 80057dc:	f000 f90d 	bl	80059fa <memcpy>
 80057e0:	2201      	movs	r2, #1
 80057e2:	0021      	movs	r1, r4
 80057e4:	0038      	movs	r0, r7
 80057e6:	f000 fb27 	bl	8005e38 <__lshift>
 80057ea:	002c      	movs	r4, r5
 80057ec:	0005      	movs	r5, r0
 80057ee:	9b05      	ldr	r3, [sp, #20]
 80057f0:	9308      	str	r3, [sp, #32]
 80057f2:	0031      	movs	r1, r6
 80057f4:	9804      	ldr	r0, [sp, #16]
 80057f6:	f7ff fa3d 	bl	8004c74 <quorem>
 80057fa:	0003      	movs	r3, r0
 80057fc:	0021      	movs	r1, r4
 80057fe:	3330      	adds	r3, #48	; 0x30
 8005800:	900e      	str	r0, [sp, #56]	; 0x38
 8005802:	9804      	ldr	r0, [sp, #16]
 8005804:	9306      	str	r3, [sp, #24]
 8005806:	f000 fb87 	bl	8005f18 <__mcmp>
 800580a:	002a      	movs	r2, r5
 800580c:	900f      	str	r0, [sp, #60]	; 0x3c
 800580e:	0031      	movs	r1, r6
 8005810:	0038      	movs	r0, r7
 8005812:	f000 fb9d 	bl	8005f50 <__mdiff>
 8005816:	68c3      	ldr	r3, [r0, #12]
 8005818:	9007      	str	r0, [sp, #28]
 800581a:	9310      	str	r3, [sp, #64]	; 0x40
 800581c:	2301      	movs	r3, #1
 800581e:	930d      	str	r3, [sp, #52]	; 0x34
 8005820:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005822:	2b00      	cmp	r3, #0
 8005824:	d104      	bne.n	8005830 <_dtoa_r+0xaa4>
 8005826:	0001      	movs	r1, r0
 8005828:	9804      	ldr	r0, [sp, #16]
 800582a:	f000 fb75 	bl	8005f18 <__mcmp>
 800582e:	900d      	str	r0, [sp, #52]	; 0x34
 8005830:	0038      	movs	r0, r7
 8005832:	9907      	ldr	r1, [sp, #28]
 8005834:	f000 f92e 	bl	8005a94 <_Bfree>
 8005838:	2301      	movs	r3, #1
 800583a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800583c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800583e:	4018      	ands	r0, r3
 8005840:	9b08      	ldr	r3, [sp, #32]
 8005842:	3301      	adds	r3, #1
 8005844:	9307      	str	r3, [sp, #28]
 8005846:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005848:	4313      	orrs	r3, r2
 800584a:	4303      	orrs	r3, r0
 800584c:	d10c      	bne.n	8005868 <_dtoa_r+0xadc>
 800584e:	9b06      	ldr	r3, [sp, #24]
 8005850:	2b39      	cmp	r3, #57	; 0x39
 8005852:	d025      	beq.n	80058a0 <_dtoa_r+0xb14>
 8005854:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005856:	2b00      	cmp	r3, #0
 8005858:	dd02      	ble.n	8005860 <_dtoa_r+0xad4>
 800585a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800585c:	3331      	adds	r3, #49	; 0x31
 800585e:	9306      	str	r3, [sp, #24]
 8005860:	9b08      	ldr	r3, [sp, #32]
 8005862:	9a06      	ldr	r2, [sp, #24]
 8005864:	701a      	strb	r2, [r3, #0]
 8005866:	e773      	b.n	8005750 <_dtoa_r+0x9c4>
 8005868:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800586a:	2b00      	cmp	r3, #0
 800586c:	db03      	blt.n	8005876 <_dtoa_r+0xaea>
 800586e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005870:	4313      	orrs	r3, r2
 8005872:	4303      	orrs	r3, r0
 8005874:	d11f      	bne.n	80058b6 <_dtoa_r+0xb2a>
 8005876:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005878:	2b00      	cmp	r3, #0
 800587a:	ddf1      	ble.n	8005860 <_dtoa_r+0xad4>
 800587c:	9904      	ldr	r1, [sp, #16]
 800587e:	2201      	movs	r2, #1
 8005880:	0038      	movs	r0, r7
 8005882:	f000 fad9 	bl	8005e38 <__lshift>
 8005886:	0031      	movs	r1, r6
 8005888:	9004      	str	r0, [sp, #16]
 800588a:	f000 fb45 	bl	8005f18 <__mcmp>
 800588e:	2800      	cmp	r0, #0
 8005890:	dc03      	bgt.n	800589a <_dtoa_r+0xb0e>
 8005892:	d1e5      	bne.n	8005860 <_dtoa_r+0xad4>
 8005894:	9b06      	ldr	r3, [sp, #24]
 8005896:	07db      	lsls	r3, r3, #31
 8005898:	d5e2      	bpl.n	8005860 <_dtoa_r+0xad4>
 800589a:	9b06      	ldr	r3, [sp, #24]
 800589c:	2b39      	cmp	r3, #57	; 0x39
 800589e:	d1dc      	bne.n	800585a <_dtoa_r+0xace>
 80058a0:	2339      	movs	r3, #57	; 0x39
 80058a2:	9a08      	ldr	r2, [sp, #32]
 80058a4:	7013      	strb	r3, [r2, #0]
 80058a6:	9b07      	ldr	r3, [sp, #28]
 80058a8:	9307      	str	r3, [sp, #28]
 80058aa:	3b01      	subs	r3, #1
 80058ac:	781a      	ldrb	r2, [r3, #0]
 80058ae:	2a39      	cmp	r2, #57	; 0x39
 80058b0:	d06c      	beq.n	800598c <_dtoa_r+0xc00>
 80058b2:	3201      	adds	r2, #1
 80058b4:	e7d6      	b.n	8005864 <_dtoa_r+0xad8>
 80058b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80058b8:	2b00      	cmp	r3, #0
 80058ba:	dd07      	ble.n	80058cc <_dtoa_r+0xb40>
 80058bc:	9b06      	ldr	r3, [sp, #24]
 80058be:	2b39      	cmp	r3, #57	; 0x39
 80058c0:	d0ee      	beq.n	80058a0 <_dtoa_r+0xb14>
 80058c2:	9b06      	ldr	r3, [sp, #24]
 80058c4:	9a08      	ldr	r2, [sp, #32]
 80058c6:	3301      	adds	r3, #1
 80058c8:	7013      	strb	r3, [r2, #0]
 80058ca:	e741      	b.n	8005750 <_dtoa_r+0x9c4>
 80058cc:	9b08      	ldr	r3, [sp, #32]
 80058ce:	9a06      	ldr	r2, [sp, #24]
 80058d0:	701a      	strb	r2, [r3, #0]
 80058d2:	2301      	movs	r3, #1
 80058d4:	9a05      	ldr	r2, [sp, #20]
 80058d6:	1a9b      	subs	r3, r3, r2
 80058d8:	9a08      	ldr	r2, [sp, #32]
 80058da:	189b      	adds	r3, r3, r2
 80058dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80058de:	429a      	cmp	r2, r3
 80058e0:	d03e      	beq.n	8005960 <_dtoa_r+0xbd4>
 80058e2:	2300      	movs	r3, #0
 80058e4:	220a      	movs	r2, #10
 80058e6:	9904      	ldr	r1, [sp, #16]
 80058e8:	0038      	movs	r0, r7
 80058ea:	f000 f8f7 	bl	8005adc <__multadd>
 80058ee:	2300      	movs	r3, #0
 80058f0:	9004      	str	r0, [sp, #16]
 80058f2:	220a      	movs	r2, #10
 80058f4:	0021      	movs	r1, r4
 80058f6:	0038      	movs	r0, r7
 80058f8:	42ac      	cmp	r4, r5
 80058fa:	d106      	bne.n	800590a <_dtoa_r+0xb7e>
 80058fc:	f000 f8ee 	bl	8005adc <__multadd>
 8005900:	0004      	movs	r4, r0
 8005902:	0005      	movs	r5, r0
 8005904:	9b07      	ldr	r3, [sp, #28]
 8005906:	9308      	str	r3, [sp, #32]
 8005908:	e773      	b.n	80057f2 <_dtoa_r+0xa66>
 800590a:	f000 f8e7 	bl	8005adc <__multadd>
 800590e:	0029      	movs	r1, r5
 8005910:	0004      	movs	r4, r0
 8005912:	2300      	movs	r3, #0
 8005914:	220a      	movs	r2, #10
 8005916:	0038      	movs	r0, r7
 8005918:	f000 f8e0 	bl	8005adc <__multadd>
 800591c:	0005      	movs	r5, r0
 800591e:	e7f1      	b.n	8005904 <_dtoa_r+0xb78>
 8005920:	9b06      	ldr	r3, [sp, #24]
 8005922:	930c      	str	r3, [sp, #48]	; 0x30
 8005924:	2400      	movs	r4, #0
 8005926:	0031      	movs	r1, r6
 8005928:	9804      	ldr	r0, [sp, #16]
 800592a:	f7ff f9a3 	bl	8004c74 <quorem>
 800592e:	9b05      	ldr	r3, [sp, #20]
 8005930:	3030      	adds	r0, #48	; 0x30
 8005932:	5518      	strb	r0, [r3, r4]
 8005934:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005936:	3401      	adds	r4, #1
 8005938:	9006      	str	r0, [sp, #24]
 800593a:	42a3      	cmp	r3, r4
 800593c:	dd07      	ble.n	800594e <_dtoa_r+0xbc2>
 800593e:	2300      	movs	r3, #0
 8005940:	220a      	movs	r2, #10
 8005942:	0038      	movs	r0, r7
 8005944:	9904      	ldr	r1, [sp, #16]
 8005946:	f000 f8c9 	bl	8005adc <__multadd>
 800594a:	9004      	str	r0, [sp, #16]
 800594c:	e7eb      	b.n	8005926 <_dtoa_r+0xb9a>
 800594e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005950:	2001      	movs	r0, #1
 8005952:	2b00      	cmp	r3, #0
 8005954:	dd00      	ble.n	8005958 <_dtoa_r+0xbcc>
 8005956:	0018      	movs	r0, r3
 8005958:	2400      	movs	r4, #0
 800595a:	9b05      	ldr	r3, [sp, #20]
 800595c:	181b      	adds	r3, r3, r0
 800595e:	9307      	str	r3, [sp, #28]
 8005960:	9904      	ldr	r1, [sp, #16]
 8005962:	2201      	movs	r2, #1
 8005964:	0038      	movs	r0, r7
 8005966:	f000 fa67 	bl	8005e38 <__lshift>
 800596a:	0031      	movs	r1, r6
 800596c:	9004      	str	r0, [sp, #16]
 800596e:	f000 fad3 	bl	8005f18 <__mcmp>
 8005972:	2800      	cmp	r0, #0
 8005974:	dc97      	bgt.n	80058a6 <_dtoa_r+0xb1a>
 8005976:	d102      	bne.n	800597e <_dtoa_r+0xbf2>
 8005978:	9b06      	ldr	r3, [sp, #24]
 800597a:	07db      	lsls	r3, r3, #31
 800597c:	d493      	bmi.n	80058a6 <_dtoa_r+0xb1a>
 800597e:	9b07      	ldr	r3, [sp, #28]
 8005980:	9307      	str	r3, [sp, #28]
 8005982:	3b01      	subs	r3, #1
 8005984:	781a      	ldrb	r2, [r3, #0]
 8005986:	2a30      	cmp	r2, #48	; 0x30
 8005988:	d0fa      	beq.n	8005980 <_dtoa_r+0xbf4>
 800598a:	e6e1      	b.n	8005750 <_dtoa_r+0x9c4>
 800598c:	9a05      	ldr	r2, [sp, #20]
 800598e:	429a      	cmp	r2, r3
 8005990:	d18a      	bne.n	80058a8 <_dtoa_r+0xb1c>
 8005992:	9b02      	ldr	r3, [sp, #8]
 8005994:	3301      	adds	r3, #1
 8005996:	9302      	str	r3, [sp, #8]
 8005998:	2331      	movs	r3, #49	; 0x31
 800599a:	e795      	b.n	80058c8 <_dtoa_r+0xb3c>
 800599c:	4b08      	ldr	r3, [pc, #32]	; (80059c0 <_dtoa_r+0xc34>)
 800599e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80059a0:	9305      	str	r3, [sp, #20]
 80059a2:	4b08      	ldr	r3, [pc, #32]	; (80059c4 <_dtoa_r+0xc38>)
 80059a4:	2a00      	cmp	r2, #0
 80059a6:	d001      	beq.n	80059ac <_dtoa_r+0xc20>
 80059a8:	f7ff fa3b 	bl	8004e22 <_dtoa_r+0x96>
 80059ac:	f7ff fa3b 	bl	8004e26 <_dtoa_r+0x9a>
 80059b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80059b2:	2b00      	cmp	r3, #0
 80059b4:	dcb6      	bgt.n	8005924 <_dtoa_r+0xb98>
 80059b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80059b8:	2b02      	cmp	r3, #2
 80059ba:	dd00      	ble.n	80059be <_dtoa_r+0xc32>
 80059bc:	e6b2      	b.n	8005724 <_dtoa_r+0x998>
 80059be:	e7b1      	b.n	8005924 <_dtoa_r+0xb98>
 80059c0:	08007394 	.word	0x08007394
 80059c4:	0800739c 	.word	0x0800739c

080059c8 <_localeconv_r>:
 80059c8:	4800      	ldr	r0, [pc, #0]	; (80059cc <_localeconv_r+0x4>)
 80059ca:	4770      	bx	lr
 80059cc:	20000168 	.word	0x20000168

080059d0 <malloc>:
 80059d0:	b510      	push	{r4, lr}
 80059d2:	4b03      	ldr	r3, [pc, #12]	; (80059e0 <malloc+0x10>)
 80059d4:	0001      	movs	r1, r0
 80059d6:	6818      	ldr	r0, [r3, #0]
 80059d8:	f000 fc0e 	bl	80061f8 <_malloc_r>
 80059dc:	bd10      	pop	{r4, pc}
 80059de:	46c0      	nop			; (mov r8, r8)
 80059e0:	20000014 	.word	0x20000014

080059e4 <memchr>:
 80059e4:	b2c9      	uxtb	r1, r1
 80059e6:	1882      	adds	r2, r0, r2
 80059e8:	4290      	cmp	r0, r2
 80059ea:	d101      	bne.n	80059f0 <memchr+0xc>
 80059ec:	2000      	movs	r0, #0
 80059ee:	4770      	bx	lr
 80059f0:	7803      	ldrb	r3, [r0, #0]
 80059f2:	428b      	cmp	r3, r1
 80059f4:	d0fb      	beq.n	80059ee <memchr+0xa>
 80059f6:	3001      	adds	r0, #1
 80059f8:	e7f6      	b.n	80059e8 <memchr+0x4>

080059fa <memcpy>:
 80059fa:	2300      	movs	r3, #0
 80059fc:	b510      	push	{r4, lr}
 80059fe:	429a      	cmp	r2, r3
 8005a00:	d100      	bne.n	8005a04 <memcpy+0xa>
 8005a02:	bd10      	pop	{r4, pc}
 8005a04:	5ccc      	ldrb	r4, [r1, r3]
 8005a06:	54c4      	strb	r4, [r0, r3]
 8005a08:	3301      	adds	r3, #1
 8005a0a:	e7f8      	b.n	80059fe <memcpy+0x4>

08005a0c <_Balloc>:
 8005a0c:	b570      	push	{r4, r5, r6, lr}
 8005a0e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005a10:	0006      	movs	r6, r0
 8005a12:	000c      	movs	r4, r1
 8005a14:	2d00      	cmp	r5, #0
 8005a16:	d10e      	bne.n	8005a36 <_Balloc+0x2a>
 8005a18:	2010      	movs	r0, #16
 8005a1a:	f7ff ffd9 	bl	80059d0 <malloc>
 8005a1e:	1e02      	subs	r2, r0, #0
 8005a20:	6270      	str	r0, [r6, #36]	; 0x24
 8005a22:	d104      	bne.n	8005a2e <_Balloc+0x22>
 8005a24:	2166      	movs	r1, #102	; 0x66
 8005a26:	4b19      	ldr	r3, [pc, #100]	; (8005a8c <_Balloc+0x80>)
 8005a28:	4819      	ldr	r0, [pc, #100]	; (8005a90 <_Balloc+0x84>)
 8005a2a:	f000 fdb7 	bl	800659c <__assert_func>
 8005a2e:	6045      	str	r5, [r0, #4]
 8005a30:	6085      	str	r5, [r0, #8]
 8005a32:	6005      	str	r5, [r0, #0]
 8005a34:	60c5      	str	r5, [r0, #12]
 8005a36:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8005a38:	68eb      	ldr	r3, [r5, #12]
 8005a3a:	2b00      	cmp	r3, #0
 8005a3c:	d013      	beq.n	8005a66 <_Balloc+0x5a>
 8005a3e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005a40:	00a2      	lsls	r2, r4, #2
 8005a42:	68db      	ldr	r3, [r3, #12]
 8005a44:	189b      	adds	r3, r3, r2
 8005a46:	6818      	ldr	r0, [r3, #0]
 8005a48:	2800      	cmp	r0, #0
 8005a4a:	d118      	bne.n	8005a7e <_Balloc+0x72>
 8005a4c:	2101      	movs	r1, #1
 8005a4e:	000d      	movs	r5, r1
 8005a50:	40a5      	lsls	r5, r4
 8005a52:	1d6a      	adds	r2, r5, #5
 8005a54:	0030      	movs	r0, r6
 8005a56:	0092      	lsls	r2, r2, #2
 8005a58:	f000 fb76 	bl	8006148 <_calloc_r>
 8005a5c:	2800      	cmp	r0, #0
 8005a5e:	d00c      	beq.n	8005a7a <_Balloc+0x6e>
 8005a60:	6044      	str	r4, [r0, #4]
 8005a62:	6085      	str	r5, [r0, #8]
 8005a64:	e00d      	b.n	8005a82 <_Balloc+0x76>
 8005a66:	2221      	movs	r2, #33	; 0x21
 8005a68:	2104      	movs	r1, #4
 8005a6a:	0030      	movs	r0, r6
 8005a6c:	f000 fb6c 	bl	8006148 <_calloc_r>
 8005a70:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005a72:	60e8      	str	r0, [r5, #12]
 8005a74:	68db      	ldr	r3, [r3, #12]
 8005a76:	2b00      	cmp	r3, #0
 8005a78:	d1e1      	bne.n	8005a3e <_Balloc+0x32>
 8005a7a:	2000      	movs	r0, #0
 8005a7c:	bd70      	pop	{r4, r5, r6, pc}
 8005a7e:	6802      	ldr	r2, [r0, #0]
 8005a80:	601a      	str	r2, [r3, #0]
 8005a82:	2300      	movs	r3, #0
 8005a84:	6103      	str	r3, [r0, #16]
 8005a86:	60c3      	str	r3, [r0, #12]
 8005a88:	e7f8      	b.n	8005a7c <_Balloc+0x70>
 8005a8a:	46c0      	nop			; (mov r8, r8)
 8005a8c:	080073a1 	.word	0x080073a1
 8005a90:	08007428 	.word	0x08007428

08005a94 <_Bfree>:
 8005a94:	b570      	push	{r4, r5, r6, lr}
 8005a96:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005a98:	0005      	movs	r5, r0
 8005a9a:	000c      	movs	r4, r1
 8005a9c:	2e00      	cmp	r6, #0
 8005a9e:	d10e      	bne.n	8005abe <_Bfree+0x2a>
 8005aa0:	2010      	movs	r0, #16
 8005aa2:	f7ff ff95 	bl	80059d0 <malloc>
 8005aa6:	1e02      	subs	r2, r0, #0
 8005aa8:	6268      	str	r0, [r5, #36]	; 0x24
 8005aaa:	d104      	bne.n	8005ab6 <_Bfree+0x22>
 8005aac:	218a      	movs	r1, #138	; 0x8a
 8005aae:	4b09      	ldr	r3, [pc, #36]	; (8005ad4 <_Bfree+0x40>)
 8005ab0:	4809      	ldr	r0, [pc, #36]	; (8005ad8 <_Bfree+0x44>)
 8005ab2:	f000 fd73 	bl	800659c <__assert_func>
 8005ab6:	6046      	str	r6, [r0, #4]
 8005ab8:	6086      	str	r6, [r0, #8]
 8005aba:	6006      	str	r6, [r0, #0]
 8005abc:	60c6      	str	r6, [r0, #12]
 8005abe:	2c00      	cmp	r4, #0
 8005ac0:	d007      	beq.n	8005ad2 <_Bfree+0x3e>
 8005ac2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005ac4:	6862      	ldr	r2, [r4, #4]
 8005ac6:	68db      	ldr	r3, [r3, #12]
 8005ac8:	0092      	lsls	r2, r2, #2
 8005aca:	189b      	adds	r3, r3, r2
 8005acc:	681a      	ldr	r2, [r3, #0]
 8005ace:	6022      	str	r2, [r4, #0]
 8005ad0:	601c      	str	r4, [r3, #0]
 8005ad2:	bd70      	pop	{r4, r5, r6, pc}
 8005ad4:	080073a1 	.word	0x080073a1
 8005ad8:	08007428 	.word	0x08007428

08005adc <__multadd>:
 8005adc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005ade:	000e      	movs	r6, r1
 8005ae0:	9001      	str	r0, [sp, #4]
 8005ae2:	000c      	movs	r4, r1
 8005ae4:	001d      	movs	r5, r3
 8005ae6:	2000      	movs	r0, #0
 8005ae8:	690f      	ldr	r7, [r1, #16]
 8005aea:	3614      	adds	r6, #20
 8005aec:	6833      	ldr	r3, [r6, #0]
 8005aee:	3001      	adds	r0, #1
 8005af0:	b299      	uxth	r1, r3
 8005af2:	4351      	muls	r1, r2
 8005af4:	0c1b      	lsrs	r3, r3, #16
 8005af6:	4353      	muls	r3, r2
 8005af8:	1949      	adds	r1, r1, r5
 8005afa:	0c0d      	lsrs	r5, r1, #16
 8005afc:	195b      	adds	r3, r3, r5
 8005afe:	0c1d      	lsrs	r5, r3, #16
 8005b00:	b289      	uxth	r1, r1
 8005b02:	041b      	lsls	r3, r3, #16
 8005b04:	185b      	adds	r3, r3, r1
 8005b06:	c608      	stmia	r6!, {r3}
 8005b08:	4287      	cmp	r7, r0
 8005b0a:	dcef      	bgt.n	8005aec <__multadd+0x10>
 8005b0c:	2d00      	cmp	r5, #0
 8005b0e:	d022      	beq.n	8005b56 <__multadd+0x7a>
 8005b10:	68a3      	ldr	r3, [r4, #8]
 8005b12:	42bb      	cmp	r3, r7
 8005b14:	dc19      	bgt.n	8005b4a <__multadd+0x6e>
 8005b16:	6863      	ldr	r3, [r4, #4]
 8005b18:	9801      	ldr	r0, [sp, #4]
 8005b1a:	1c59      	adds	r1, r3, #1
 8005b1c:	f7ff ff76 	bl	8005a0c <_Balloc>
 8005b20:	1e06      	subs	r6, r0, #0
 8005b22:	d105      	bne.n	8005b30 <__multadd+0x54>
 8005b24:	0002      	movs	r2, r0
 8005b26:	21b5      	movs	r1, #181	; 0xb5
 8005b28:	4b0c      	ldr	r3, [pc, #48]	; (8005b5c <__multadd+0x80>)
 8005b2a:	480d      	ldr	r0, [pc, #52]	; (8005b60 <__multadd+0x84>)
 8005b2c:	f000 fd36 	bl	800659c <__assert_func>
 8005b30:	0021      	movs	r1, r4
 8005b32:	6923      	ldr	r3, [r4, #16]
 8005b34:	310c      	adds	r1, #12
 8005b36:	1c9a      	adds	r2, r3, #2
 8005b38:	0092      	lsls	r2, r2, #2
 8005b3a:	300c      	adds	r0, #12
 8005b3c:	f7ff ff5d 	bl	80059fa <memcpy>
 8005b40:	0021      	movs	r1, r4
 8005b42:	9801      	ldr	r0, [sp, #4]
 8005b44:	f7ff ffa6 	bl	8005a94 <_Bfree>
 8005b48:	0034      	movs	r4, r6
 8005b4a:	1d3b      	adds	r3, r7, #4
 8005b4c:	009b      	lsls	r3, r3, #2
 8005b4e:	18e3      	adds	r3, r4, r3
 8005b50:	605d      	str	r5, [r3, #4]
 8005b52:	1c7b      	adds	r3, r7, #1
 8005b54:	6123      	str	r3, [r4, #16]
 8005b56:	0020      	movs	r0, r4
 8005b58:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005b5a:	46c0      	nop			; (mov r8, r8)
 8005b5c:	08007417 	.word	0x08007417
 8005b60:	08007428 	.word	0x08007428

08005b64 <__hi0bits>:
 8005b64:	0003      	movs	r3, r0
 8005b66:	0c02      	lsrs	r2, r0, #16
 8005b68:	2000      	movs	r0, #0
 8005b6a:	4282      	cmp	r2, r0
 8005b6c:	d101      	bne.n	8005b72 <__hi0bits+0xe>
 8005b6e:	041b      	lsls	r3, r3, #16
 8005b70:	3010      	adds	r0, #16
 8005b72:	0e1a      	lsrs	r2, r3, #24
 8005b74:	d101      	bne.n	8005b7a <__hi0bits+0x16>
 8005b76:	3008      	adds	r0, #8
 8005b78:	021b      	lsls	r3, r3, #8
 8005b7a:	0f1a      	lsrs	r2, r3, #28
 8005b7c:	d101      	bne.n	8005b82 <__hi0bits+0x1e>
 8005b7e:	3004      	adds	r0, #4
 8005b80:	011b      	lsls	r3, r3, #4
 8005b82:	0f9a      	lsrs	r2, r3, #30
 8005b84:	d101      	bne.n	8005b8a <__hi0bits+0x26>
 8005b86:	3002      	adds	r0, #2
 8005b88:	009b      	lsls	r3, r3, #2
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	db03      	blt.n	8005b96 <__hi0bits+0x32>
 8005b8e:	3001      	adds	r0, #1
 8005b90:	005b      	lsls	r3, r3, #1
 8005b92:	d400      	bmi.n	8005b96 <__hi0bits+0x32>
 8005b94:	2020      	movs	r0, #32
 8005b96:	4770      	bx	lr

08005b98 <__lo0bits>:
 8005b98:	6803      	ldr	r3, [r0, #0]
 8005b9a:	0002      	movs	r2, r0
 8005b9c:	2107      	movs	r1, #7
 8005b9e:	0018      	movs	r0, r3
 8005ba0:	4008      	ands	r0, r1
 8005ba2:	420b      	tst	r3, r1
 8005ba4:	d00d      	beq.n	8005bc2 <__lo0bits+0x2a>
 8005ba6:	3906      	subs	r1, #6
 8005ba8:	2000      	movs	r0, #0
 8005baa:	420b      	tst	r3, r1
 8005bac:	d105      	bne.n	8005bba <__lo0bits+0x22>
 8005bae:	3002      	adds	r0, #2
 8005bb0:	4203      	tst	r3, r0
 8005bb2:	d003      	beq.n	8005bbc <__lo0bits+0x24>
 8005bb4:	40cb      	lsrs	r3, r1
 8005bb6:	0008      	movs	r0, r1
 8005bb8:	6013      	str	r3, [r2, #0]
 8005bba:	4770      	bx	lr
 8005bbc:	089b      	lsrs	r3, r3, #2
 8005bbe:	6013      	str	r3, [r2, #0]
 8005bc0:	e7fb      	b.n	8005bba <__lo0bits+0x22>
 8005bc2:	b299      	uxth	r1, r3
 8005bc4:	2900      	cmp	r1, #0
 8005bc6:	d101      	bne.n	8005bcc <__lo0bits+0x34>
 8005bc8:	2010      	movs	r0, #16
 8005bca:	0c1b      	lsrs	r3, r3, #16
 8005bcc:	b2d9      	uxtb	r1, r3
 8005bce:	2900      	cmp	r1, #0
 8005bd0:	d101      	bne.n	8005bd6 <__lo0bits+0x3e>
 8005bd2:	3008      	adds	r0, #8
 8005bd4:	0a1b      	lsrs	r3, r3, #8
 8005bd6:	0719      	lsls	r1, r3, #28
 8005bd8:	d101      	bne.n	8005bde <__lo0bits+0x46>
 8005bda:	3004      	adds	r0, #4
 8005bdc:	091b      	lsrs	r3, r3, #4
 8005bde:	0799      	lsls	r1, r3, #30
 8005be0:	d101      	bne.n	8005be6 <__lo0bits+0x4e>
 8005be2:	3002      	adds	r0, #2
 8005be4:	089b      	lsrs	r3, r3, #2
 8005be6:	07d9      	lsls	r1, r3, #31
 8005be8:	d4e9      	bmi.n	8005bbe <__lo0bits+0x26>
 8005bea:	3001      	adds	r0, #1
 8005bec:	085b      	lsrs	r3, r3, #1
 8005bee:	d1e6      	bne.n	8005bbe <__lo0bits+0x26>
 8005bf0:	2020      	movs	r0, #32
 8005bf2:	e7e2      	b.n	8005bba <__lo0bits+0x22>

08005bf4 <__i2b>:
 8005bf4:	b510      	push	{r4, lr}
 8005bf6:	000c      	movs	r4, r1
 8005bf8:	2101      	movs	r1, #1
 8005bfa:	f7ff ff07 	bl	8005a0c <_Balloc>
 8005bfe:	2800      	cmp	r0, #0
 8005c00:	d106      	bne.n	8005c10 <__i2b+0x1c>
 8005c02:	21a0      	movs	r1, #160	; 0xa0
 8005c04:	0002      	movs	r2, r0
 8005c06:	4b04      	ldr	r3, [pc, #16]	; (8005c18 <__i2b+0x24>)
 8005c08:	4804      	ldr	r0, [pc, #16]	; (8005c1c <__i2b+0x28>)
 8005c0a:	0049      	lsls	r1, r1, #1
 8005c0c:	f000 fcc6 	bl	800659c <__assert_func>
 8005c10:	2301      	movs	r3, #1
 8005c12:	6144      	str	r4, [r0, #20]
 8005c14:	6103      	str	r3, [r0, #16]
 8005c16:	bd10      	pop	{r4, pc}
 8005c18:	08007417 	.word	0x08007417
 8005c1c:	08007428 	.word	0x08007428

08005c20 <__multiply>:
 8005c20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c22:	690b      	ldr	r3, [r1, #16]
 8005c24:	0014      	movs	r4, r2
 8005c26:	6912      	ldr	r2, [r2, #16]
 8005c28:	000d      	movs	r5, r1
 8005c2a:	b089      	sub	sp, #36	; 0x24
 8005c2c:	4293      	cmp	r3, r2
 8005c2e:	da01      	bge.n	8005c34 <__multiply+0x14>
 8005c30:	0025      	movs	r5, r4
 8005c32:	000c      	movs	r4, r1
 8005c34:	692f      	ldr	r7, [r5, #16]
 8005c36:	6926      	ldr	r6, [r4, #16]
 8005c38:	6869      	ldr	r1, [r5, #4]
 8005c3a:	19bb      	adds	r3, r7, r6
 8005c3c:	9302      	str	r3, [sp, #8]
 8005c3e:	68ab      	ldr	r3, [r5, #8]
 8005c40:	19ba      	adds	r2, r7, r6
 8005c42:	4293      	cmp	r3, r2
 8005c44:	da00      	bge.n	8005c48 <__multiply+0x28>
 8005c46:	3101      	adds	r1, #1
 8005c48:	f7ff fee0 	bl	8005a0c <_Balloc>
 8005c4c:	9001      	str	r0, [sp, #4]
 8005c4e:	2800      	cmp	r0, #0
 8005c50:	d106      	bne.n	8005c60 <__multiply+0x40>
 8005c52:	215e      	movs	r1, #94	; 0x5e
 8005c54:	0002      	movs	r2, r0
 8005c56:	4b48      	ldr	r3, [pc, #288]	; (8005d78 <__multiply+0x158>)
 8005c58:	4848      	ldr	r0, [pc, #288]	; (8005d7c <__multiply+0x15c>)
 8005c5a:	31ff      	adds	r1, #255	; 0xff
 8005c5c:	f000 fc9e 	bl	800659c <__assert_func>
 8005c60:	9b01      	ldr	r3, [sp, #4]
 8005c62:	2200      	movs	r2, #0
 8005c64:	3314      	adds	r3, #20
 8005c66:	469c      	mov	ip, r3
 8005c68:	19bb      	adds	r3, r7, r6
 8005c6a:	009b      	lsls	r3, r3, #2
 8005c6c:	4463      	add	r3, ip
 8005c6e:	9303      	str	r3, [sp, #12]
 8005c70:	4663      	mov	r3, ip
 8005c72:	9903      	ldr	r1, [sp, #12]
 8005c74:	428b      	cmp	r3, r1
 8005c76:	d32c      	bcc.n	8005cd2 <__multiply+0xb2>
 8005c78:	002b      	movs	r3, r5
 8005c7a:	0022      	movs	r2, r4
 8005c7c:	3314      	adds	r3, #20
 8005c7e:	00bf      	lsls	r7, r7, #2
 8005c80:	3214      	adds	r2, #20
 8005c82:	9306      	str	r3, [sp, #24]
 8005c84:	00b6      	lsls	r6, r6, #2
 8005c86:	19db      	adds	r3, r3, r7
 8005c88:	9304      	str	r3, [sp, #16]
 8005c8a:	1993      	adds	r3, r2, r6
 8005c8c:	9307      	str	r3, [sp, #28]
 8005c8e:	2304      	movs	r3, #4
 8005c90:	9305      	str	r3, [sp, #20]
 8005c92:	002b      	movs	r3, r5
 8005c94:	9904      	ldr	r1, [sp, #16]
 8005c96:	3315      	adds	r3, #21
 8005c98:	9200      	str	r2, [sp, #0]
 8005c9a:	4299      	cmp	r1, r3
 8005c9c:	d305      	bcc.n	8005caa <__multiply+0x8a>
 8005c9e:	1b4b      	subs	r3, r1, r5
 8005ca0:	3b15      	subs	r3, #21
 8005ca2:	089b      	lsrs	r3, r3, #2
 8005ca4:	3301      	adds	r3, #1
 8005ca6:	009b      	lsls	r3, r3, #2
 8005ca8:	9305      	str	r3, [sp, #20]
 8005caa:	9b07      	ldr	r3, [sp, #28]
 8005cac:	9a00      	ldr	r2, [sp, #0]
 8005cae:	429a      	cmp	r2, r3
 8005cb0:	d311      	bcc.n	8005cd6 <__multiply+0xb6>
 8005cb2:	9b02      	ldr	r3, [sp, #8]
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	dd06      	ble.n	8005cc6 <__multiply+0xa6>
 8005cb8:	9b03      	ldr	r3, [sp, #12]
 8005cba:	3b04      	subs	r3, #4
 8005cbc:	9303      	str	r3, [sp, #12]
 8005cbe:	681b      	ldr	r3, [r3, #0]
 8005cc0:	9300      	str	r3, [sp, #0]
 8005cc2:	2b00      	cmp	r3, #0
 8005cc4:	d054      	beq.n	8005d70 <__multiply+0x150>
 8005cc6:	9b01      	ldr	r3, [sp, #4]
 8005cc8:	9a02      	ldr	r2, [sp, #8]
 8005cca:	0018      	movs	r0, r3
 8005ccc:	611a      	str	r2, [r3, #16]
 8005cce:	b009      	add	sp, #36	; 0x24
 8005cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005cd2:	c304      	stmia	r3!, {r2}
 8005cd4:	e7cd      	b.n	8005c72 <__multiply+0x52>
 8005cd6:	9b00      	ldr	r3, [sp, #0]
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	b298      	uxth	r0, r3
 8005cdc:	2800      	cmp	r0, #0
 8005cde:	d01c      	beq.n	8005d1a <__multiply+0xfa>
 8005ce0:	4667      	mov	r7, ip
 8005ce2:	2400      	movs	r4, #0
 8005ce4:	9e06      	ldr	r6, [sp, #24]
 8005ce6:	ce02      	ldmia	r6!, {r1}
 8005ce8:	683a      	ldr	r2, [r7, #0]
 8005cea:	b28b      	uxth	r3, r1
 8005cec:	4343      	muls	r3, r0
 8005cee:	0c09      	lsrs	r1, r1, #16
 8005cf0:	4341      	muls	r1, r0
 8005cf2:	b292      	uxth	r2, r2
 8005cf4:	189b      	adds	r3, r3, r2
 8005cf6:	191b      	adds	r3, r3, r4
 8005cf8:	000c      	movs	r4, r1
 8005cfa:	683a      	ldr	r2, [r7, #0]
 8005cfc:	0c11      	lsrs	r1, r2, #16
 8005cfe:	1861      	adds	r1, r4, r1
 8005d00:	0c1c      	lsrs	r4, r3, #16
 8005d02:	1909      	adds	r1, r1, r4
 8005d04:	0c0c      	lsrs	r4, r1, #16
 8005d06:	b29b      	uxth	r3, r3
 8005d08:	0409      	lsls	r1, r1, #16
 8005d0a:	430b      	orrs	r3, r1
 8005d0c:	c708      	stmia	r7!, {r3}
 8005d0e:	9b04      	ldr	r3, [sp, #16]
 8005d10:	42b3      	cmp	r3, r6
 8005d12:	d8e8      	bhi.n	8005ce6 <__multiply+0xc6>
 8005d14:	4663      	mov	r3, ip
 8005d16:	9a05      	ldr	r2, [sp, #20]
 8005d18:	509c      	str	r4, [r3, r2]
 8005d1a:	9b00      	ldr	r3, [sp, #0]
 8005d1c:	681b      	ldr	r3, [r3, #0]
 8005d1e:	0c1e      	lsrs	r6, r3, #16
 8005d20:	d020      	beq.n	8005d64 <__multiply+0x144>
 8005d22:	4663      	mov	r3, ip
 8005d24:	002c      	movs	r4, r5
 8005d26:	4660      	mov	r0, ip
 8005d28:	2700      	movs	r7, #0
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	3414      	adds	r4, #20
 8005d2e:	6822      	ldr	r2, [r4, #0]
 8005d30:	b29b      	uxth	r3, r3
 8005d32:	b291      	uxth	r1, r2
 8005d34:	4371      	muls	r1, r6
 8005d36:	6802      	ldr	r2, [r0, #0]
 8005d38:	0c12      	lsrs	r2, r2, #16
 8005d3a:	1889      	adds	r1, r1, r2
 8005d3c:	19cf      	adds	r7, r1, r7
 8005d3e:	0439      	lsls	r1, r7, #16
 8005d40:	430b      	orrs	r3, r1
 8005d42:	6003      	str	r3, [r0, #0]
 8005d44:	cc02      	ldmia	r4!, {r1}
 8005d46:	6843      	ldr	r3, [r0, #4]
 8005d48:	0c09      	lsrs	r1, r1, #16
 8005d4a:	4371      	muls	r1, r6
 8005d4c:	b29b      	uxth	r3, r3
 8005d4e:	0c3f      	lsrs	r7, r7, #16
 8005d50:	18cb      	adds	r3, r1, r3
 8005d52:	9a04      	ldr	r2, [sp, #16]
 8005d54:	19db      	adds	r3, r3, r7
 8005d56:	0c1f      	lsrs	r7, r3, #16
 8005d58:	3004      	adds	r0, #4
 8005d5a:	42a2      	cmp	r2, r4
 8005d5c:	d8e7      	bhi.n	8005d2e <__multiply+0x10e>
 8005d5e:	4662      	mov	r2, ip
 8005d60:	9905      	ldr	r1, [sp, #20]
 8005d62:	5053      	str	r3, [r2, r1]
 8005d64:	9b00      	ldr	r3, [sp, #0]
 8005d66:	3304      	adds	r3, #4
 8005d68:	9300      	str	r3, [sp, #0]
 8005d6a:	2304      	movs	r3, #4
 8005d6c:	449c      	add	ip, r3
 8005d6e:	e79c      	b.n	8005caa <__multiply+0x8a>
 8005d70:	9b02      	ldr	r3, [sp, #8]
 8005d72:	3b01      	subs	r3, #1
 8005d74:	9302      	str	r3, [sp, #8]
 8005d76:	e79c      	b.n	8005cb2 <__multiply+0x92>
 8005d78:	08007417 	.word	0x08007417
 8005d7c:	08007428 	.word	0x08007428

08005d80 <__pow5mult>:
 8005d80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005d82:	2303      	movs	r3, #3
 8005d84:	0015      	movs	r5, r2
 8005d86:	0007      	movs	r7, r0
 8005d88:	000e      	movs	r6, r1
 8005d8a:	401a      	ands	r2, r3
 8005d8c:	421d      	tst	r5, r3
 8005d8e:	d008      	beq.n	8005da2 <__pow5mult+0x22>
 8005d90:	4925      	ldr	r1, [pc, #148]	; (8005e28 <__pow5mult+0xa8>)
 8005d92:	3a01      	subs	r2, #1
 8005d94:	0092      	lsls	r2, r2, #2
 8005d96:	5852      	ldr	r2, [r2, r1]
 8005d98:	2300      	movs	r3, #0
 8005d9a:	0031      	movs	r1, r6
 8005d9c:	f7ff fe9e 	bl	8005adc <__multadd>
 8005da0:	0006      	movs	r6, r0
 8005da2:	10ad      	asrs	r5, r5, #2
 8005da4:	d03d      	beq.n	8005e22 <__pow5mult+0xa2>
 8005da6:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8005da8:	2c00      	cmp	r4, #0
 8005daa:	d10f      	bne.n	8005dcc <__pow5mult+0x4c>
 8005dac:	2010      	movs	r0, #16
 8005dae:	f7ff fe0f 	bl	80059d0 <malloc>
 8005db2:	1e02      	subs	r2, r0, #0
 8005db4:	6278      	str	r0, [r7, #36]	; 0x24
 8005db6:	d105      	bne.n	8005dc4 <__pow5mult+0x44>
 8005db8:	21d7      	movs	r1, #215	; 0xd7
 8005dba:	4b1c      	ldr	r3, [pc, #112]	; (8005e2c <__pow5mult+0xac>)
 8005dbc:	481c      	ldr	r0, [pc, #112]	; (8005e30 <__pow5mult+0xb0>)
 8005dbe:	0049      	lsls	r1, r1, #1
 8005dc0:	f000 fbec 	bl	800659c <__assert_func>
 8005dc4:	6044      	str	r4, [r0, #4]
 8005dc6:	6084      	str	r4, [r0, #8]
 8005dc8:	6004      	str	r4, [r0, #0]
 8005dca:	60c4      	str	r4, [r0, #12]
 8005dcc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005dce:	689c      	ldr	r4, [r3, #8]
 8005dd0:	9301      	str	r3, [sp, #4]
 8005dd2:	2c00      	cmp	r4, #0
 8005dd4:	d108      	bne.n	8005de8 <__pow5mult+0x68>
 8005dd6:	0038      	movs	r0, r7
 8005dd8:	4916      	ldr	r1, [pc, #88]	; (8005e34 <__pow5mult+0xb4>)
 8005dda:	f7ff ff0b 	bl	8005bf4 <__i2b>
 8005dde:	9b01      	ldr	r3, [sp, #4]
 8005de0:	0004      	movs	r4, r0
 8005de2:	6098      	str	r0, [r3, #8]
 8005de4:	2300      	movs	r3, #0
 8005de6:	6003      	str	r3, [r0, #0]
 8005de8:	2301      	movs	r3, #1
 8005dea:	421d      	tst	r5, r3
 8005dec:	d00a      	beq.n	8005e04 <__pow5mult+0x84>
 8005dee:	0031      	movs	r1, r6
 8005df0:	0022      	movs	r2, r4
 8005df2:	0038      	movs	r0, r7
 8005df4:	f7ff ff14 	bl	8005c20 <__multiply>
 8005df8:	0031      	movs	r1, r6
 8005dfa:	9001      	str	r0, [sp, #4]
 8005dfc:	0038      	movs	r0, r7
 8005dfe:	f7ff fe49 	bl	8005a94 <_Bfree>
 8005e02:	9e01      	ldr	r6, [sp, #4]
 8005e04:	106d      	asrs	r5, r5, #1
 8005e06:	d00c      	beq.n	8005e22 <__pow5mult+0xa2>
 8005e08:	6820      	ldr	r0, [r4, #0]
 8005e0a:	2800      	cmp	r0, #0
 8005e0c:	d107      	bne.n	8005e1e <__pow5mult+0x9e>
 8005e0e:	0022      	movs	r2, r4
 8005e10:	0021      	movs	r1, r4
 8005e12:	0038      	movs	r0, r7
 8005e14:	f7ff ff04 	bl	8005c20 <__multiply>
 8005e18:	2300      	movs	r3, #0
 8005e1a:	6020      	str	r0, [r4, #0]
 8005e1c:	6003      	str	r3, [r0, #0]
 8005e1e:	0004      	movs	r4, r0
 8005e20:	e7e2      	b.n	8005de8 <__pow5mult+0x68>
 8005e22:	0030      	movs	r0, r6
 8005e24:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005e26:	46c0      	nop			; (mov r8, r8)
 8005e28:	08007578 	.word	0x08007578
 8005e2c:	080073a1 	.word	0x080073a1
 8005e30:	08007428 	.word	0x08007428
 8005e34:	00000271 	.word	0x00000271

08005e38 <__lshift>:
 8005e38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e3a:	000c      	movs	r4, r1
 8005e3c:	0017      	movs	r7, r2
 8005e3e:	6923      	ldr	r3, [r4, #16]
 8005e40:	1155      	asrs	r5, r2, #5
 8005e42:	b087      	sub	sp, #28
 8005e44:	18eb      	adds	r3, r5, r3
 8005e46:	9302      	str	r3, [sp, #8]
 8005e48:	3301      	adds	r3, #1
 8005e4a:	9301      	str	r3, [sp, #4]
 8005e4c:	6849      	ldr	r1, [r1, #4]
 8005e4e:	68a3      	ldr	r3, [r4, #8]
 8005e50:	9004      	str	r0, [sp, #16]
 8005e52:	9a01      	ldr	r2, [sp, #4]
 8005e54:	4293      	cmp	r3, r2
 8005e56:	db11      	blt.n	8005e7c <__lshift+0x44>
 8005e58:	9804      	ldr	r0, [sp, #16]
 8005e5a:	f7ff fdd7 	bl	8005a0c <_Balloc>
 8005e5e:	0002      	movs	r2, r0
 8005e60:	2300      	movs	r3, #0
 8005e62:	3214      	adds	r2, #20
 8005e64:	0006      	movs	r6, r0
 8005e66:	0011      	movs	r1, r2
 8005e68:	9203      	str	r2, [sp, #12]
 8005e6a:	4298      	cmp	r0, r3
 8005e6c:	d10d      	bne.n	8005e8a <__lshift+0x52>
 8005e6e:	21da      	movs	r1, #218	; 0xda
 8005e70:	0002      	movs	r2, r0
 8005e72:	4b27      	ldr	r3, [pc, #156]	; (8005f10 <__lshift+0xd8>)
 8005e74:	4827      	ldr	r0, [pc, #156]	; (8005f14 <__lshift+0xdc>)
 8005e76:	31ff      	adds	r1, #255	; 0xff
 8005e78:	f000 fb90 	bl	800659c <__assert_func>
 8005e7c:	3101      	adds	r1, #1
 8005e7e:	005b      	lsls	r3, r3, #1
 8005e80:	e7e7      	b.n	8005e52 <__lshift+0x1a>
 8005e82:	2200      	movs	r2, #0
 8005e84:	0098      	lsls	r0, r3, #2
 8005e86:	500a      	str	r2, [r1, r0]
 8005e88:	3301      	adds	r3, #1
 8005e8a:	42ab      	cmp	r3, r5
 8005e8c:	dbf9      	blt.n	8005e82 <__lshift+0x4a>
 8005e8e:	43eb      	mvns	r3, r5
 8005e90:	17db      	asrs	r3, r3, #31
 8005e92:	401d      	ands	r5, r3
 8005e94:	9b03      	ldr	r3, [sp, #12]
 8005e96:	00ad      	lsls	r5, r5, #2
 8005e98:	211f      	movs	r1, #31
 8005e9a:	0038      	movs	r0, r7
 8005e9c:	195d      	adds	r5, r3, r5
 8005e9e:	0023      	movs	r3, r4
 8005ea0:	6922      	ldr	r2, [r4, #16]
 8005ea2:	3314      	adds	r3, #20
 8005ea4:	0092      	lsls	r2, r2, #2
 8005ea6:	4008      	ands	r0, r1
 8005ea8:	4684      	mov	ip, r0
 8005eaa:	189a      	adds	r2, r3, r2
 8005eac:	420f      	tst	r7, r1
 8005eae:	d02a      	beq.n	8005f06 <__lshift+0xce>
 8005eb0:	3101      	adds	r1, #1
 8005eb2:	1a09      	subs	r1, r1, r0
 8005eb4:	9105      	str	r1, [sp, #20]
 8005eb6:	2100      	movs	r1, #0
 8005eb8:	9503      	str	r5, [sp, #12]
 8005eba:	4667      	mov	r7, ip
 8005ebc:	6818      	ldr	r0, [r3, #0]
 8005ebe:	40b8      	lsls	r0, r7
 8005ec0:	4301      	orrs	r1, r0
 8005ec2:	9803      	ldr	r0, [sp, #12]
 8005ec4:	c002      	stmia	r0!, {r1}
 8005ec6:	cb02      	ldmia	r3!, {r1}
 8005ec8:	9003      	str	r0, [sp, #12]
 8005eca:	9805      	ldr	r0, [sp, #20]
 8005ecc:	40c1      	lsrs	r1, r0
 8005ece:	429a      	cmp	r2, r3
 8005ed0:	d8f3      	bhi.n	8005eba <__lshift+0x82>
 8005ed2:	0020      	movs	r0, r4
 8005ed4:	3015      	adds	r0, #21
 8005ed6:	2304      	movs	r3, #4
 8005ed8:	4282      	cmp	r2, r0
 8005eda:	d304      	bcc.n	8005ee6 <__lshift+0xae>
 8005edc:	1b13      	subs	r3, r2, r4
 8005ede:	3b15      	subs	r3, #21
 8005ee0:	089b      	lsrs	r3, r3, #2
 8005ee2:	3301      	adds	r3, #1
 8005ee4:	009b      	lsls	r3, r3, #2
 8005ee6:	50e9      	str	r1, [r5, r3]
 8005ee8:	2900      	cmp	r1, #0
 8005eea:	d002      	beq.n	8005ef2 <__lshift+0xba>
 8005eec:	9b02      	ldr	r3, [sp, #8]
 8005eee:	3302      	adds	r3, #2
 8005ef0:	9301      	str	r3, [sp, #4]
 8005ef2:	9b01      	ldr	r3, [sp, #4]
 8005ef4:	9804      	ldr	r0, [sp, #16]
 8005ef6:	3b01      	subs	r3, #1
 8005ef8:	0021      	movs	r1, r4
 8005efa:	6133      	str	r3, [r6, #16]
 8005efc:	f7ff fdca 	bl	8005a94 <_Bfree>
 8005f00:	0030      	movs	r0, r6
 8005f02:	b007      	add	sp, #28
 8005f04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f06:	cb02      	ldmia	r3!, {r1}
 8005f08:	c502      	stmia	r5!, {r1}
 8005f0a:	429a      	cmp	r2, r3
 8005f0c:	d8fb      	bhi.n	8005f06 <__lshift+0xce>
 8005f0e:	e7f0      	b.n	8005ef2 <__lshift+0xba>
 8005f10:	08007417 	.word	0x08007417
 8005f14:	08007428 	.word	0x08007428

08005f18 <__mcmp>:
 8005f18:	6902      	ldr	r2, [r0, #16]
 8005f1a:	690b      	ldr	r3, [r1, #16]
 8005f1c:	b530      	push	{r4, r5, lr}
 8005f1e:	0004      	movs	r4, r0
 8005f20:	1ad0      	subs	r0, r2, r3
 8005f22:	429a      	cmp	r2, r3
 8005f24:	d10d      	bne.n	8005f42 <__mcmp+0x2a>
 8005f26:	009b      	lsls	r3, r3, #2
 8005f28:	3414      	adds	r4, #20
 8005f2a:	3114      	adds	r1, #20
 8005f2c:	18e2      	adds	r2, r4, r3
 8005f2e:	18c9      	adds	r1, r1, r3
 8005f30:	3a04      	subs	r2, #4
 8005f32:	3904      	subs	r1, #4
 8005f34:	6815      	ldr	r5, [r2, #0]
 8005f36:	680b      	ldr	r3, [r1, #0]
 8005f38:	429d      	cmp	r5, r3
 8005f3a:	d003      	beq.n	8005f44 <__mcmp+0x2c>
 8005f3c:	2001      	movs	r0, #1
 8005f3e:	429d      	cmp	r5, r3
 8005f40:	d303      	bcc.n	8005f4a <__mcmp+0x32>
 8005f42:	bd30      	pop	{r4, r5, pc}
 8005f44:	4294      	cmp	r4, r2
 8005f46:	d3f3      	bcc.n	8005f30 <__mcmp+0x18>
 8005f48:	e7fb      	b.n	8005f42 <__mcmp+0x2a>
 8005f4a:	4240      	negs	r0, r0
 8005f4c:	e7f9      	b.n	8005f42 <__mcmp+0x2a>
	...

08005f50 <__mdiff>:
 8005f50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f52:	000e      	movs	r6, r1
 8005f54:	0007      	movs	r7, r0
 8005f56:	0011      	movs	r1, r2
 8005f58:	0030      	movs	r0, r6
 8005f5a:	b087      	sub	sp, #28
 8005f5c:	0014      	movs	r4, r2
 8005f5e:	f7ff ffdb 	bl	8005f18 <__mcmp>
 8005f62:	1e05      	subs	r5, r0, #0
 8005f64:	d110      	bne.n	8005f88 <__mdiff+0x38>
 8005f66:	0001      	movs	r1, r0
 8005f68:	0038      	movs	r0, r7
 8005f6a:	f7ff fd4f 	bl	8005a0c <_Balloc>
 8005f6e:	1e02      	subs	r2, r0, #0
 8005f70:	d104      	bne.n	8005f7c <__mdiff+0x2c>
 8005f72:	4b40      	ldr	r3, [pc, #256]	; (8006074 <__mdiff+0x124>)
 8005f74:	4940      	ldr	r1, [pc, #256]	; (8006078 <__mdiff+0x128>)
 8005f76:	4841      	ldr	r0, [pc, #260]	; (800607c <__mdiff+0x12c>)
 8005f78:	f000 fb10 	bl	800659c <__assert_func>
 8005f7c:	2301      	movs	r3, #1
 8005f7e:	6145      	str	r5, [r0, #20]
 8005f80:	6103      	str	r3, [r0, #16]
 8005f82:	0010      	movs	r0, r2
 8005f84:	b007      	add	sp, #28
 8005f86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f88:	2301      	movs	r3, #1
 8005f8a:	9301      	str	r3, [sp, #4]
 8005f8c:	2800      	cmp	r0, #0
 8005f8e:	db04      	blt.n	8005f9a <__mdiff+0x4a>
 8005f90:	0023      	movs	r3, r4
 8005f92:	0034      	movs	r4, r6
 8005f94:	001e      	movs	r6, r3
 8005f96:	2300      	movs	r3, #0
 8005f98:	9301      	str	r3, [sp, #4]
 8005f9a:	0038      	movs	r0, r7
 8005f9c:	6861      	ldr	r1, [r4, #4]
 8005f9e:	f7ff fd35 	bl	8005a0c <_Balloc>
 8005fa2:	1e02      	subs	r2, r0, #0
 8005fa4:	d103      	bne.n	8005fae <__mdiff+0x5e>
 8005fa6:	2190      	movs	r1, #144	; 0x90
 8005fa8:	4b32      	ldr	r3, [pc, #200]	; (8006074 <__mdiff+0x124>)
 8005faa:	0089      	lsls	r1, r1, #2
 8005fac:	e7e3      	b.n	8005f76 <__mdiff+0x26>
 8005fae:	9b01      	ldr	r3, [sp, #4]
 8005fb0:	2700      	movs	r7, #0
 8005fb2:	60c3      	str	r3, [r0, #12]
 8005fb4:	6920      	ldr	r0, [r4, #16]
 8005fb6:	3414      	adds	r4, #20
 8005fb8:	9401      	str	r4, [sp, #4]
 8005fba:	9b01      	ldr	r3, [sp, #4]
 8005fbc:	0084      	lsls	r4, r0, #2
 8005fbe:	191b      	adds	r3, r3, r4
 8005fc0:	0034      	movs	r4, r6
 8005fc2:	9302      	str	r3, [sp, #8]
 8005fc4:	6933      	ldr	r3, [r6, #16]
 8005fc6:	3414      	adds	r4, #20
 8005fc8:	0099      	lsls	r1, r3, #2
 8005fca:	1863      	adds	r3, r4, r1
 8005fcc:	9303      	str	r3, [sp, #12]
 8005fce:	0013      	movs	r3, r2
 8005fd0:	3314      	adds	r3, #20
 8005fd2:	469c      	mov	ip, r3
 8005fd4:	9305      	str	r3, [sp, #20]
 8005fd6:	9b01      	ldr	r3, [sp, #4]
 8005fd8:	9304      	str	r3, [sp, #16]
 8005fda:	9b04      	ldr	r3, [sp, #16]
 8005fdc:	cc02      	ldmia	r4!, {r1}
 8005fde:	cb20      	ldmia	r3!, {r5}
 8005fe0:	9304      	str	r3, [sp, #16]
 8005fe2:	b2ab      	uxth	r3, r5
 8005fe4:	19df      	adds	r7, r3, r7
 8005fe6:	b28b      	uxth	r3, r1
 8005fe8:	1afb      	subs	r3, r7, r3
 8005fea:	0c2d      	lsrs	r5, r5, #16
 8005fec:	0c09      	lsrs	r1, r1, #16
 8005fee:	1a69      	subs	r1, r5, r1
 8005ff0:	141d      	asrs	r5, r3, #16
 8005ff2:	1949      	adds	r1, r1, r5
 8005ff4:	140f      	asrs	r7, r1, #16
 8005ff6:	b29b      	uxth	r3, r3
 8005ff8:	0409      	lsls	r1, r1, #16
 8005ffa:	430b      	orrs	r3, r1
 8005ffc:	4661      	mov	r1, ip
 8005ffe:	c108      	stmia	r1!, {r3}
 8006000:	9b03      	ldr	r3, [sp, #12]
 8006002:	468c      	mov	ip, r1
 8006004:	42a3      	cmp	r3, r4
 8006006:	d8e8      	bhi.n	8005fda <__mdiff+0x8a>
 8006008:	0031      	movs	r1, r6
 800600a:	9c03      	ldr	r4, [sp, #12]
 800600c:	3115      	adds	r1, #21
 800600e:	2304      	movs	r3, #4
 8006010:	428c      	cmp	r4, r1
 8006012:	d304      	bcc.n	800601e <__mdiff+0xce>
 8006014:	1ba3      	subs	r3, r4, r6
 8006016:	3b15      	subs	r3, #21
 8006018:	089b      	lsrs	r3, r3, #2
 800601a:	3301      	adds	r3, #1
 800601c:	009b      	lsls	r3, r3, #2
 800601e:	9901      	ldr	r1, [sp, #4]
 8006020:	18cc      	adds	r4, r1, r3
 8006022:	9905      	ldr	r1, [sp, #20]
 8006024:	0026      	movs	r6, r4
 8006026:	18cb      	adds	r3, r1, r3
 8006028:	469c      	mov	ip, r3
 800602a:	9902      	ldr	r1, [sp, #8]
 800602c:	428e      	cmp	r6, r1
 800602e:	d310      	bcc.n	8006052 <__mdiff+0x102>
 8006030:	9e02      	ldr	r6, [sp, #8]
 8006032:	1ee5      	subs	r5, r4, #3
 8006034:	2100      	movs	r1, #0
 8006036:	42ae      	cmp	r6, r5
 8006038:	d304      	bcc.n	8006044 <__mdiff+0xf4>
 800603a:	0031      	movs	r1, r6
 800603c:	3103      	adds	r1, #3
 800603e:	1b09      	subs	r1, r1, r4
 8006040:	0889      	lsrs	r1, r1, #2
 8006042:	0089      	lsls	r1, r1, #2
 8006044:	185b      	adds	r3, r3, r1
 8006046:	3b04      	subs	r3, #4
 8006048:	6819      	ldr	r1, [r3, #0]
 800604a:	2900      	cmp	r1, #0
 800604c:	d00f      	beq.n	800606e <__mdiff+0x11e>
 800604e:	6110      	str	r0, [r2, #16]
 8006050:	e797      	b.n	8005f82 <__mdiff+0x32>
 8006052:	ce02      	ldmia	r6!, {r1}
 8006054:	b28d      	uxth	r5, r1
 8006056:	19ed      	adds	r5, r5, r7
 8006058:	0c0f      	lsrs	r7, r1, #16
 800605a:	1429      	asrs	r1, r5, #16
 800605c:	1879      	adds	r1, r7, r1
 800605e:	140f      	asrs	r7, r1, #16
 8006060:	b2ad      	uxth	r5, r5
 8006062:	0409      	lsls	r1, r1, #16
 8006064:	430d      	orrs	r5, r1
 8006066:	4661      	mov	r1, ip
 8006068:	c120      	stmia	r1!, {r5}
 800606a:	468c      	mov	ip, r1
 800606c:	e7dd      	b.n	800602a <__mdiff+0xda>
 800606e:	3801      	subs	r0, #1
 8006070:	e7e9      	b.n	8006046 <__mdiff+0xf6>
 8006072:	46c0      	nop			; (mov r8, r8)
 8006074:	08007417 	.word	0x08007417
 8006078:	00000232 	.word	0x00000232
 800607c:	08007428 	.word	0x08007428

08006080 <__d2b>:
 8006080:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006082:	2101      	movs	r1, #1
 8006084:	0014      	movs	r4, r2
 8006086:	001e      	movs	r6, r3
 8006088:	9f08      	ldr	r7, [sp, #32]
 800608a:	f7ff fcbf 	bl	8005a0c <_Balloc>
 800608e:	1e05      	subs	r5, r0, #0
 8006090:	d105      	bne.n	800609e <__d2b+0x1e>
 8006092:	0002      	movs	r2, r0
 8006094:	4b26      	ldr	r3, [pc, #152]	; (8006130 <__d2b+0xb0>)
 8006096:	4927      	ldr	r1, [pc, #156]	; (8006134 <__d2b+0xb4>)
 8006098:	4827      	ldr	r0, [pc, #156]	; (8006138 <__d2b+0xb8>)
 800609a:	f000 fa7f 	bl	800659c <__assert_func>
 800609e:	0333      	lsls	r3, r6, #12
 80060a0:	0076      	lsls	r6, r6, #1
 80060a2:	0b1b      	lsrs	r3, r3, #12
 80060a4:	0d76      	lsrs	r6, r6, #21
 80060a6:	d124      	bne.n	80060f2 <__d2b+0x72>
 80060a8:	9301      	str	r3, [sp, #4]
 80060aa:	2c00      	cmp	r4, #0
 80060ac:	d027      	beq.n	80060fe <__d2b+0x7e>
 80060ae:	4668      	mov	r0, sp
 80060b0:	9400      	str	r4, [sp, #0]
 80060b2:	f7ff fd71 	bl	8005b98 <__lo0bits>
 80060b6:	9c00      	ldr	r4, [sp, #0]
 80060b8:	2800      	cmp	r0, #0
 80060ba:	d01e      	beq.n	80060fa <__d2b+0x7a>
 80060bc:	9b01      	ldr	r3, [sp, #4]
 80060be:	2120      	movs	r1, #32
 80060c0:	001a      	movs	r2, r3
 80060c2:	1a09      	subs	r1, r1, r0
 80060c4:	408a      	lsls	r2, r1
 80060c6:	40c3      	lsrs	r3, r0
 80060c8:	4322      	orrs	r2, r4
 80060ca:	616a      	str	r2, [r5, #20]
 80060cc:	9301      	str	r3, [sp, #4]
 80060ce:	9c01      	ldr	r4, [sp, #4]
 80060d0:	61ac      	str	r4, [r5, #24]
 80060d2:	1e63      	subs	r3, r4, #1
 80060d4:	419c      	sbcs	r4, r3
 80060d6:	3401      	adds	r4, #1
 80060d8:	612c      	str	r4, [r5, #16]
 80060da:	2e00      	cmp	r6, #0
 80060dc:	d018      	beq.n	8006110 <__d2b+0x90>
 80060de:	4b17      	ldr	r3, [pc, #92]	; (800613c <__d2b+0xbc>)
 80060e0:	18f6      	adds	r6, r6, r3
 80060e2:	2335      	movs	r3, #53	; 0x35
 80060e4:	1836      	adds	r6, r6, r0
 80060e6:	1a18      	subs	r0, r3, r0
 80060e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80060ea:	603e      	str	r6, [r7, #0]
 80060ec:	6018      	str	r0, [r3, #0]
 80060ee:	0028      	movs	r0, r5
 80060f0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80060f2:	2280      	movs	r2, #128	; 0x80
 80060f4:	0352      	lsls	r2, r2, #13
 80060f6:	4313      	orrs	r3, r2
 80060f8:	e7d6      	b.n	80060a8 <__d2b+0x28>
 80060fa:	616c      	str	r4, [r5, #20]
 80060fc:	e7e7      	b.n	80060ce <__d2b+0x4e>
 80060fe:	a801      	add	r0, sp, #4
 8006100:	f7ff fd4a 	bl	8005b98 <__lo0bits>
 8006104:	2401      	movs	r4, #1
 8006106:	9b01      	ldr	r3, [sp, #4]
 8006108:	612c      	str	r4, [r5, #16]
 800610a:	616b      	str	r3, [r5, #20]
 800610c:	3020      	adds	r0, #32
 800610e:	e7e4      	b.n	80060da <__d2b+0x5a>
 8006110:	4b0b      	ldr	r3, [pc, #44]	; (8006140 <__d2b+0xc0>)
 8006112:	18c0      	adds	r0, r0, r3
 8006114:	4b0b      	ldr	r3, [pc, #44]	; (8006144 <__d2b+0xc4>)
 8006116:	6038      	str	r0, [r7, #0]
 8006118:	18e3      	adds	r3, r4, r3
 800611a:	009b      	lsls	r3, r3, #2
 800611c:	18eb      	adds	r3, r5, r3
 800611e:	6958      	ldr	r0, [r3, #20]
 8006120:	f7ff fd20 	bl	8005b64 <__hi0bits>
 8006124:	0164      	lsls	r4, r4, #5
 8006126:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006128:	1a24      	subs	r4, r4, r0
 800612a:	601c      	str	r4, [r3, #0]
 800612c:	e7df      	b.n	80060ee <__d2b+0x6e>
 800612e:	46c0      	nop			; (mov r8, r8)
 8006130:	08007417 	.word	0x08007417
 8006134:	0000030a 	.word	0x0000030a
 8006138:	08007428 	.word	0x08007428
 800613c:	fffffbcd 	.word	0xfffffbcd
 8006140:	fffffbce 	.word	0xfffffbce
 8006144:	3fffffff 	.word	0x3fffffff

08006148 <_calloc_r>:
 8006148:	434a      	muls	r2, r1
 800614a:	b570      	push	{r4, r5, r6, lr}
 800614c:	0011      	movs	r1, r2
 800614e:	0015      	movs	r5, r2
 8006150:	f000 f852 	bl	80061f8 <_malloc_r>
 8006154:	1e04      	subs	r4, r0, #0
 8006156:	d003      	beq.n	8006160 <_calloc_r+0x18>
 8006158:	002a      	movs	r2, r5
 800615a:	2100      	movs	r1, #0
 800615c:	f7fe f8e8 	bl	8004330 <memset>
 8006160:	0020      	movs	r0, r4
 8006162:	bd70      	pop	{r4, r5, r6, pc}

08006164 <_free_r>:
 8006164:	b570      	push	{r4, r5, r6, lr}
 8006166:	0005      	movs	r5, r0
 8006168:	2900      	cmp	r1, #0
 800616a:	d010      	beq.n	800618e <_free_r+0x2a>
 800616c:	1f0c      	subs	r4, r1, #4
 800616e:	6823      	ldr	r3, [r4, #0]
 8006170:	2b00      	cmp	r3, #0
 8006172:	da00      	bge.n	8006176 <_free_r+0x12>
 8006174:	18e4      	adds	r4, r4, r3
 8006176:	0028      	movs	r0, r5
 8006178:	f000 fa64 	bl	8006644 <__malloc_lock>
 800617c:	4a1d      	ldr	r2, [pc, #116]	; (80061f4 <_free_r+0x90>)
 800617e:	6813      	ldr	r3, [r2, #0]
 8006180:	2b00      	cmp	r3, #0
 8006182:	d105      	bne.n	8006190 <_free_r+0x2c>
 8006184:	6063      	str	r3, [r4, #4]
 8006186:	6014      	str	r4, [r2, #0]
 8006188:	0028      	movs	r0, r5
 800618a:	f000 fa63 	bl	8006654 <__malloc_unlock>
 800618e:	bd70      	pop	{r4, r5, r6, pc}
 8006190:	42a3      	cmp	r3, r4
 8006192:	d908      	bls.n	80061a6 <_free_r+0x42>
 8006194:	6821      	ldr	r1, [r4, #0]
 8006196:	1860      	adds	r0, r4, r1
 8006198:	4283      	cmp	r3, r0
 800619a:	d1f3      	bne.n	8006184 <_free_r+0x20>
 800619c:	6818      	ldr	r0, [r3, #0]
 800619e:	685b      	ldr	r3, [r3, #4]
 80061a0:	1841      	adds	r1, r0, r1
 80061a2:	6021      	str	r1, [r4, #0]
 80061a4:	e7ee      	b.n	8006184 <_free_r+0x20>
 80061a6:	001a      	movs	r2, r3
 80061a8:	685b      	ldr	r3, [r3, #4]
 80061aa:	2b00      	cmp	r3, #0
 80061ac:	d001      	beq.n	80061b2 <_free_r+0x4e>
 80061ae:	42a3      	cmp	r3, r4
 80061b0:	d9f9      	bls.n	80061a6 <_free_r+0x42>
 80061b2:	6811      	ldr	r1, [r2, #0]
 80061b4:	1850      	adds	r0, r2, r1
 80061b6:	42a0      	cmp	r0, r4
 80061b8:	d10b      	bne.n	80061d2 <_free_r+0x6e>
 80061ba:	6820      	ldr	r0, [r4, #0]
 80061bc:	1809      	adds	r1, r1, r0
 80061be:	1850      	adds	r0, r2, r1
 80061c0:	6011      	str	r1, [r2, #0]
 80061c2:	4283      	cmp	r3, r0
 80061c4:	d1e0      	bne.n	8006188 <_free_r+0x24>
 80061c6:	6818      	ldr	r0, [r3, #0]
 80061c8:	685b      	ldr	r3, [r3, #4]
 80061ca:	1841      	adds	r1, r0, r1
 80061cc:	6011      	str	r1, [r2, #0]
 80061ce:	6053      	str	r3, [r2, #4]
 80061d0:	e7da      	b.n	8006188 <_free_r+0x24>
 80061d2:	42a0      	cmp	r0, r4
 80061d4:	d902      	bls.n	80061dc <_free_r+0x78>
 80061d6:	230c      	movs	r3, #12
 80061d8:	602b      	str	r3, [r5, #0]
 80061da:	e7d5      	b.n	8006188 <_free_r+0x24>
 80061dc:	6821      	ldr	r1, [r4, #0]
 80061de:	1860      	adds	r0, r4, r1
 80061e0:	4283      	cmp	r3, r0
 80061e2:	d103      	bne.n	80061ec <_free_r+0x88>
 80061e4:	6818      	ldr	r0, [r3, #0]
 80061e6:	685b      	ldr	r3, [r3, #4]
 80061e8:	1841      	adds	r1, r0, r1
 80061ea:	6021      	str	r1, [r4, #0]
 80061ec:	6063      	str	r3, [r4, #4]
 80061ee:	6054      	str	r4, [r2, #4]
 80061f0:	e7ca      	b.n	8006188 <_free_r+0x24>
 80061f2:	46c0      	nop			; (mov r8, r8)
 80061f4:	20000204 	.word	0x20000204

080061f8 <_malloc_r>:
 80061f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061fa:	2303      	movs	r3, #3
 80061fc:	1ccd      	adds	r5, r1, #3
 80061fe:	439d      	bics	r5, r3
 8006200:	3508      	adds	r5, #8
 8006202:	0006      	movs	r6, r0
 8006204:	2d0c      	cmp	r5, #12
 8006206:	d21f      	bcs.n	8006248 <_malloc_r+0x50>
 8006208:	250c      	movs	r5, #12
 800620a:	42a9      	cmp	r1, r5
 800620c:	d81e      	bhi.n	800624c <_malloc_r+0x54>
 800620e:	0030      	movs	r0, r6
 8006210:	f000 fa18 	bl	8006644 <__malloc_lock>
 8006214:	4925      	ldr	r1, [pc, #148]	; (80062ac <_malloc_r+0xb4>)
 8006216:	680a      	ldr	r2, [r1, #0]
 8006218:	0014      	movs	r4, r2
 800621a:	2c00      	cmp	r4, #0
 800621c:	d11a      	bne.n	8006254 <_malloc_r+0x5c>
 800621e:	4f24      	ldr	r7, [pc, #144]	; (80062b0 <_malloc_r+0xb8>)
 8006220:	683b      	ldr	r3, [r7, #0]
 8006222:	2b00      	cmp	r3, #0
 8006224:	d104      	bne.n	8006230 <_malloc_r+0x38>
 8006226:	0021      	movs	r1, r4
 8006228:	0030      	movs	r0, r6
 800622a:	f000 f9a5 	bl	8006578 <_sbrk_r>
 800622e:	6038      	str	r0, [r7, #0]
 8006230:	0029      	movs	r1, r5
 8006232:	0030      	movs	r0, r6
 8006234:	f000 f9a0 	bl	8006578 <_sbrk_r>
 8006238:	1c43      	adds	r3, r0, #1
 800623a:	d12b      	bne.n	8006294 <_malloc_r+0x9c>
 800623c:	230c      	movs	r3, #12
 800623e:	0030      	movs	r0, r6
 8006240:	6033      	str	r3, [r6, #0]
 8006242:	f000 fa07 	bl	8006654 <__malloc_unlock>
 8006246:	e003      	b.n	8006250 <_malloc_r+0x58>
 8006248:	2d00      	cmp	r5, #0
 800624a:	dade      	bge.n	800620a <_malloc_r+0x12>
 800624c:	230c      	movs	r3, #12
 800624e:	6033      	str	r3, [r6, #0]
 8006250:	2000      	movs	r0, #0
 8006252:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006254:	6823      	ldr	r3, [r4, #0]
 8006256:	1b5b      	subs	r3, r3, r5
 8006258:	d419      	bmi.n	800628e <_malloc_r+0x96>
 800625a:	2b0b      	cmp	r3, #11
 800625c:	d903      	bls.n	8006266 <_malloc_r+0x6e>
 800625e:	6023      	str	r3, [r4, #0]
 8006260:	18e4      	adds	r4, r4, r3
 8006262:	6025      	str	r5, [r4, #0]
 8006264:	e003      	b.n	800626e <_malloc_r+0x76>
 8006266:	6863      	ldr	r3, [r4, #4]
 8006268:	42a2      	cmp	r2, r4
 800626a:	d10e      	bne.n	800628a <_malloc_r+0x92>
 800626c:	600b      	str	r3, [r1, #0]
 800626e:	0030      	movs	r0, r6
 8006270:	f000 f9f0 	bl	8006654 <__malloc_unlock>
 8006274:	0020      	movs	r0, r4
 8006276:	2207      	movs	r2, #7
 8006278:	300b      	adds	r0, #11
 800627a:	1d23      	adds	r3, r4, #4
 800627c:	4390      	bics	r0, r2
 800627e:	1ac2      	subs	r2, r0, r3
 8006280:	4298      	cmp	r0, r3
 8006282:	d0e6      	beq.n	8006252 <_malloc_r+0x5a>
 8006284:	1a1b      	subs	r3, r3, r0
 8006286:	50a3      	str	r3, [r4, r2]
 8006288:	e7e3      	b.n	8006252 <_malloc_r+0x5a>
 800628a:	6053      	str	r3, [r2, #4]
 800628c:	e7ef      	b.n	800626e <_malloc_r+0x76>
 800628e:	0022      	movs	r2, r4
 8006290:	6864      	ldr	r4, [r4, #4]
 8006292:	e7c2      	b.n	800621a <_malloc_r+0x22>
 8006294:	2303      	movs	r3, #3
 8006296:	1cc4      	adds	r4, r0, #3
 8006298:	439c      	bics	r4, r3
 800629a:	42a0      	cmp	r0, r4
 800629c:	d0e1      	beq.n	8006262 <_malloc_r+0x6a>
 800629e:	1a21      	subs	r1, r4, r0
 80062a0:	0030      	movs	r0, r6
 80062a2:	f000 f969 	bl	8006578 <_sbrk_r>
 80062a6:	1c43      	adds	r3, r0, #1
 80062a8:	d1db      	bne.n	8006262 <_malloc_r+0x6a>
 80062aa:	e7c7      	b.n	800623c <_malloc_r+0x44>
 80062ac:	20000204 	.word	0x20000204
 80062b0:	20000208 	.word	0x20000208

080062b4 <__ssputs_r>:
 80062b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80062b6:	688e      	ldr	r6, [r1, #8]
 80062b8:	b085      	sub	sp, #20
 80062ba:	0007      	movs	r7, r0
 80062bc:	000c      	movs	r4, r1
 80062be:	9203      	str	r2, [sp, #12]
 80062c0:	9301      	str	r3, [sp, #4]
 80062c2:	429e      	cmp	r6, r3
 80062c4:	d83c      	bhi.n	8006340 <__ssputs_r+0x8c>
 80062c6:	2390      	movs	r3, #144	; 0x90
 80062c8:	898a      	ldrh	r2, [r1, #12]
 80062ca:	00db      	lsls	r3, r3, #3
 80062cc:	421a      	tst	r2, r3
 80062ce:	d034      	beq.n	800633a <__ssputs_r+0x86>
 80062d0:	2503      	movs	r5, #3
 80062d2:	6909      	ldr	r1, [r1, #16]
 80062d4:	6823      	ldr	r3, [r4, #0]
 80062d6:	1a5b      	subs	r3, r3, r1
 80062d8:	9302      	str	r3, [sp, #8]
 80062da:	6963      	ldr	r3, [r4, #20]
 80062dc:	9802      	ldr	r0, [sp, #8]
 80062de:	435d      	muls	r5, r3
 80062e0:	0feb      	lsrs	r3, r5, #31
 80062e2:	195d      	adds	r5, r3, r5
 80062e4:	9b01      	ldr	r3, [sp, #4]
 80062e6:	106d      	asrs	r5, r5, #1
 80062e8:	3301      	adds	r3, #1
 80062ea:	181b      	adds	r3, r3, r0
 80062ec:	42ab      	cmp	r3, r5
 80062ee:	d900      	bls.n	80062f2 <__ssputs_r+0x3e>
 80062f0:	001d      	movs	r5, r3
 80062f2:	0553      	lsls	r3, r2, #21
 80062f4:	d532      	bpl.n	800635c <__ssputs_r+0xa8>
 80062f6:	0029      	movs	r1, r5
 80062f8:	0038      	movs	r0, r7
 80062fa:	f7ff ff7d 	bl	80061f8 <_malloc_r>
 80062fe:	1e06      	subs	r6, r0, #0
 8006300:	d109      	bne.n	8006316 <__ssputs_r+0x62>
 8006302:	230c      	movs	r3, #12
 8006304:	603b      	str	r3, [r7, #0]
 8006306:	2340      	movs	r3, #64	; 0x40
 8006308:	2001      	movs	r0, #1
 800630a:	89a2      	ldrh	r2, [r4, #12]
 800630c:	4240      	negs	r0, r0
 800630e:	4313      	orrs	r3, r2
 8006310:	81a3      	strh	r3, [r4, #12]
 8006312:	b005      	add	sp, #20
 8006314:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006316:	9a02      	ldr	r2, [sp, #8]
 8006318:	6921      	ldr	r1, [r4, #16]
 800631a:	f7ff fb6e 	bl	80059fa <memcpy>
 800631e:	89a3      	ldrh	r3, [r4, #12]
 8006320:	4a14      	ldr	r2, [pc, #80]	; (8006374 <__ssputs_r+0xc0>)
 8006322:	401a      	ands	r2, r3
 8006324:	2380      	movs	r3, #128	; 0x80
 8006326:	4313      	orrs	r3, r2
 8006328:	81a3      	strh	r3, [r4, #12]
 800632a:	9b02      	ldr	r3, [sp, #8]
 800632c:	6126      	str	r6, [r4, #16]
 800632e:	18f6      	adds	r6, r6, r3
 8006330:	6026      	str	r6, [r4, #0]
 8006332:	6165      	str	r5, [r4, #20]
 8006334:	9e01      	ldr	r6, [sp, #4]
 8006336:	1aed      	subs	r5, r5, r3
 8006338:	60a5      	str	r5, [r4, #8]
 800633a:	9b01      	ldr	r3, [sp, #4]
 800633c:	429e      	cmp	r6, r3
 800633e:	d900      	bls.n	8006342 <__ssputs_r+0x8e>
 8006340:	9e01      	ldr	r6, [sp, #4]
 8006342:	0032      	movs	r2, r6
 8006344:	9903      	ldr	r1, [sp, #12]
 8006346:	6820      	ldr	r0, [r4, #0]
 8006348:	f000 f968 	bl	800661c <memmove>
 800634c:	68a3      	ldr	r3, [r4, #8]
 800634e:	2000      	movs	r0, #0
 8006350:	1b9b      	subs	r3, r3, r6
 8006352:	60a3      	str	r3, [r4, #8]
 8006354:	6823      	ldr	r3, [r4, #0]
 8006356:	199e      	adds	r6, r3, r6
 8006358:	6026      	str	r6, [r4, #0]
 800635a:	e7da      	b.n	8006312 <__ssputs_r+0x5e>
 800635c:	002a      	movs	r2, r5
 800635e:	0038      	movs	r0, r7
 8006360:	f000 f980 	bl	8006664 <_realloc_r>
 8006364:	1e06      	subs	r6, r0, #0
 8006366:	d1e0      	bne.n	800632a <__ssputs_r+0x76>
 8006368:	0038      	movs	r0, r7
 800636a:	6921      	ldr	r1, [r4, #16]
 800636c:	f7ff fefa 	bl	8006164 <_free_r>
 8006370:	e7c7      	b.n	8006302 <__ssputs_r+0x4e>
 8006372:	46c0      	nop			; (mov r8, r8)
 8006374:	fffffb7f 	.word	0xfffffb7f

08006378 <_svfiprintf_r>:
 8006378:	b5f0      	push	{r4, r5, r6, r7, lr}
 800637a:	b0a1      	sub	sp, #132	; 0x84
 800637c:	9003      	str	r0, [sp, #12]
 800637e:	001d      	movs	r5, r3
 8006380:	898b      	ldrh	r3, [r1, #12]
 8006382:	000f      	movs	r7, r1
 8006384:	0016      	movs	r6, r2
 8006386:	061b      	lsls	r3, r3, #24
 8006388:	d511      	bpl.n	80063ae <_svfiprintf_r+0x36>
 800638a:	690b      	ldr	r3, [r1, #16]
 800638c:	2b00      	cmp	r3, #0
 800638e:	d10e      	bne.n	80063ae <_svfiprintf_r+0x36>
 8006390:	2140      	movs	r1, #64	; 0x40
 8006392:	f7ff ff31 	bl	80061f8 <_malloc_r>
 8006396:	6038      	str	r0, [r7, #0]
 8006398:	6138      	str	r0, [r7, #16]
 800639a:	2800      	cmp	r0, #0
 800639c:	d105      	bne.n	80063aa <_svfiprintf_r+0x32>
 800639e:	230c      	movs	r3, #12
 80063a0:	9a03      	ldr	r2, [sp, #12]
 80063a2:	3801      	subs	r0, #1
 80063a4:	6013      	str	r3, [r2, #0]
 80063a6:	b021      	add	sp, #132	; 0x84
 80063a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063aa:	2340      	movs	r3, #64	; 0x40
 80063ac:	617b      	str	r3, [r7, #20]
 80063ae:	2300      	movs	r3, #0
 80063b0:	ac08      	add	r4, sp, #32
 80063b2:	6163      	str	r3, [r4, #20]
 80063b4:	3320      	adds	r3, #32
 80063b6:	7663      	strb	r3, [r4, #25]
 80063b8:	3310      	adds	r3, #16
 80063ba:	76a3      	strb	r3, [r4, #26]
 80063bc:	9507      	str	r5, [sp, #28]
 80063be:	0035      	movs	r5, r6
 80063c0:	782b      	ldrb	r3, [r5, #0]
 80063c2:	2b00      	cmp	r3, #0
 80063c4:	d001      	beq.n	80063ca <_svfiprintf_r+0x52>
 80063c6:	2b25      	cmp	r3, #37	; 0x25
 80063c8:	d147      	bne.n	800645a <_svfiprintf_r+0xe2>
 80063ca:	1bab      	subs	r3, r5, r6
 80063cc:	9305      	str	r3, [sp, #20]
 80063ce:	42b5      	cmp	r5, r6
 80063d0:	d00c      	beq.n	80063ec <_svfiprintf_r+0x74>
 80063d2:	0032      	movs	r2, r6
 80063d4:	0039      	movs	r1, r7
 80063d6:	9803      	ldr	r0, [sp, #12]
 80063d8:	f7ff ff6c 	bl	80062b4 <__ssputs_r>
 80063dc:	1c43      	adds	r3, r0, #1
 80063de:	d100      	bne.n	80063e2 <_svfiprintf_r+0x6a>
 80063e0:	e0ae      	b.n	8006540 <_svfiprintf_r+0x1c8>
 80063e2:	6962      	ldr	r2, [r4, #20]
 80063e4:	9b05      	ldr	r3, [sp, #20]
 80063e6:	4694      	mov	ip, r2
 80063e8:	4463      	add	r3, ip
 80063ea:	6163      	str	r3, [r4, #20]
 80063ec:	782b      	ldrb	r3, [r5, #0]
 80063ee:	2b00      	cmp	r3, #0
 80063f0:	d100      	bne.n	80063f4 <_svfiprintf_r+0x7c>
 80063f2:	e0a5      	b.n	8006540 <_svfiprintf_r+0x1c8>
 80063f4:	2201      	movs	r2, #1
 80063f6:	2300      	movs	r3, #0
 80063f8:	4252      	negs	r2, r2
 80063fa:	6062      	str	r2, [r4, #4]
 80063fc:	a904      	add	r1, sp, #16
 80063fe:	3254      	adds	r2, #84	; 0x54
 8006400:	1852      	adds	r2, r2, r1
 8006402:	1c6e      	adds	r6, r5, #1
 8006404:	6023      	str	r3, [r4, #0]
 8006406:	60e3      	str	r3, [r4, #12]
 8006408:	60a3      	str	r3, [r4, #8]
 800640a:	7013      	strb	r3, [r2, #0]
 800640c:	65a3      	str	r3, [r4, #88]	; 0x58
 800640e:	2205      	movs	r2, #5
 8006410:	7831      	ldrb	r1, [r6, #0]
 8006412:	4854      	ldr	r0, [pc, #336]	; (8006564 <_svfiprintf_r+0x1ec>)
 8006414:	f7ff fae6 	bl	80059e4 <memchr>
 8006418:	1c75      	adds	r5, r6, #1
 800641a:	2800      	cmp	r0, #0
 800641c:	d11f      	bne.n	800645e <_svfiprintf_r+0xe6>
 800641e:	6822      	ldr	r2, [r4, #0]
 8006420:	06d3      	lsls	r3, r2, #27
 8006422:	d504      	bpl.n	800642e <_svfiprintf_r+0xb6>
 8006424:	2353      	movs	r3, #83	; 0x53
 8006426:	a904      	add	r1, sp, #16
 8006428:	185b      	adds	r3, r3, r1
 800642a:	2120      	movs	r1, #32
 800642c:	7019      	strb	r1, [r3, #0]
 800642e:	0713      	lsls	r3, r2, #28
 8006430:	d504      	bpl.n	800643c <_svfiprintf_r+0xc4>
 8006432:	2353      	movs	r3, #83	; 0x53
 8006434:	a904      	add	r1, sp, #16
 8006436:	185b      	adds	r3, r3, r1
 8006438:	212b      	movs	r1, #43	; 0x2b
 800643a:	7019      	strb	r1, [r3, #0]
 800643c:	7833      	ldrb	r3, [r6, #0]
 800643e:	2b2a      	cmp	r3, #42	; 0x2a
 8006440:	d016      	beq.n	8006470 <_svfiprintf_r+0xf8>
 8006442:	0035      	movs	r5, r6
 8006444:	2100      	movs	r1, #0
 8006446:	200a      	movs	r0, #10
 8006448:	68e3      	ldr	r3, [r4, #12]
 800644a:	782a      	ldrb	r2, [r5, #0]
 800644c:	1c6e      	adds	r6, r5, #1
 800644e:	3a30      	subs	r2, #48	; 0x30
 8006450:	2a09      	cmp	r2, #9
 8006452:	d94e      	bls.n	80064f2 <_svfiprintf_r+0x17a>
 8006454:	2900      	cmp	r1, #0
 8006456:	d111      	bne.n	800647c <_svfiprintf_r+0x104>
 8006458:	e017      	b.n	800648a <_svfiprintf_r+0x112>
 800645a:	3501      	adds	r5, #1
 800645c:	e7b0      	b.n	80063c0 <_svfiprintf_r+0x48>
 800645e:	4b41      	ldr	r3, [pc, #260]	; (8006564 <_svfiprintf_r+0x1ec>)
 8006460:	6822      	ldr	r2, [r4, #0]
 8006462:	1ac0      	subs	r0, r0, r3
 8006464:	2301      	movs	r3, #1
 8006466:	4083      	lsls	r3, r0
 8006468:	4313      	orrs	r3, r2
 800646a:	002e      	movs	r6, r5
 800646c:	6023      	str	r3, [r4, #0]
 800646e:	e7ce      	b.n	800640e <_svfiprintf_r+0x96>
 8006470:	9b07      	ldr	r3, [sp, #28]
 8006472:	1d19      	adds	r1, r3, #4
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	9107      	str	r1, [sp, #28]
 8006478:	2b00      	cmp	r3, #0
 800647a:	db01      	blt.n	8006480 <_svfiprintf_r+0x108>
 800647c:	930b      	str	r3, [sp, #44]	; 0x2c
 800647e:	e004      	b.n	800648a <_svfiprintf_r+0x112>
 8006480:	425b      	negs	r3, r3
 8006482:	60e3      	str	r3, [r4, #12]
 8006484:	2302      	movs	r3, #2
 8006486:	4313      	orrs	r3, r2
 8006488:	6023      	str	r3, [r4, #0]
 800648a:	782b      	ldrb	r3, [r5, #0]
 800648c:	2b2e      	cmp	r3, #46	; 0x2e
 800648e:	d10a      	bne.n	80064a6 <_svfiprintf_r+0x12e>
 8006490:	786b      	ldrb	r3, [r5, #1]
 8006492:	2b2a      	cmp	r3, #42	; 0x2a
 8006494:	d135      	bne.n	8006502 <_svfiprintf_r+0x18a>
 8006496:	9b07      	ldr	r3, [sp, #28]
 8006498:	3502      	adds	r5, #2
 800649a:	1d1a      	adds	r2, r3, #4
 800649c:	681b      	ldr	r3, [r3, #0]
 800649e:	9207      	str	r2, [sp, #28]
 80064a0:	2b00      	cmp	r3, #0
 80064a2:	db2b      	blt.n	80064fc <_svfiprintf_r+0x184>
 80064a4:	9309      	str	r3, [sp, #36]	; 0x24
 80064a6:	4e30      	ldr	r6, [pc, #192]	; (8006568 <_svfiprintf_r+0x1f0>)
 80064a8:	2203      	movs	r2, #3
 80064aa:	0030      	movs	r0, r6
 80064ac:	7829      	ldrb	r1, [r5, #0]
 80064ae:	f7ff fa99 	bl	80059e4 <memchr>
 80064b2:	2800      	cmp	r0, #0
 80064b4:	d006      	beq.n	80064c4 <_svfiprintf_r+0x14c>
 80064b6:	2340      	movs	r3, #64	; 0x40
 80064b8:	1b80      	subs	r0, r0, r6
 80064ba:	4083      	lsls	r3, r0
 80064bc:	6822      	ldr	r2, [r4, #0]
 80064be:	3501      	adds	r5, #1
 80064c0:	4313      	orrs	r3, r2
 80064c2:	6023      	str	r3, [r4, #0]
 80064c4:	7829      	ldrb	r1, [r5, #0]
 80064c6:	2206      	movs	r2, #6
 80064c8:	4828      	ldr	r0, [pc, #160]	; (800656c <_svfiprintf_r+0x1f4>)
 80064ca:	1c6e      	adds	r6, r5, #1
 80064cc:	7621      	strb	r1, [r4, #24]
 80064ce:	f7ff fa89 	bl	80059e4 <memchr>
 80064d2:	2800      	cmp	r0, #0
 80064d4:	d03c      	beq.n	8006550 <_svfiprintf_r+0x1d8>
 80064d6:	4b26      	ldr	r3, [pc, #152]	; (8006570 <_svfiprintf_r+0x1f8>)
 80064d8:	2b00      	cmp	r3, #0
 80064da:	d125      	bne.n	8006528 <_svfiprintf_r+0x1b0>
 80064dc:	2207      	movs	r2, #7
 80064de:	9b07      	ldr	r3, [sp, #28]
 80064e0:	3307      	adds	r3, #7
 80064e2:	4393      	bics	r3, r2
 80064e4:	3308      	adds	r3, #8
 80064e6:	9307      	str	r3, [sp, #28]
 80064e8:	6963      	ldr	r3, [r4, #20]
 80064ea:	9a04      	ldr	r2, [sp, #16]
 80064ec:	189b      	adds	r3, r3, r2
 80064ee:	6163      	str	r3, [r4, #20]
 80064f0:	e765      	b.n	80063be <_svfiprintf_r+0x46>
 80064f2:	4343      	muls	r3, r0
 80064f4:	0035      	movs	r5, r6
 80064f6:	2101      	movs	r1, #1
 80064f8:	189b      	adds	r3, r3, r2
 80064fa:	e7a6      	b.n	800644a <_svfiprintf_r+0xd2>
 80064fc:	2301      	movs	r3, #1
 80064fe:	425b      	negs	r3, r3
 8006500:	e7d0      	b.n	80064a4 <_svfiprintf_r+0x12c>
 8006502:	2300      	movs	r3, #0
 8006504:	200a      	movs	r0, #10
 8006506:	001a      	movs	r2, r3
 8006508:	3501      	adds	r5, #1
 800650a:	6063      	str	r3, [r4, #4]
 800650c:	7829      	ldrb	r1, [r5, #0]
 800650e:	1c6e      	adds	r6, r5, #1
 8006510:	3930      	subs	r1, #48	; 0x30
 8006512:	2909      	cmp	r1, #9
 8006514:	d903      	bls.n	800651e <_svfiprintf_r+0x1a6>
 8006516:	2b00      	cmp	r3, #0
 8006518:	d0c5      	beq.n	80064a6 <_svfiprintf_r+0x12e>
 800651a:	9209      	str	r2, [sp, #36]	; 0x24
 800651c:	e7c3      	b.n	80064a6 <_svfiprintf_r+0x12e>
 800651e:	4342      	muls	r2, r0
 8006520:	0035      	movs	r5, r6
 8006522:	2301      	movs	r3, #1
 8006524:	1852      	adds	r2, r2, r1
 8006526:	e7f1      	b.n	800650c <_svfiprintf_r+0x194>
 8006528:	ab07      	add	r3, sp, #28
 800652a:	9300      	str	r3, [sp, #0]
 800652c:	003a      	movs	r2, r7
 800652e:	0021      	movs	r1, r4
 8006530:	4b10      	ldr	r3, [pc, #64]	; (8006574 <_svfiprintf_r+0x1fc>)
 8006532:	9803      	ldr	r0, [sp, #12]
 8006534:	f7fd ffae 	bl	8004494 <_printf_float>
 8006538:	9004      	str	r0, [sp, #16]
 800653a:	9b04      	ldr	r3, [sp, #16]
 800653c:	3301      	adds	r3, #1
 800653e:	d1d3      	bne.n	80064e8 <_svfiprintf_r+0x170>
 8006540:	89bb      	ldrh	r3, [r7, #12]
 8006542:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006544:	065b      	lsls	r3, r3, #25
 8006546:	d400      	bmi.n	800654a <_svfiprintf_r+0x1d2>
 8006548:	e72d      	b.n	80063a6 <_svfiprintf_r+0x2e>
 800654a:	2001      	movs	r0, #1
 800654c:	4240      	negs	r0, r0
 800654e:	e72a      	b.n	80063a6 <_svfiprintf_r+0x2e>
 8006550:	ab07      	add	r3, sp, #28
 8006552:	9300      	str	r3, [sp, #0]
 8006554:	003a      	movs	r2, r7
 8006556:	0021      	movs	r1, r4
 8006558:	4b06      	ldr	r3, [pc, #24]	; (8006574 <_svfiprintf_r+0x1fc>)
 800655a:	9803      	ldr	r0, [sp, #12]
 800655c:	f7fe fa58 	bl	8004a10 <_printf_i>
 8006560:	e7ea      	b.n	8006538 <_svfiprintf_r+0x1c0>
 8006562:	46c0      	nop			; (mov r8, r8)
 8006564:	08007584 	.word	0x08007584
 8006568:	0800758a 	.word	0x0800758a
 800656c:	0800758e 	.word	0x0800758e
 8006570:	08004495 	.word	0x08004495
 8006574:	080062b5 	.word	0x080062b5

08006578 <_sbrk_r>:
 8006578:	2300      	movs	r3, #0
 800657a:	b570      	push	{r4, r5, r6, lr}
 800657c:	4d06      	ldr	r5, [pc, #24]	; (8006598 <_sbrk_r+0x20>)
 800657e:	0004      	movs	r4, r0
 8006580:	0008      	movs	r0, r1
 8006582:	602b      	str	r3, [r5, #0]
 8006584:	f7fc f938 	bl	80027f8 <_sbrk>
 8006588:	1c43      	adds	r3, r0, #1
 800658a:	d103      	bne.n	8006594 <_sbrk_r+0x1c>
 800658c:	682b      	ldr	r3, [r5, #0]
 800658e:	2b00      	cmp	r3, #0
 8006590:	d000      	beq.n	8006594 <_sbrk_r+0x1c>
 8006592:	6023      	str	r3, [r4, #0]
 8006594:	bd70      	pop	{r4, r5, r6, pc}
 8006596:	46c0      	nop			; (mov r8, r8)
 8006598:	20000304 	.word	0x20000304

0800659c <__assert_func>:
 800659c:	b530      	push	{r4, r5, lr}
 800659e:	0014      	movs	r4, r2
 80065a0:	001a      	movs	r2, r3
 80065a2:	4b09      	ldr	r3, [pc, #36]	; (80065c8 <__assert_func+0x2c>)
 80065a4:	0005      	movs	r5, r0
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	b085      	sub	sp, #20
 80065aa:	68d8      	ldr	r0, [r3, #12]
 80065ac:	4b07      	ldr	r3, [pc, #28]	; (80065cc <__assert_func+0x30>)
 80065ae:	2c00      	cmp	r4, #0
 80065b0:	d101      	bne.n	80065b6 <__assert_func+0x1a>
 80065b2:	4b07      	ldr	r3, [pc, #28]	; (80065d0 <__assert_func+0x34>)
 80065b4:	001c      	movs	r4, r3
 80065b6:	9301      	str	r3, [sp, #4]
 80065b8:	9100      	str	r1, [sp, #0]
 80065ba:	002b      	movs	r3, r5
 80065bc:	4905      	ldr	r1, [pc, #20]	; (80065d4 <__assert_func+0x38>)
 80065be:	9402      	str	r4, [sp, #8]
 80065c0:	f000 f80a 	bl	80065d8 <fiprintf>
 80065c4:	f000 fab2 	bl	8006b2c <abort>
 80065c8:	20000014 	.word	0x20000014
 80065cc:	08007595 	.word	0x08007595
 80065d0:	080075d0 	.word	0x080075d0
 80065d4:	080075a2 	.word	0x080075a2

080065d8 <fiprintf>:
 80065d8:	b40e      	push	{r1, r2, r3}
 80065da:	b503      	push	{r0, r1, lr}
 80065dc:	0001      	movs	r1, r0
 80065de:	ab03      	add	r3, sp, #12
 80065e0:	4804      	ldr	r0, [pc, #16]	; (80065f4 <fiprintf+0x1c>)
 80065e2:	cb04      	ldmia	r3!, {r2}
 80065e4:	6800      	ldr	r0, [r0, #0]
 80065e6:	9301      	str	r3, [sp, #4]
 80065e8:	f000 f88a 	bl	8006700 <_vfiprintf_r>
 80065ec:	b002      	add	sp, #8
 80065ee:	bc08      	pop	{r3}
 80065f0:	b003      	add	sp, #12
 80065f2:	4718      	bx	r3
 80065f4:	20000014 	.word	0x20000014

080065f8 <__ascii_mbtowc>:
 80065f8:	b082      	sub	sp, #8
 80065fa:	2900      	cmp	r1, #0
 80065fc:	d100      	bne.n	8006600 <__ascii_mbtowc+0x8>
 80065fe:	a901      	add	r1, sp, #4
 8006600:	1e10      	subs	r0, r2, #0
 8006602:	d006      	beq.n	8006612 <__ascii_mbtowc+0x1a>
 8006604:	2b00      	cmp	r3, #0
 8006606:	d006      	beq.n	8006616 <__ascii_mbtowc+0x1e>
 8006608:	7813      	ldrb	r3, [r2, #0]
 800660a:	600b      	str	r3, [r1, #0]
 800660c:	7810      	ldrb	r0, [r2, #0]
 800660e:	1e43      	subs	r3, r0, #1
 8006610:	4198      	sbcs	r0, r3
 8006612:	b002      	add	sp, #8
 8006614:	4770      	bx	lr
 8006616:	2002      	movs	r0, #2
 8006618:	4240      	negs	r0, r0
 800661a:	e7fa      	b.n	8006612 <__ascii_mbtowc+0x1a>

0800661c <memmove>:
 800661c:	b510      	push	{r4, lr}
 800661e:	4288      	cmp	r0, r1
 8006620:	d902      	bls.n	8006628 <memmove+0xc>
 8006622:	188b      	adds	r3, r1, r2
 8006624:	4298      	cmp	r0, r3
 8006626:	d303      	bcc.n	8006630 <memmove+0x14>
 8006628:	2300      	movs	r3, #0
 800662a:	e007      	b.n	800663c <memmove+0x20>
 800662c:	5c8b      	ldrb	r3, [r1, r2]
 800662e:	5483      	strb	r3, [r0, r2]
 8006630:	3a01      	subs	r2, #1
 8006632:	d2fb      	bcs.n	800662c <memmove+0x10>
 8006634:	bd10      	pop	{r4, pc}
 8006636:	5ccc      	ldrb	r4, [r1, r3]
 8006638:	54c4      	strb	r4, [r0, r3]
 800663a:	3301      	adds	r3, #1
 800663c:	429a      	cmp	r2, r3
 800663e:	d1fa      	bne.n	8006636 <memmove+0x1a>
 8006640:	e7f8      	b.n	8006634 <memmove+0x18>
	...

08006644 <__malloc_lock>:
 8006644:	b510      	push	{r4, lr}
 8006646:	4802      	ldr	r0, [pc, #8]	; (8006650 <__malloc_lock+0xc>)
 8006648:	f000 fc47 	bl	8006eda <__retarget_lock_acquire_recursive>
 800664c:	bd10      	pop	{r4, pc}
 800664e:	46c0      	nop			; (mov r8, r8)
 8006650:	2000030c 	.word	0x2000030c

08006654 <__malloc_unlock>:
 8006654:	b510      	push	{r4, lr}
 8006656:	4802      	ldr	r0, [pc, #8]	; (8006660 <__malloc_unlock+0xc>)
 8006658:	f000 fc40 	bl	8006edc <__retarget_lock_release_recursive>
 800665c:	bd10      	pop	{r4, pc}
 800665e:	46c0      	nop			; (mov r8, r8)
 8006660:	2000030c 	.word	0x2000030c

08006664 <_realloc_r>:
 8006664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006666:	0007      	movs	r7, r0
 8006668:	000d      	movs	r5, r1
 800666a:	0016      	movs	r6, r2
 800666c:	2900      	cmp	r1, #0
 800666e:	d105      	bne.n	800667c <_realloc_r+0x18>
 8006670:	0011      	movs	r1, r2
 8006672:	f7ff fdc1 	bl	80061f8 <_malloc_r>
 8006676:	0004      	movs	r4, r0
 8006678:	0020      	movs	r0, r4
 800667a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800667c:	2a00      	cmp	r2, #0
 800667e:	d103      	bne.n	8006688 <_realloc_r+0x24>
 8006680:	f7ff fd70 	bl	8006164 <_free_r>
 8006684:	0034      	movs	r4, r6
 8006686:	e7f7      	b.n	8006678 <_realloc_r+0x14>
 8006688:	f000 fc96 	bl	8006fb8 <_malloc_usable_size_r>
 800668c:	002c      	movs	r4, r5
 800668e:	42b0      	cmp	r0, r6
 8006690:	d2f2      	bcs.n	8006678 <_realloc_r+0x14>
 8006692:	0031      	movs	r1, r6
 8006694:	0038      	movs	r0, r7
 8006696:	f7ff fdaf 	bl	80061f8 <_malloc_r>
 800669a:	1e04      	subs	r4, r0, #0
 800669c:	d0ec      	beq.n	8006678 <_realloc_r+0x14>
 800669e:	0029      	movs	r1, r5
 80066a0:	0032      	movs	r2, r6
 80066a2:	f7ff f9aa 	bl	80059fa <memcpy>
 80066a6:	0029      	movs	r1, r5
 80066a8:	0038      	movs	r0, r7
 80066aa:	f7ff fd5b 	bl	8006164 <_free_r>
 80066ae:	e7e3      	b.n	8006678 <_realloc_r+0x14>

080066b0 <__sfputc_r>:
 80066b0:	6893      	ldr	r3, [r2, #8]
 80066b2:	b510      	push	{r4, lr}
 80066b4:	3b01      	subs	r3, #1
 80066b6:	6093      	str	r3, [r2, #8]
 80066b8:	2b00      	cmp	r3, #0
 80066ba:	da04      	bge.n	80066c6 <__sfputc_r+0x16>
 80066bc:	6994      	ldr	r4, [r2, #24]
 80066be:	42a3      	cmp	r3, r4
 80066c0:	db07      	blt.n	80066d2 <__sfputc_r+0x22>
 80066c2:	290a      	cmp	r1, #10
 80066c4:	d005      	beq.n	80066d2 <__sfputc_r+0x22>
 80066c6:	6813      	ldr	r3, [r2, #0]
 80066c8:	1c58      	adds	r0, r3, #1
 80066ca:	6010      	str	r0, [r2, #0]
 80066cc:	7019      	strb	r1, [r3, #0]
 80066ce:	0008      	movs	r0, r1
 80066d0:	bd10      	pop	{r4, pc}
 80066d2:	f000 f94f 	bl	8006974 <__swbuf_r>
 80066d6:	0001      	movs	r1, r0
 80066d8:	e7f9      	b.n	80066ce <__sfputc_r+0x1e>

080066da <__sfputs_r>:
 80066da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80066dc:	0006      	movs	r6, r0
 80066de:	000f      	movs	r7, r1
 80066e0:	0014      	movs	r4, r2
 80066e2:	18d5      	adds	r5, r2, r3
 80066e4:	42ac      	cmp	r4, r5
 80066e6:	d101      	bne.n	80066ec <__sfputs_r+0x12>
 80066e8:	2000      	movs	r0, #0
 80066ea:	e007      	b.n	80066fc <__sfputs_r+0x22>
 80066ec:	7821      	ldrb	r1, [r4, #0]
 80066ee:	003a      	movs	r2, r7
 80066f0:	0030      	movs	r0, r6
 80066f2:	f7ff ffdd 	bl	80066b0 <__sfputc_r>
 80066f6:	3401      	adds	r4, #1
 80066f8:	1c43      	adds	r3, r0, #1
 80066fa:	d1f3      	bne.n	80066e4 <__sfputs_r+0xa>
 80066fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006700 <_vfiprintf_r>:
 8006700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006702:	b0a1      	sub	sp, #132	; 0x84
 8006704:	0006      	movs	r6, r0
 8006706:	000c      	movs	r4, r1
 8006708:	001f      	movs	r7, r3
 800670a:	9203      	str	r2, [sp, #12]
 800670c:	2800      	cmp	r0, #0
 800670e:	d004      	beq.n	800671a <_vfiprintf_r+0x1a>
 8006710:	6983      	ldr	r3, [r0, #24]
 8006712:	2b00      	cmp	r3, #0
 8006714:	d101      	bne.n	800671a <_vfiprintf_r+0x1a>
 8006716:	f000 fb3f 	bl	8006d98 <__sinit>
 800671a:	4b8e      	ldr	r3, [pc, #568]	; (8006954 <_vfiprintf_r+0x254>)
 800671c:	429c      	cmp	r4, r3
 800671e:	d11c      	bne.n	800675a <_vfiprintf_r+0x5a>
 8006720:	6874      	ldr	r4, [r6, #4]
 8006722:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006724:	07db      	lsls	r3, r3, #31
 8006726:	d405      	bmi.n	8006734 <_vfiprintf_r+0x34>
 8006728:	89a3      	ldrh	r3, [r4, #12]
 800672a:	059b      	lsls	r3, r3, #22
 800672c:	d402      	bmi.n	8006734 <_vfiprintf_r+0x34>
 800672e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006730:	f000 fbd3 	bl	8006eda <__retarget_lock_acquire_recursive>
 8006734:	89a3      	ldrh	r3, [r4, #12]
 8006736:	071b      	lsls	r3, r3, #28
 8006738:	d502      	bpl.n	8006740 <_vfiprintf_r+0x40>
 800673a:	6923      	ldr	r3, [r4, #16]
 800673c:	2b00      	cmp	r3, #0
 800673e:	d11d      	bne.n	800677c <_vfiprintf_r+0x7c>
 8006740:	0021      	movs	r1, r4
 8006742:	0030      	movs	r0, r6
 8006744:	f000 f97a 	bl	8006a3c <__swsetup_r>
 8006748:	2800      	cmp	r0, #0
 800674a:	d017      	beq.n	800677c <_vfiprintf_r+0x7c>
 800674c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800674e:	07db      	lsls	r3, r3, #31
 8006750:	d50d      	bpl.n	800676e <_vfiprintf_r+0x6e>
 8006752:	2001      	movs	r0, #1
 8006754:	4240      	negs	r0, r0
 8006756:	b021      	add	sp, #132	; 0x84
 8006758:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800675a:	4b7f      	ldr	r3, [pc, #508]	; (8006958 <_vfiprintf_r+0x258>)
 800675c:	429c      	cmp	r4, r3
 800675e:	d101      	bne.n	8006764 <_vfiprintf_r+0x64>
 8006760:	68b4      	ldr	r4, [r6, #8]
 8006762:	e7de      	b.n	8006722 <_vfiprintf_r+0x22>
 8006764:	4b7d      	ldr	r3, [pc, #500]	; (800695c <_vfiprintf_r+0x25c>)
 8006766:	429c      	cmp	r4, r3
 8006768:	d1db      	bne.n	8006722 <_vfiprintf_r+0x22>
 800676a:	68f4      	ldr	r4, [r6, #12]
 800676c:	e7d9      	b.n	8006722 <_vfiprintf_r+0x22>
 800676e:	89a3      	ldrh	r3, [r4, #12]
 8006770:	059b      	lsls	r3, r3, #22
 8006772:	d4ee      	bmi.n	8006752 <_vfiprintf_r+0x52>
 8006774:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006776:	f000 fbb1 	bl	8006edc <__retarget_lock_release_recursive>
 800677a:	e7ea      	b.n	8006752 <_vfiprintf_r+0x52>
 800677c:	2300      	movs	r3, #0
 800677e:	ad08      	add	r5, sp, #32
 8006780:	616b      	str	r3, [r5, #20]
 8006782:	3320      	adds	r3, #32
 8006784:	766b      	strb	r3, [r5, #25]
 8006786:	3310      	adds	r3, #16
 8006788:	76ab      	strb	r3, [r5, #26]
 800678a:	9707      	str	r7, [sp, #28]
 800678c:	9f03      	ldr	r7, [sp, #12]
 800678e:	783b      	ldrb	r3, [r7, #0]
 8006790:	2b00      	cmp	r3, #0
 8006792:	d001      	beq.n	8006798 <_vfiprintf_r+0x98>
 8006794:	2b25      	cmp	r3, #37	; 0x25
 8006796:	d14e      	bne.n	8006836 <_vfiprintf_r+0x136>
 8006798:	9b03      	ldr	r3, [sp, #12]
 800679a:	1afb      	subs	r3, r7, r3
 800679c:	9305      	str	r3, [sp, #20]
 800679e:	9b03      	ldr	r3, [sp, #12]
 80067a0:	429f      	cmp	r7, r3
 80067a2:	d00d      	beq.n	80067c0 <_vfiprintf_r+0xc0>
 80067a4:	9b05      	ldr	r3, [sp, #20]
 80067a6:	0021      	movs	r1, r4
 80067a8:	0030      	movs	r0, r6
 80067aa:	9a03      	ldr	r2, [sp, #12]
 80067ac:	f7ff ff95 	bl	80066da <__sfputs_r>
 80067b0:	1c43      	adds	r3, r0, #1
 80067b2:	d100      	bne.n	80067b6 <_vfiprintf_r+0xb6>
 80067b4:	e0b5      	b.n	8006922 <_vfiprintf_r+0x222>
 80067b6:	696a      	ldr	r2, [r5, #20]
 80067b8:	9b05      	ldr	r3, [sp, #20]
 80067ba:	4694      	mov	ip, r2
 80067bc:	4463      	add	r3, ip
 80067be:	616b      	str	r3, [r5, #20]
 80067c0:	783b      	ldrb	r3, [r7, #0]
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	d100      	bne.n	80067c8 <_vfiprintf_r+0xc8>
 80067c6:	e0ac      	b.n	8006922 <_vfiprintf_r+0x222>
 80067c8:	2201      	movs	r2, #1
 80067ca:	1c7b      	adds	r3, r7, #1
 80067cc:	9303      	str	r3, [sp, #12]
 80067ce:	2300      	movs	r3, #0
 80067d0:	4252      	negs	r2, r2
 80067d2:	606a      	str	r2, [r5, #4]
 80067d4:	a904      	add	r1, sp, #16
 80067d6:	3254      	adds	r2, #84	; 0x54
 80067d8:	1852      	adds	r2, r2, r1
 80067da:	602b      	str	r3, [r5, #0]
 80067dc:	60eb      	str	r3, [r5, #12]
 80067de:	60ab      	str	r3, [r5, #8]
 80067e0:	7013      	strb	r3, [r2, #0]
 80067e2:	65ab      	str	r3, [r5, #88]	; 0x58
 80067e4:	9b03      	ldr	r3, [sp, #12]
 80067e6:	2205      	movs	r2, #5
 80067e8:	7819      	ldrb	r1, [r3, #0]
 80067ea:	485d      	ldr	r0, [pc, #372]	; (8006960 <_vfiprintf_r+0x260>)
 80067ec:	f7ff f8fa 	bl	80059e4 <memchr>
 80067f0:	9b03      	ldr	r3, [sp, #12]
 80067f2:	1c5f      	adds	r7, r3, #1
 80067f4:	2800      	cmp	r0, #0
 80067f6:	d120      	bne.n	800683a <_vfiprintf_r+0x13a>
 80067f8:	682a      	ldr	r2, [r5, #0]
 80067fa:	06d3      	lsls	r3, r2, #27
 80067fc:	d504      	bpl.n	8006808 <_vfiprintf_r+0x108>
 80067fe:	2353      	movs	r3, #83	; 0x53
 8006800:	a904      	add	r1, sp, #16
 8006802:	185b      	adds	r3, r3, r1
 8006804:	2120      	movs	r1, #32
 8006806:	7019      	strb	r1, [r3, #0]
 8006808:	0713      	lsls	r3, r2, #28
 800680a:	d504      	bpl.n	8006816 <_vfiprintf_r+0x116>
 800680c:	2353      	movs	r3, #83	; 0x53
 800680e:	a904      	add	r1, sp, #16
 8006810:	185b      	adds	r3, r3, r1
 8006812:	212b      	movs	r1, #43	; 0x2b
 8006814:	7019      	strb	r1, [r3, #0]
 8006816:	9b03      	ldr	r3, [sp, #12]
 8006818:	781b      	ldrb	r3, [r3, #0]
 800681a:	2b2a      	cmp	r3, #42	; 0x2a
 800681c:	d016      	beq.n	800684c <_vfiprintf_r+0x14c>
 800681e:	2100      	movs	r1, #0
 8006820:	68eb      	ldr	r3, [r5, #12]
 8006822:	9f03      	ldr	r7, [sp, #12]
 8006824:	783a      	ldrb	r2, [r7, #0]
 8006826:	1c78      	adds	r0, r7, #1
 8006828:	3a30      	subs	r2, #48	; 0x30
 800682a:	4684      	mov	ip, r0
 800682c:	2a09      	cmp	r2, #9
 800682e:	d94f      	bls.n	80068d0 <_vfiprintf_r+0x1d0>
 8006830:	2900      	cmp	r1, #0
 8006832:	d111      	bne.n	8006858 <_vfiprintf_r+0x158>
 8006834:	e017      	b.n	8006866 <_vfiprintf_r+0x166>
 8006836:	3701      	adds	r7, #1
 8006838:	e7a9      	b.n	800678e <_vfiprintf_r+0x8e>
 800683a:	4b49      	ldr	r3, [pc, #292]	; (8006960 <_vfiprintf_r+0x260>)
 800683c:	682a      	ldr	r2, [r5, #0]
 800683e:	1ac0      	subs	r0, r0, r3
 8006840:	2301      	movs	r3, #1
 8006842:	4083      	lsls	r3, r0
 8006844:	4313      	orrs	r3, r2
 8006846:	602b      	str	r3, [r5, #0]
 8006848:	9703      	str	r7, [sp, #12]
 800684a:	e7cb      	b.n	80067e4 <_vfiprintf_r+0xe4>
 800684c:	9b07      	ldr	r3, [sp, #28]
 800684e:	1d19      	adds	r1, r3, #4
 8006850:	681b      	ldr	r3, [r3, #0]
 8006852:	9107      	str	r1, [sp, #28]
 8006854:	2b00      	cmp	r3, #0
 8006856:	db01      	blt.n	800685c <_vfiprintf_r+0x15c>
 8006858:	930b      	str	r3, [sp, #44]	; 0x2c
 800685a:	e004      	b.n	8006866 <_vfiprintf_r+0x166>
 800685c:	425b      	negs	r3, r3
 800685e:	60eb      	str	r3, [r5, #12]
 8006860:	2302      	movs	r3, #2
 8006862:	4313      	orrs	r3, r2
 8006864:	602b      	str	r3, [r5, #0]
 8006866:	783b      	ldrb	r3, [r7, #0]
 8006868:	2b2e      	cmp	r3, #46	; 0x2e
 800686a:	d10a      	bne.n	8006882 <_vfiprintf_r+0x182>
 800686c:	787b      	ldrb	r3, [r7, #1]
 800686e:	2b2a      	cmp	r3, #42	; 0x2a
 8006870:	d137      	bne.n	80068e2 <_vfiprintf_r+0x1e2>
 8006872:	9b07      	ldr	r3, [sp, #28]
 8006874:	3702      	adds	r7, #2
 8006876:	1d1a      	adds	r2, r3, #4
 8006878:	681b      	ldr	r3, [r3, #0]
 800687a:	9207      	str	r2, [sp, #28]
 800687c:	2b00      	cmp	r3, #0
 800687e:	db2d      	blt.n	80068dc <_vfiprintf_r+0x1dc>
 8006880:	9309      	str	r3, [sp, #36]	; 0x24
 8006882:	2203      	movs	r2, #3
 8006884:	7839      	ldrb	r1, [r7, #0]
 8006886:	4837      	ldr	r0, [pc, #220]	; (8006964 <_vfiprintf_r+0x264>)
 8006888:	f7ff f8ac 	bl	80059e4 <memchr>
 800688c:	2800      	cmp	r0, #0
 800688e:	d007      	beq.n	80068a0 <_vfiprintf_r+0x1a0>
 8006890:	4b34      	ldr	r3, [pc, #208]	; (8006964 <_vfiprintf_r+0x264>)
 8006892:	682a      	ldr	r2, [r5, #0]
 8006894:	1ac0      	subs	r0, r0, r3
 8006896:	2340      	movs	r3, #64	; 0x40
 8006898:	4083      	lsls	r3, r0
 800689a:	4313      	orrs	r3, r2
 800689c:	3701      	adds	r7, #1
 800689e:	602b      	str	r3, [r5, #0]
 80068a0:	7839      	ldrb	r1, [r7, #0]
 80068a2:	1c7b      	adds	r3, r7, #1
 80068a4:	2206      	movs	r2, #6
 80068a6:	4830      	ldr	r0, [pc, #192]	; (8006968 <_vfiprintf_r+0x268>)
 80068a8:	9303      	str	r3, [sp, #12]
 80068aa:	7629      	strb	r1, [r5, #24]
 80068ac:	f7ff f89a 	bl	80059e4 <memchr>
 80068b0:	2800      	cmp	r0, #0
 80068b2:	d045      	beq.n	8006940 <_vfiprintf_r+0x240>
 80068b4:	4b2d      	ldr	r3, [pc, #180]	; (800696c <_vfiprintf_r+0x26c>)
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	d127      	bne.n	800690a <_vfiprintf_r+0x20a>
 80068ba:	2207      	movs	r2, #7
 80068bc:	9b07      	ldr	r3, [sp, #28]
 80068be:	3307      	adds	r3, #7
 80068c0:	4393      	bics	r3, r2
 80068c2:	3308      	adds	r3, #8
 80068c4:	9307      	str	r3, [sp, #28]
 80068c6:	696b      	ldr	r3, [r5, #20]
 80068c8:	9a04      	ldr	r2, [sp, #16]
 80068ca:	189b      	adds	r3, r3, r2
 80068cc:	616b      	str	r3, [r5, #20]
 80068ce:	e75d      	b.n	800678c <_vfiprintf_r+0x8c>
 80068d0:	210a      	movs	r1, #10
 80068d2:	434b      	muls	r3, r1
 80068d4:	4667      	mov	r7, ip
 80068d6:	189b      	adds	r3, r3, r2
 80068d8:	3909      	subs	r1, #9
 80068da:	e7a3      	b.n	8006824 <_vfiprintf_r+0x124>
 80068dc:	2301      	movs	r3, #1
 80068de:	425b      	negs	r3, r3
 80068e0:	e7ce      	b.n	8006880 <_vfiprintf_r+0x180>
 80068e2:	2300      	movs	r3, #0
 80068e4:	001a      	movs	r2, r3
 80068e6:	3701      	adds	r7, #1
 80068e8:	606b      	str	r3, [r5, #4]
 80068ea:	7839      	ldrb	r1, [r7, #0]
 80068ec:	1c78      	adds	r0, r7, #1
 80068ee:	3930      	subs	r1, #48	; 0x30
 80068f0:	4684      	mov	ip, r0
 80068f2:	2909      	cmp	r1, #9
 80068f4:	d903      	bls.n	80068fe <_vfiprintf_r+0x1fe>
 80068f6:	2b00      	cmp	r3, #0
 80068f8:	d0c3      	beq.n	8006882 <_vfiprintf_r+0x182>
 80068fa:	9209      	str	r2, [sp, #36]	; 0x24
 80068fc:	e7c1      	b.n	8006882 <_vfiprintf_r+0x182>
 80068fe:	230a      	movs	r3, #10
 8006900:	435a      	muls	r2, r3
 8006902:	4667      	mov	r7, ip
 8006904:	1852      	adds	r2, r2, r1
 8006906:	3b09      	subs	r3, #9
 8006908:	e7ef      	b.n	80068ea <_vfiprintf_r+0x1ea>
 800690a:	ab07      	add	r3, sp, #28
 800690c:	9300      	str	r3, [sp, #0]
 800690e:	0022      	movs	r2, r4
 8006910:	0029      	movs	r1, r5
 8006912:	0030      	movs	r0, r6
 8006914:	4b16      	ldr	r3, [pc, #88]	; (8006970 <_vfiprintf_r+0x270>)
 8006916:	f7fd fdbd 	bl	8004494 <_printf_float>
 800691a:	9004      	str	r0, [sp, #16]
 800691c:	9b04      	ldr	r3, [sp, #16]
 800691e:	3301      	adds	r3, #1
 8006920:	d1d1      	bne.n	80068c6 <_vfiprintf_r+0x1c6>
 8006922:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006924:	07db      	lsls	r3, r3, #31
 8006926:	d405      	bmi.n	8006934 <_vfiprintf_r+0x234>
 8006928:	89a3      	ldrh	r3, [r4, #12]
 800692a:	059b      	lsls	r3, r3, #22
 800692c:	d402      	bmi.n	8006934 <_vfiprintf_r+0x234>
 800692e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006930:	f000 fad4 	bl	8006edc <__retarget_lock_release_recursive>
 8006934:	89a3      	ldrh	r3, [r4, #12]
 8006936:	065b      	lsls	r3, r3, #25
 8006938:	d500      	bpl.n	800693c <_vfiprintf_r+0x23c>
 800693a:	e70a      	b.n	8006752 <_vfiprintf_r+0x52>
 800693c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800693e:	e70a      	b.n	8006756 <_vfiprintf_r+0x56>
 8006940:	ab07      	add	r3, sp, #28
 8006942:	9300      	str	r3, [sp, #0]
 8006944:	0022      	movs	r2, r4
 8006946:	0029      	movs	r1, r5
 8006948:	0030      	movs	r0, r6
 800694a:	4b09      	ldr	r3, [pc, #36]	; (8006970 <_vfiprintf_r+0x270>)
 800694c:	f7fe f860 	bl	8004a10 <_printf_i>
 8006950:	e7e3      	b.n	800691a <_vfiprintf_r+0x21a>
 8006952:	46c0      	nop			; (mov r8, r8)
 8006954:	080076fc 	.word	0x080076fc
 8006958:	0800771c 	.word	0x0800771c
 800695c:	080076dc 	.word	0x080076dc
 8006960:	08007584 	.word	0x08007584
 8006964:	0800758a 	.word	0x0800758a
 8006968:	0800758e 	.word	0x0800758e
 800696c:	08004495 	.word	0x08004495
 8006970:	080066db 	.word	0x080066db

08006974 <__swbuf_r>:
 8006974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006976:	0005      	movs	r5, r0
 8006978:	000e      	movs	r6, r1
 800697a:	0014      	movs	r4, r2
 800697c:	2800      	cmp	r0, #0
 800697e:	d004      	beq.n	800698a <__swbuf_r+0x16>
 8006980:	6983      	ldr	r3, [r0, #24]
 8006982:	2b00      	cmp	r3, #0
 8006984:	d101      	bne.n	800698a <__swbuf_r+0x16>
 8006986:	f000 fa07 	bl	8006d98 <__sinit>
 800698a:	4b22      	ldr	r3, [pc, #136]	; (8006a14 <__swbuf_r+0xa0>)
 800698c:	429c      	cmp	r4, r3
 800698e:	d12e      	bne.n	80069ee <__swbuf_r+0x7a>
 8006990:	686c      	ldr	r4, [r5, #4]
 8006992:	69a3      	ldr	r3, [r4, #24]
 8006994:	60a3      	str	r3, [r4, #8]
 8006996:	89a3      	ldrh	r3, [r4, #12]
 8006998:	071b      	lsls	r3, r3, #28
 800699a:	d532      	bpl.n	8006a02 <__swbuf_r+0x8e>
 800699c:	6923      	ldr	r3, [r4, #16]
 800699e:	2b00      	cmp	r3, #0
 80069a0:	d02f      	beq.n	8006a02 <__swbuf_r+0x8e>
 80069a2:	6823      	ldr	r3, [r4, #0]
 80069a4:	6922      	ldr	r2, [r4, #16]
 80069a6:	b2f7      	uxtb	r7, r6
 80069a8:	1a98      	subs	r0, r3, r2
 80069aa:	6963      	ldr	r3, [r4, #20]
 80069ac:	b2f6      	uxtb	r6, r6
 80069ae:	4283      	cmp	r3, r0
 80069b0:	dc05      	bgt.n	80069be <__swbuf_r+0x4a>
 80069b2:	0021      	movs	r1, r4
 80069b4:	0028      	movs	r0, r5
 80069b6:	f000 f94d 	bl	8006c54 <_fflush_r>
 80069ba:	2800      	cmp	r0, #0
 80069bc:	d127      	bne.n	8006a0e <__swbuf_r+0x9a>
 80069be:	68a3      	ldr	r3, [r4, #8]
 80069c0:	3001      	adds	r0, #1
 80069c2:	3b01      	subs	r3, #1
 80069c4:	60a3      	str	r3, [r4, #8]
 80069c6:	6823      	ldr	r3, [r4, #0]
 80069c8:	1c5a      	adds	r2, r3, #1
 80069ca:	6022      	str	r2, [r4, #0]
 80069cc:	701f      	strb	r7, [r3, #0]
 80069ce:	6963      	ldr	r3, [r4, #20]
 80069d0:	4283      	cmp	r3, r0
 80069d2:	d004      	beq.n	80069de <__swbuf_r+0x6a>
 80069d4:	89a3      	ldrh	r3, [r4, #12]
 80069d6:	07db      	lsls	r3, r3, #31
 80069d8:	d507      	bpl.n	80069ea <__swbuf_r+0x76>
 80069da:	2e0a      	cmp	r6, #10
 80069dc:	d105      	bne.n	80069ea <__swbuf_r+0x76>
 80069de:	0021      	movs	r1, r4
 80069e0:	0028      	movs	r0, r5
 80069e2:	f000 f937 	bl	8006c54 <_fflush_r>
 80069e6:	2800      	cmp	r0, #0
 80069e8:	d111      	bne.n	8006a0e <__swbuf_r+0x9a>
 80069ea:	0030      	movs	r0, r6
 80069ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80069ee:	4b0a      	ldr	r3, [pc, #40]	; (8006a18 <__swbuf_r+0xa4>)
 80069f0:	429c      	cmp	r4, r3
 80069f2:	d101      	bne.n	80069f8 <__swbuf_r+0x84>
 80069f4:	68ac      	ldr	r4, [r5, #8]
 80069f6:	e7cc      	b.n	8006992 <__swbuf_r+0x1e>
 80069f8:	4b08      	ldr	r3, [pc, #32]	; (8006a1c <__swbuf_r+0xa8>)
 80069fa:	429c      	cmp	r4, r3
 80069fc:	d1c9      	bne.n	8006992 <__swbuf_r+0x1e>
 80069fe:	68ec      	ldr	r4, [r5, #12]
 8006a00:	e7c7      	b.n	8006992 <__swbuf_r+0x1e>
 8006a02:	0021      	movs	r1, r4
 8006a04:	0028      	movs	r0, r5
 8006a06:	f000 f819 	bl	8006a3c <__swsetup_r>
 8006a0a:	2800      	cmp	r0, #0
 8006a0c:	d0c9      	beq.n	80069a2 <__swbuf_r+0x2e>
 8006a0e:	2601      	movs	r6, #1
 8006a10:	4276      	negs	r6, r6
 8006a12:	e7ea      	b.n	80069ea <__swbuf_r+0x76>
 8006a14:	080076fc 	.word	0x080076fc
 8006a18:	0800771c 	.word	0x0800771c
 8006a1c:	080076dc 	.word	0x080076dc

08006a20 <__ascii_wctomb>:
 8006a20:	0003      	movs	r3, r0
 8006a22:	1e08      	subs	r0, r1, #0
 8006a24:	d005      	beq.n	8006a32 <__ascii_wctomb+0x12>
 8006a26:	2aff      	cmp	r2, #255	; 0xff
 8006a28:	d904      	bls.n	8006a34 <__ascii_wctomb+0x14>
 8006a2a:	228a      	movs	r2, #138	; 0x8a
 8006a2c:	2001      	movs	r0, #1
 8006a2e:	601a      	str	r2, [r3, #0]
 8006a30:	4240      	negs	r0, r0
 8006a32:	4770      	bx	lr
 8006a34:	2001      	movs	r0, #1
 8006a36:	700a      	strb	r2, [r1, #0]
 8006a38:	e7fb      	b.n	8006a32 <__ascii_wctomb+0x12>
	...

08006a3c <__swsetup_r>:
 8006a3c:	4b37      	ldr	r3, [pc, #220]	; (8006b1c <__swsetup_r+0xe0>)
 8006a3e:	b570      	push	{r4, r5, r6, lr}
 8006a40:	681d      	ldr	r5, [r3, #0]
 8006a42:	0006      	movs	r6, r0
 8006a44:	000c      	movs	r4, r1
 8006a46:	2d00      	cmp	r5, #0
 8006a48:	d005      	beq.n	8006a56 <__swsetup_r+0x1a>
 8006a4a:	69ab      	ldr	r3, [r5, #24]
 8006a4c:	2b00      	cmp	r3, #0
 8006a4e:	d102      	bne.n	8006a56 <__swsetup_r+0x1a>
 8006a50:	0028      	movs	r0, r5
 8006a52:	f000 f9a1 	bl	8006d98 <__sinit>
 8006a56:	4b32      	ldr	r3, [pc, #200]	; (8006b20 <__swsetup_r+0xe4>)
 8006a58:	429c      	cmp	r4, r3
 8006a5a:	d10f      	bne.n	8006a7c <__swsetup_r+0x40>
 8006a5c:	686c      	ldr	r4, [r5, #4]
 8006a5e:	230c      	movs	r3, #12
 8006a60:	5ee2      	ldrsh	r2, [r4, r3]
 8006a62:	b293      	uxth	r3, r2
 8006a64:	0711      	lsls	r1, r2, #28
 8006a66:	d42d      	bmi.n	8006ac4 <__swsetup_r+0x88>
 8006a68:	06d9      	lsls	r1, r3, #27
 8006a6a:	d411      	bmi.n	8006a90 <__swsetup_r+0x54>
 8006a6c:	2309      	movs	r3, #9
 8006a6e:	2001      	movs	r0, #1
 8006a70:	6033      	str	r3, [r6, #0]
 8006a72:	3337      	adds	r3, #55	; 0x37
 8006a74:	4313      	orrs	r3, r2
 8006a76:	81a3      	strh	r3, [r4, #12]
 8006a78:	4240      	negs	r0, r0
 8006a7a:	bd70      	pop	{r4, r5, r6, pc}
 8006a7c:	4b29      	ldr	r3, [pc, #164]	; (8006b24 <__swsetup_r+0xe8>)
 8006a7e:	429c      	cmp	r4, r3
 8006a80:	d101      	bne.n	8006a86 <__swsetup_r+0x4a>
 8006a82:	68ac      	ldr	r4, [r5, #8]
 8006a84:	e7eb      	b.n	8006a5e <__swsetup_r+0x22>
 8006a86:	4b28      	ldr	r3, [pc, #160]	; (8006b28 <__swsetup_r+0xec>)
 8006a88:	429c      	cmp	r4, r3
 8006a8a:	d1e8      	bne.n	8006a5e <__swsetup_r+0x22>
 8006a8c:	68ec      	ldr	r4, [r5, #12]
 8006a8e:	e7e6      	b.n	8006a5e <__swsetup_r+0x22>
 8006a90:	075b      	lsls	r3, r3, #29
 8006a92:	d513      	bpl.n	8006abc <__swsetup_r+0x80>
 8006a94:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006a96:	2900      	cmp	r1, #0
 8006a98:	d008      	beq.n	8006aac <__swsetup_r+0x70>
 8006a9a:	0023      	movs	r3, r4
 8006a9c:	3344      	adds	r3, #68	; 0x44
 8006a9e:	4299      	cmp	r1, r3
 8006aa0:	d002      	beq.n	8006aa8 <__swsetup_r+0x6c>
 8006aa2:	0030      	movs	r0, r6
 8006aa4:	f7ff fb5e 	bl	8006164 <_free_r>
 8006aa8:	2300      	movs	r3, #0
 8006aaa:	6363      	str	r3, [r4, #52]	; 0x34
 8006aac:	2224      	movs	r2, #36	; 0x24
 8006aae:	89a3      	ldrh	r3, [r4, #12]
 8006ab0:	4393      	bics	r3, r2
 8006ab2:	81a3      	strh	r3, [r4, #12]
 8006ab4:	2300      	movs	r3, #0
 8006ab6:	6063      	str	r3, [r4, #4]
 8006ab8:	6923      	ldr	r3, [r4, #16]
 8006aba:	6023      	str	r3, [r4, #0]
 8006abc:	2308      	movs	r3, #8
 8006abe:	89a2      	ldrh	r2, [r4, #12]
 8006ac0:	4313      	orrs	r3, r2
 8006ac2:	81a3      	strh	r3, [r4, #12]
 8006ac4:	6923      	ldr	r3, [r4, #16]
 8006ac6:	2b00      	cmp	r3, #0
 8006ac8:	d10b      	bne.n	8006ae2 <__swsetup_r+0xa6>
 8006aca:	21a0      	movs	r1, #160	; 0xa0
 8006acc:	2280      	movs	r2, #128	; 0x80
 8006ace:	89a3      	ldrh	r3, [r4, #12]
 8006ad0:	0089      	lsls	r1, r1, #2
 8006ad2:	0092      	lsls	r2, r2, #2
 8006ad4:	400b      	ands	r3, r1
 8006ad6:	4293      	cmp	r3, r2
 8006ad8:	d003      	beq.n	8006ae2 <__swsetup_r+0xa6>
 8006ada:	0021      	movs	r1, r4
 8006adc:	0030      	movs	r0, r6
 8006ade:	f000 fa27 	bl	8006f30 <__smakebuf_r>
 8006ae2:	220c      	movs	r2, #12
 8006ae4:	5ea3      	ldrsh	r3, [r4, r2]
 8006ae6:	2001      	movs	r0, #1
 8006ae8:	001a      	movs	r2, r3
 8006aea:	b299      	uxth	r1, r3
 8006aec:	4002      	ands	r2, r0
 8006aee:	4203      	tst	r3, r0
 8006af0:	d00f      	beq.n	8006b12 <__swsetup_r+0xd6>
 8006af2:	2200      	movs	r2, #0
 8006af4:	60a2      	str	r2, [r4, #8]
 8006af6:	6962      	ldr	r2, [r4, #20]
 8006af8:	4252      	negs	r2, r2
 8006afa:	61a2      	str	r2, [r4, #24]
 8006afc:	2000      	movs	r0, #0
 8006afe:	6922      	ldr	r2, [r4, #16]
 8006b00:	4282      	cmp	r2, r0
 8006b02:	d1ba      	bne.n	8006a7a <__swsetup_r+0x3e>
 8006b04:	060a      	lsls	r2, r1, #24
 8006b06:	d5b8      	bpl.n	8006a7a <__swsetup_r+0x3e>
 8006b08:	2240      	movs	r2, #64	; 0x40
 8006b0a:	4313      	orrs	r3, r2
 8006b0c:	81a3      	strh	r3, [r4, #12]
 8006b0e:	3801      	subs	r0, #1
 8006b10:	e7b3      	b.n	8006a7a <__swsetup_r+0x3e>
 8006b12:	0788      	lsls	r0, r1, #30
 8006b14:	d400      	bmi.n	8006b18 <__swsetup_r+0xdc>
 8006b16:	6962      	ldr	r2, [r4, #20]
 8006b18:	60a2      	str	r2, [r4, #8]
 8006b1a:	e7ef      	b.n	8006afc <__swsetup_r+0xc0>
 8006b1c:	20000014 	.word	0x20000014
 8006b20:	080076fc 	.word	0x080076fc
 8006b24:	0800771c 	.word	0x0800771c
 8006b28:	080076dc 	.word	0x080076dc

08006b2c <abort>:
 8006b2c:	2006      	movs	r0, #6
 8006b2e:	b510      	push	{r4, lr}
 8006b30:	f000 fa74 	bl	800701c <raise>
 8006b34:	2001      	movs	r0, #1
 8006b36:	f7fb fdee 	bl	8002716 <_exit>
	...

08006b3c <__sflush_r>:
 8006b3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b3e:	898b      	ldrh	r3, [r1, #12]
 8006b40:	0005      	movs	r5, r0
 8006b42:	000c      	movs	r4, r1
 8006b44:	071a      	lsls	r2, r3, #28
 8006b46:	d45f      	bmi.n	8006c08 <__sflush_r+0xcc>
 8006b48:	684a      	ldr	r2, [r1, #4]
 8006b4a:	2a00      	cmp	r2, #0
 8006b4c:	dc04      	bgt.n	8006b58 <__sflush_r+0x1c>
 8006b4e:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8006b50:	2a00      	cmp	r2, #0
 8006b52:	dc01      	bgt.n	8006b58 <__sflush_r+0x1c>
 8006b54:	2000      	movs	r0, #0
 8006b56:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006b58:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006b5a:	2f00      	cmp	r7, #0
 8006b5c:	d0fa      	beq.n	8006b54 <__sflush_r+0x18>
 8006b5e:	2200      	movs	r2, #0
 8006b60:	2180      	movs	r1, #128	; 0x80
 8006b62:	682e      	ldr	r6, [r5, #0]
 8006b64:	602a      	str	r2, [r5, #0]
 8006b66:	001a      	movs	r2, r3
 8006b68:	0149      	lsls	r1, r1, #5
 8006b6a:	400a      	ands	r2, r1
 8006b6c:	420b      	tst	r3, r1
 8006b6e:	d034      	beq.n	8006bda <__sflush_r+0x9e>
 8006b70:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006b72:	89a3      	ldrh	r3, [r4, #12]
 8006b74:	075b      	lsls	r3, r3, #29
 8006b76:	d506      	bpl.n	8006b86 <__sflush_r+0x4a>
 8006b78:	6863      	ldr	r3, [r4, #4]
 8006b7a:	1ac0      	subs	r0, r0, r3
 8006b7c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006b7e:	2b00      	cmp	r3, #0
 8006b80:	d001      	beq.n	8006b86 <__sflush_r+0x4a>
 8006b82:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006b84:	1ac0      	subs	r0, r0, r3
 8006b86:	0002      	movs	r2, r0
 8006b88:	6a21      	ldr	r1, [r4, #32]
 8006b8a:	2300      	movs	r3, #0
 8006b8c:	0028      	movs	r0, r5
 8006b8e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006b90:	47b8      	blx	r7
 8006b92:	89a1      	ldrh	r1, [r4, #12]
 8006b94:	1c43      	adds	r3, r0, #1
 8006b96:	d106      	bne.n	8006ba6 <__sflush_r+0x6a>
 8006b98:	682b      	ldr	r3, [r5, #0]
 8006b9a:	2b1d      	cmp	r3, #29
 8006b9c:	d831      	bhi.n	8006c02 <__sflush_r+0xc6>
 8006b9e:	4a2c      	ldr	r2, [pc, #176]	; (8006c50 <__sflush_r+0x114>)
 8006ba0:	40da      	lsrs	r2, r3
 8006ba2:	07d3      	lsls	r3, r2, #31
 8006ba4:	d52d      	bpl.n	8006c02 <__sflush_r+0xc6>
 8006ba6:	2300      	movs	r3, #0
 8006ba8:	6063      	str	r3, [r4, #4]
 8006baa:	6923      	ldr	r3, [r4, #16]
 8006bac:	6023      	str	r3, [r4, #0]
 8006bae:	04cb      	lsls	r3, r1, #19
 8006bb0:	d505      	bpl.n	8006bbe <__sflush_r+0x82>
 8006bb2:	1c43      	adds	r3, r0, #1
 8006bb4:	d102      	bne.n	8006bbc <__sflush_r+0x80>
 8006bb6:	682b      	ldr	r3, [r5, #0]
 8006bb8:	2b00      	cmp	r3, #0
 8006bba:	d100      	bne.n	8006bbe <__sflush_r+0x82>
 8006bbc:	6560      	str	r0, [r4, #84]	; 0x54
 8006bbe:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006bc0:	602e      	str	r6, [r5, #0]
 8006bc2:	2900      	cmp	r1, #0
 8006bc4:	d0c6      	beq.n	8006b54 <__sflush_r+0x18>
 8006bc6:	0023      	movs	r3, r4
 8006bc8:	3344      	adds	r3, #68	; 0x44
 8006bca:	4299      	cmp	r1, r3
 8006bcc:	d002      	beq.n	8006bd4 <__sflush_r+0x98>
 8006bce:	0028      	movs	r0, r5
 8006bd0:	f7ff fac8 	bl	8006164 <_free_r>
 8006bd4:	2000      	movs	r0, #0
 8006bd6:	6360      	str	r0, [r4, #52]	; 0x34
 8006bd8:	e7bd      	b.n	8006b56 <__sflush_r+0x1a>
 8006bda:	2301      	movs	r3, #1
 8006bdc:	0028      	movs	r0, r5
 8006bde:	6a21      	ldr	r1, [r4, #32]
 8006be0:	47b8      	blx	r7
 8006be2:	1c43      	adds	r3, r0, #1
 8006be4:	d1c5      	bne.n	8006b72 <__sflush_r+0x36>
 8006be6:	682b      	ldr	r3, [r5, #0]
 8006be8:	2b00      	cmp	r3, #0
 8006bea:	d0c2      	beq.n	8006b72 <__sflush_r+0x36>
 8006bec:	2b1d      	cmp	r3, #29
 8006bee:	d001      	beq.n	8006bf4 <__sflush_r+0xb8>
 8006bf0:	2b16      	cmp	r3, #22
 8006bf2:	d101      	bne.n	8006bf8 <__sflush_r+0xbc>
 8006bf4:	602e      	str	r6, [r5, #0]
 8006bf6:	e7ad      	b.n	8006b54 <__sflush_r+0x18>
 8006bf8:	2340      	movs	r3, #64	; 0x40
 8006bfa:	89a2      	ldrh	r2, [r4, #12]
 8006bfc:	4313      	orrs	r3, r2
 8006bfe:	81a3      	strh	r3, [r4, #12]
 8006c00:	e7a9      	b.n	8006b56 <__sflush_r+0x1a>
 8006c02:	2340      	movs	r3, #64	; 0x40
 8006c04:	430b      	orrs	r3, r1
 8006c06:	e7fa      	b.n	8006bfe <__sflush_r+0xc2>
 8006c08:	690f      	ldr	r7, [r1, #16]
 8006c0a:	2f00      	cmp	r7, #0
 8006c0c:	d0a2      	beq.n	8006b54 <__sflush_r+0x18>
 8006c0e:	680a      	ldr	r2, [r1, #0]
 8006c10:	600f      	str	r7, [r1, #0]
 8006c12:	1bd2      	subs	r2, r2, r7
 8006c14:	9201      	str	r2, [sp, #4]
 8006c16:	2200      	movs	r2, #0
 8006c18:	079b      	lsls	r3, r3, #30
 8006c1a:	d100      	bne.n	8006c1e <__sflush_r+0xe2>
 8006c1c:	694a      	ldr	r2, [r1, #20]
 8006c1e:	60a2      	str	r2, [r4, #8]
 8006c20:	9b01      	ldr	r3, [sp, #4]
 8006c22:	2b00      	cmp	r3, #0
 8006c24:	dc00      	bgt.n	8006c28 <__sflush_r+0xec>
 8006c26:	e795      	b.n	8006b54 <__sflush_r+0x18>
 8006c28:	003a      	movs	r2, r7
 8006c2a:	0028      	movs	r0, r5
 8006c2c:	9b01      	ldr	r3, [sp, #4]
 8006c2e:	6a21      	ldr	r1, [r4, #32]
 8006c30:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006c32:	47b0      	blx	r6
 8006c34:	2800      	cmp	r0, #0
 8006c36:	dc06      	bgt.n	8006c46 <__sflush_r+0x10a>
 8006c38:	2340      	movs	r3, #64	; 0x40
 8006c3a:	2001      	movs	r0, #1
 8006c3c:	89a2      	ldrh	r2, [r4, #12]
 8006c3e:	4240      	negs	r0, r0
 8006c40:	4313      	orrs	r3, r2
 8006c42:	81a3      	strh	r3, [r4, #12]
 8006c44:	e787      	b.n	8006b56 <__sflush_r+0x1a>
 8006c46:	9b01      	ldr	r3, [sp, #4]
 8006c48:	183f      	adds	r7, r7, r0
 8006c4a:	1a1b      	subs	r3, r3, r0
 8006c4c:	9301      	str	r3, [sp, #4]
 8006c4e:	e7e7      	b.n	8006c20 <__sflush_r+0xe4>
 8006c50:	20400001 	.word	0x20400001

08006c54 <_fflush_r>:
 8006c54:	690b      	ldr	r3, [r1, #16]
 8006c56:	b570      	push	{r4, r5, r6, lr}
 8006c58:	0005      	movs	r5, r0
 8006c5a:	000c      	movs	r4, r1
 8006c5c:	2b00      	cmp	r3, #0
 8006c5e:	d102      	bne.n	8006c66 <_fflush_r+0x12>
 8006c60:	2500      	movs	r5, #0
 8006c62:	0028      	movs	r0, r5
 8006c64:	bd70      	pop	{r4, r5, r6, pc}
 8006c66:	2800      	cmp	r0, #0
 8006c68:	d004      	beq.n	8006c74 <_fflush_r+0x20>
 8006c6a:	6983      	ldr	r3, [r0, #24]
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	d101      	bne.n	8006c74 <_fflush_r+0x20>
 8006c70:	f000 f892 	bl	8006d98 <__sinit>
 8006c74:	4b14      	ldr	r3, [pc, #80]	; (8006cc8 <_fflush_r+0x74>)
 8006c76:	429c      	cmp	r4, r3
 8006c78:	d11b      	bne.n	8006cb2 <_fflush_r+0x5e>
 8006c7a:	686c      	ldr	r4, [r5, #4]
 8006c7c:	220c      	movs	r2, #12
 8006c7e:	5ea3      	ldrsh	r3, [r4, r2]
 8006c80:	2b00      	cmp	r3, #0
 8006c82:	d0ed      	beq.n	8006c60 <_fflush_r+0xc>
 8006c84:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006c86:	07d2      	lsls	r2, r2, #31
 8006c88:	d404      	bmi.n	8006c94 <_fflush_r+0x40>
 8006c8a:	059b      	lsls	r3, r3, #22
 8006c8c:	d402      	bmi.n	8006c94 <_fflush_r+0x40>
 8006c8e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006c90:	f000 f923 	bl	8006eda <__retarget_lock_acquire_recursive>
 8006c94:	0028      	movs	r0, r5
 8006c96:	0021      	movs	r1, r4
 8006c98:	f7ff ff50 	bl	8006b3c <__sflush_r>
 8006c9c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006c9e:	0005      	movs	r5, r0
 8006ca0:	07db      	lsls	r3, r3, #31
 8006ca2:	d4de      	bmi.n	8006c62 <_fflush_r+0xe>
 8006ca4:	89a3      	ldrh	r3, [r4, #12]
 8006ca6:	059b      	lsls	r3, r3, #22
 8006ca8:	d4db      	bmi.n	8006c62 <_fflush_r+0xe>
 8006caa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006cac:	f000 f916 	bl	8006edc <__retarget_lock_release_recursive>
 8006cb0:	e7d7      	b.n	8006c62 <_fflush_r+0xe>
 8006cb2:	4b06      	ldr	r3, [pc, #24]	; (8006ccc <_fflush_r+0x78>)
 8006cb4:	429c      	cmp	r4, r3
 8006cb6:	d101      	bne.n	8006cbc <_fflush_r+0x68>
 8006cb8:	68ac      	ldr	r4, [r5, #8]
 8006cba:	e7df      	b.n	8006c7c <_fflush_r+0x28>
 8006cbc:	4b04      	ldr	r3, [pc, #16]	; (8006cd0 <_fflush_r+0x7c>)
 8006cbe:	429c      	cmp	r4, r3
 8006cc0:	d1dc      	bne.n	8006c7c <_fflush_r+0x28>
 8006cc2:	68ec      	ldr	r4, [r5, #12]
 8006cc4:	e7da      	b.n	8006c7c <_fflush_r+0x28>
 8006cc6:	46c0      	nop			; (mov r8, r8)
 8006cc8:	080076fc 	.word	0x080076fc
 8006ccc:	0800771c 	.word	0x0800771c
 8006cd0:	080076dc 	.word	0x080076dc

08006cd4 <std>:
 8006cd4:	2300      	movs	r3, #0
 8006cd6:	b510      	push	{r4, lr}
 8006cd8:	0004      	movs	r4, r0
 8006cda:	6003      	str	r3, [r0, #0]
 8006cdc:	6043      	str	r3, [r0, #4]
 8006cde:	6083      	str	r3, [r0, #8]
 8006ce0:	8181      	strh	r1, [r0, #12]
 8006ce2:	6643      	str	r3, [r0, #100]	; 0x64
 8006ce4:	0019      	movs	r1, r3
 8006ce6:	81c2      	strh	r2, [r0, #14]
 8006ce8:	6103      	str	r3, [r0, #16]
 8006cea:	6143      	str	r3, [r0, #20]
 8006cec:	6183      	str	r3, [r0, #24]
 8006cee:	2208      	movs	r2, #8
 8006cf0:	305c      	adds	r0, #92	; 0x5c
 8006cf2:	f7fd fb1d 	bl	8004330 <memset>
 8006cf6:	4b05      	ldr	r3, [pc, #20]	; (8006d0c <std+0x38>)
 8006cf8:	6263      	str	r3, [r4, #36]	; 0x24
 8006cfa:	4b05      	ldr	r3, [pc, #20]	; (8006d10 <std+0x3c>)
 8006cfc:	6224      	str	r4, [r4, #32]
 8006cfe:	62a3      	str	r3, [r4, #40]	; 0x28
 8006d00:	4b04      	ldr	r3, [pc, #16]	; (8006d14 <std+0x40>)
 8006d02:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006d04:	4b04      	ldr	r3, [pc, #16]	; (8006d18 <std+0x44>)
 8006d06:	6323      	str	r3, [r4, #48]	; 0x30
 8006d08:	bd10      	pop	{r4, pc}
 8006d0a:	46c0      	nop			; (mov r8, r8)
 8006d0c:	0800705d 	.word	0x0800705d
 8006d10:	08007085 	.word	0x08007085
 8006d14:	080070bd 	.word	0x080070bd
 8006d18:	080070e9 	.word	0x080070e9

08006d1c <_cleanup_r>:
 8006d1c:	b510      	push	{r4, lr}
 8006d1e:	4902      	ldr	r1, [pc, #8]	; (8006d28 <_cleanup_r+0xc>)
 8006d20:	f000 f8ba 	bl	8006e98 <_fwalk_reent>
 8006d24:	bd10      	pop	{r4, pc}
 8006d26:	46c0      	nop			; (mov r8, r8)
 8006d28:	08006c55 	.word	0x08006c55

08006d2c <__sfmoreglue>:
 8006d2c:	b570      	push	{r4, r5, r6, lr}
 8006d2e:	2568      	movs	r5, #104	; 0x68
 8006d30:	1e4a      	subs	r2, r1, #1
 8006d32:	4355      	muls	r5, r2
 8006d34:	000e      	movs	r6, r1
 8006d36:	0029      	movs	r1, r5
 8006d38:	3174      	adds	r1, #116	; 0x74
 8006d3a:	f7ff fa5d 	bl	80061f8 <_malloc_r>
 8006d3e:	1e04      	subs	r4, r0, #0
 8006d40:	d008      	beq.n	8006d54 <__sfmoreglue+0x28>
 8006d42:	2100      	movs	r1, #0
 8006d44:	002a      	movs	r2, r5
 8006d46:	6001      	str	r1, [r0, #0]
 8006d48:	6046      	str	r6, [r0, #4]
 8006d4a:	300c      	adds	r0, #12
 8006d4c:	60a0      	str	r0, [r4, #8]
 8006d4e:	3268      	adds	r2, #104	; 0x68
 8006d50:	f7fd faee 	bl	8004330 <memset>
 8006d54:	0020      	movs	r0, r4
 8006d56:	bd70      	pop	{r4, r5, r6, pc}

08006d58 <__sfp_lock_acquire>:
 8006d58:	b510      	push	{r4, lr}
 8006d5a:	4802      	ldr	r0, [pc, #8]	; (8006d64 <__sfp_lock_acquire+0xc>)
 8006d5c:	f000 f8bd 	bl	8006eda <__retarget_lock_acquire_recursive>
 8006d60:	bd10      	pop	{r4, pc}
 8006d62:	46c0      	nop			; (mov r8, r8)
 8006d64:	20000310 	.word	0x20000310

08006d68 <__sfp_lock_release>:
 8006d68:	b510      	push	{r4, lr}
 8006d6a:	4802      	ldr	r0, [pc, #8]	; (8006d74 <__sfp_lock_release+0xc>)
 8006d6c:	f000 f8b6 	bl	8006edc <__retarget_lock_release_recursive>
 8006d70:	bd10      	pop	{r4, pc}
 8006d72:	46c0      	nop			; (mov r8, r8)
 8006d74:	20000310 	.word	0x20000310

08006d78 <__sinit_lock_acquire>:
 8006d78:	b510      	push	{r4, lr}
 8006d7a:	4802      	ldr	r0, [pc, #8]	; (8006d84 <__sinit_lock_acquire+0xc>)
 8006d7c:	f000 f8ad 	bl	8006eda <__retarget_lock_acquire_recursive>
 8006d80:	bd10      	pop	{r4, pc}
 8006d82:	46c0      	nop			; (mov r8, r8)
 8006d84:	2000030b 	.word	0x2000030b

08006d88 <__sinit_lock_release>:
 8006d88:	b510      	push	{r4, lr}
 8006d8a:	4802      	ldr	r0, [pc, #8]	; (8006d94 <__sinit_lock_release+0xc>)
 8006d8c:	f000 f8a6 	bl	8006edc <__retarget_lock_release_recursive>
 8006d90:	bd10      	pop	{r4, pc}
 8006d92:	46c0      	nop			; (mov r8, r8)
 8006d94:	2000030b 	.word	0x2000030b

08006d98 <__sinit>:
 8006d98:	b513      	push	{r0, r1, r4, lr}
 8006d9a:	0004      	movs	r4, r0
 8006d9c:	f7ff ffec 	bl	8006d78 <__sinit_lock_acquire>
 8006da0:	69a3      	ldr	r3, [r4, #24]
 8006da2:	2b00      	cmp	r3, #0
 8006da4:	d002      	beq.n	8006dac <__sinit+0x14>
 8006da6:	f7ff ffef 	bl	8006d88 <__sinit_lock_release>
 8006daa:	bd13      	pop	{r0, r1, r4, pc}
 8006dac:	64a3      	str	r3, [r4, #72]	; 0x48
 8006dae:	64e3      	str	r3, [r4, #76]	; 0x4c
 8006db0:	6523      	str	r3, [r4, #80]	; 0x50
 8006db2:	4b13      	ldr	r3, [pc, #76]	; (8006e00 <__sinit+0x68>)
 8006db4:	4a13      	ldr	r2, [pc, #76]	; (8006e04 <__sinit+0x6c>)
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	62a2      	str	r2, [r4, #40]	; 0x28
 8006dba:	9301      	str	r3, [sp, #4]
 8006dbc:	42a3      	cmp	r3, r4
 8006dbe:	d101      	bne.n	8006dc4 <__sinit+0x2c>
 8006dc0:	2301      	movs	r3, #1
 8006dc2:	61a3      	str	r3, [r4, #24]
 8006dc4:	0020      	movs	r0, r4
 8006dc6:	f000 f81f 	bl	8006e08 <__sfp>
 8006dca:	6060      	str	r0, [r4, #4]
 8006dcc:	0020      	movs	r0, r4
 8006dce:	f000 f81b 	bl	8006e08 <__sfp>
 8006dd2:	60a0      	str	r0, [r4, #8]
 8006dd4:	0020      	movs	r0, r4
 8006dd6:	f000 f817 	bl	8006e08 <__sfp>
 8006dda:	2200      	movs	r2, #0
 8006ddc:	2104      	movs	r1, #4
 8006dde:	60e0      	str	r0, [r4, #12]
 8006de0:	6860      	ldr	r0, [r4, #4]
 8006de2:	f7ff ff77 	bl	8006cd4 <std>
 8006de6:	2201      	movs	r2, #1
 8006de8:	2109      	movs	r1, #9
 8006dea:	68a0      	ldr	r0, [r4, #8]
 8006dec:	f7ff ff72 	bl	8006cd4 <std>
 8006df0:	2202      	movs	r2, #2
 8006df2:	2112      	movs	r1, #18
 8006df4:	68e0      	ldr	r0, [r4, #12]
 8006df6:	f7ff ff6d 	bl	8006cd4 <std>
 8006dfa:	2301      	movs	r3, #1
 8006dfc:	61a3      	str	r3, [r4, #24]
 8006dfe:	e7d2      	b.n	8006da6 <__sinit+0xe>
 8006e00:	0800735c 	.word	0x0800735c
 8006e04:	08006d1d 	.word	0x08006d1d

08006e08 <__sfp>:
 8006e08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e0a:	0007      	movs	r7, r0
 8006e0c:	f7ff ffa4 	bl	8006d58 <__sfp_lock_acquire>
 8006e10:	4b1f      	ldr	r3, [pc, #124]	; (8006e90 <__sfp+0x88>)
 8006e12:	681e      	ldr	r6, [r3, #0]
 8006e14:	69b3      	ldr	r3, [r6, #24]
 8006e16:	2b00      	cmp	r3, #0
 8006e18:	d102      	bne.n	8006e20 <__sfp+0x18>
 8006e1a:	0030      	movs	r0, r6
 8006e1c:	f7ff ffbc 	bl	8006d98 <__sinit>
 8006e20:	3648      	adds	r6, #72	; 0x48
 8006e22:	68b4      	ldr	r4, [r6, #8]
 8006e24:	6873      	ldr	r3, [r6, #4]
 8006e26:	3b01      	subs	r3, #1
 8006e28:	d504      	bpl.n	8006e34 <__sfp+0x2c>
 8006e2a:	6833      	ldr	r3, [r6, #0]
 8006e2c:	2b00      	cmp	r3, #0
 8006e2e:	d022      	beq.n	8006e76 <__sfp+0x6e>
 8006e30:	6836      	ldr	r6, [r6, #0]
 8006e32:	e7f6      	b.n	8006e22 <__sfp+0x1a>
 8006e34:	220c      	movs	r2, #12
 8006e36:	5ea5      	ldrsh	r5, [r4, r2]
 8006e38:	2d00      	cmp	r5, #0
 8006e3a:	d11a      	bne.n	8006e72 <__sfp+0x6a>
 8006e3c:	0020      	movs	r0, r4
 8006e3e:	4b15      	ldr	r3, [pc, #84]	; (8006e94 <__sfp+0x8c>)
 8006e40:	3058      	adds	r0, #88	; 0x58
 8006e42:	60e3      	str	r3, [r4, #12]
 8006e44:	6665      	str	r5, [r4, #100]	; 0x64
 8006e46:	f000 f847 	bl	8006ed8 <__retarget_lock_init_recursive>
 8006e4a:	f7ff ff8d 	bl	8006d68 <__sfp_lock_release>
 8006e4e:	0020      	movs	r0, r4
 8006e50:	2208      	movs	r2, #8
 8006e52:	0029      	movs	r1, r5
 8006e54:	6025      	str	r5, [r4, #0]
 8006e56:	60a5      	str	r5, [r4, #8]
 8006e58:	6065      	str	r5, [r4, #4]
 8006e5a:	6125      	str	r5, [r4, #16]
 8006e5c:	6165      	str	r5, [r4, #20]
 8006e5e:	61a5      	str	r5, [r4, #24]
 8006e60:	305c      	adds	r0, #92	; 0x5c
 8006e62:	f7fd fa65 	bl	8004330 <memset>
 8006e66:	6365      	str	r5, [r4, #52]	; 0x34
 8006e68:	63a5      	str	r5, [r4, #56]	; 0x38
 8006e6a:	64a5      	str	r5, [r4, #72]	; 0x48
 8006e6c:	64e5      	str	r5, [r4, #76]	; 0x4c
 8006e6e:	0020      	movs	r0, r4
 8006e70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006e72:	3468      	adds	r4, #104	; 0x68
 8006e74:	e7d7      	b.n	8006e26 <__sfp+0x1e>
 8006e76:	2104      	movs	r1, #4
 8006e78:	0038      	movs	r0, r7
 8006e7a:	f7ff ff57 	bl	8006d2c <__sfmoreglue>
 8006e7e:	1e04      	subs	r4, r0, #0
 8006e80:	6030      	str	r0, [r6, #0]
 8006e82:	d1d5      	bne.n	8006e30 <__sfp+0x28>
 8006e84:	f7ff ff70 	bl	8006d68 <__sfp_lock_release>
 8006e88:	230c      	movs	r3, #12
 8006e8a:	603b      	str	r3, [r7, #0]
 8006e8c:	e7ef      	b.n	8006e6e <__sfp+0x66>
 8006e8e:	46c0      	nop			; (mov r8, r8)
 8006e90:	0800735c 	.word	0x0800735c
 8006e94:	ffff0001 	.word	0xffff0001

08006e98 <_fwalk_reent>:
 8006e98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e9a:	0004      	movs	r4, r0
 8006e9c:	0006      	movs	r6, r0
 8006e9e:	2700      	movs	r7, #0
 8006ea0:	9101      	str	r1, [sp, #4]
 8006ea2:	3448      	adds	r4, #72	; 0x48
 8006ea4:	6863      	ldr	r3, [r4, #4]
 8006ea6:	68a5      	ldr	r5, [r4, #8]
 8006ea8:	9300      	str	r3, [sp, #0]
 8006eaa:	9b00      	ldr	r3, [sp, #0]
 8006eac:	3b01      	subs	r3, #1
 8006eae:	9300      	str	r3, [sp, #0]
 8006eb0:	d504      	bpl.n	8006ebc <_fwalk_reent+0x24>
 8006eb2:	6824      	ldr	r4, [r4, #0]
 8006eb4:	2c00      	cmp	r4, #0
 8006eb6:	d1f5      	bne.n	8006ea4 <_fwalk_reent+0xc>
 8006eb8:	0038      	movs	r0, r7
 8006eba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006ebc:	89ab      	ldrh	r3, [r5, #12]
 8006ebe:	2b01      	cmp	r3, #1
 8006ec0:	d908      	bls.n	8006ed4 <_fwalk_reent+0x3c>
 8006ec2:	220e      	movs	r2, #14
 8006ec4:	5eab      	ldrsh	r3, [r5, r2]
 8006ec6:	3301      	adds	r3, #1
 8006ec8:	d004      	beq.n	8006ed4 <_fwalk_reent+0x3c>
 8006eca:	0029      	movs	r1, r5
 8006ecc:	0030      	movs	r0, r6
 8006ece:	9b01      	ldr	r3, [sp, #4]
 8006ed0:	4798      	blx	r3
 8006ed2:	4307      	orrs	r7, r0
 8006ed4:	3568      	adds	r5, #104	; 0x68
 8006ed6:	e7e8      	b.n	8006eaa <_fwalk_reent+0x12>

08006ed8 <__retarget_lock_init_recursive>:
 8006ed8:	4770      	bx	lr

08006eda <__retarget_lock_acquire_recursive>:
 8006eda:	4770      	bx	lr

08006edc <__retarget_lock_release_recursive>:
 8006edc:	4770      	bx	lr
	...

08006ee0 <__swhatbuf_r>:
 8006ee0:	b570      	push	{r4, r5, r6, lr}
 8006ee2:	000e      	movs	r6, r1
 8006ee4:	001d      	movs	r5, r3
 8006ee6:	230e      	movs	r3, #14
 8006ee8:	5ec9      	ldrsh	r1, [r1, r3]
 8006eea:	0014      	movs	r4, r2
 8006eec:	b096      	sub	sp, #88	; 0x58
 8006eee:	2900      	cmp	r1, #0
 8006ef0:	da07      	bge.n	8006f02 <__swhatbuf_r+0x22>
 8006ef2:	2300      	movs	r3, #0
 8006ef4:	602b      	str	r3, [r5, #0]
 8006ef6:	89b3      	ldrh	r3, [r6, #12]
 8006ef8:	061b      	lsls	r3, r3, #24
 8006efa:	d411      	bmi.n	8006f20 <__swhatbuf_r+0x40>
 8006efc:	2380      	movs	r3, #128	; 0x80
 8006efe:	00db      	lsls	r3, r3, #3
 8006f00:	e00f      	b.n	8006f22 <__swhatbuf_r+0x42>
 8006f02:	466a      	mov	r2, sp
 8006f04:	f000 f91c 	bl	8007140 <_fstat_r>
 8006f08:	2800      	cmp	r0, #0
 8006f0a:	dbf2      	blt.n	8006ef2 <__swhatbuf_r+0x12>
 8006f0c:	23f0      	movs	r3, #240	; 0xf0
 8006f0e:	9901      	ldr	r1, [sp, #4]
 8006f10:	021b      	lsls	r3, r3, #8
 8006f12:	4019      	ands	r1, r3
 8006f14:	4b05      	ldr	r3, [pc, #20]	; (8006f2c <__swhatbuf_r+0x4c>)
 8006f16:	18c9      	adds	r1, r1, r3
 8006f18:	424b      	negs	r3, r1
 8006f1a:	4159      	adcs	r1, r3
 8006f1c:	6029      	str	r1, [r5, #0]
 8006f1e:	e7ed      	b.n	8006efc <__swhatbuf_r+0x1c>
 8006f20:	2340      	movs	r3, #64	; 0x40
 8006f22:	2000      	movs	r0, #0
 8006f24:	6023      	str	r3, [r4, #0]
 8006f26:	b016      	add	sp, #88	; 0x58
 8006f28:	bd70      	pop	{r4, r5, r6, pc}
 8006f2a:	46c0      	nop			; (mov r8, r8)
 8006f2c:	ffffe000 	.word	0xffffe000

08006f30 <__smakebuf_r>:
 8006f30:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006f32:	2602      	movs	r6, #2
 8006f34:	898b      	ldrh	r3, [r1, #12]
 8006f36:	0005      	movs	r5, r0
 8006f38:	000c      	movs	r4, r1
 8006f3a:	4233      	tst	r3, r6
 8006f3c:	d006      	beq.n	8006f4c <__smakebuf_r+0x1c>
 8006f3e:	0023      	movs	r3, r4
 8006f40:	3347      	adds	r3, #71	; 0x47
 8006f42:	6023      	str	r3, [r4, #0]
 8006f44:	6123      	str	r3, [r4, #16]
 8006f46:	2301      	movs	r3, #1
 8006f48:	6163      	str	r3, [r4, #20]
 8006f4a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8006f4c:	466a      	mov	r2, sp
 8006f4e:	ab01      	add	r3, sp, #4
 8006f50:	f7ff ffc6 	bl	8006ee0 <__swhatbuf_r>
 8006f54:	9900      	ldr	r1, [sp, #0]
 8006f56:	0007      	movs	r7, r0
 8006f58:	0028      	movs	r0, r5
 8006f5a:	f7ff f94d 	bl	80061f8 <_malloc_r>
 8006f5e:	2800      	cmp	r0, #0
 8006f60:	d108      	bne.n	8006f74 <__smakebuf_r+0x44>
 8006f62:	220c      	movs	r2, #12
 8006f64:	5ea3      	ldrsh	r3, [r4, r2]
 8006f66:	059a      	lsls	r2, r3, #22
 8006f68:	d4ef      	bmi.n	8006f4a <__smakebuf_r+0x1a>
 8006f6a:	2203      	movs	r2, #3
 8006f6c:	4393      	bics	r3, r2
 8006f6e:	431e      	orrs	r6, r3
 8006f70:	81a6      	strh	r6, [r4, #12]
 8006f72:	e7e4      	b.n	8006f3e <__smakebuf_r+0xe>
 8006f74:	4b0f      	ldr	r3, [pc, #60]	; (8006fb4 <__smakebuf_r+0x84>)
 8006f76:	62ab      	str	r3, [r5, #40]	; 0x28
 8006f78:	2380      	movs	r3, #128	; 0x80
 8006f7a:	89a2      	ldrh	r2, [r4, #12]
 8006f7c:	6020      	str	r0, [r4, #0]
 8006f7e:	4313      	orrs	r3, r2
 8006f80:	81a3      	strh	r3, [r4, #12]
 8006f82:	9b00      	ldr	r3, [sp, #0]
 8006f84:	6120      	str	r0, [r4, #16]
 8006f86:	6163      	str	r3, [r4, #20]
 8006f88:	9b01      	ldr	r3, [sp, #4]
 8006f8a:	2b00      	cmp	r3, #0
 8006f8c:	d00d      	beq.n	8006faa <__smakebuf_r+0x7a>
 8006f8e:	0028      	movs	r0, r5
 8006f90:	230e      	movs	r3, #14
 8006f92:	5ee1      	ldrsh	r1, [r4, r3]
 8006f94:	f000 f8e6 	bl	8007164 <_isatty_r>
 8006f98:	2800      	cmp	r0, #0
 8006f9a:	d006      	beq.n	8006faa <__smakebuf_r+0x7a>
 8006f9c:	2203      	movs	r2, #3
 8006f9e:	89a3      	ldrh	r3, [r4, #12]
 8006fa0:	4393      	bics	r3, r2
 8006fa2:	001a      	movs	r2, r3
 8006fa4:	2301      	movs	r3, #1
 8006fa6:	4313      	orrs	r3, r2
 8006fa8:	81a3      	strh	r3, [r4, #12]
 8006faa:	89a0      	ldrh	r0, [r4, #12]
 8006fac:	4307      	orrs	r7, r0
 8006fae:	81a7      	strh	r7, [r4, #12]
 8006fb0:	e7cb      	b.n	8006f4a <__smakebuf_r+0x1a>
 8006fb2:	46c0      	nop			; (mov r8, r8)
 8006fb4:	08006d1d 	.word	0x08006d1d

08006fb8 <_malloc_usable_size_r>:
 8006fb8:	1f0b      	subs	r3, r1, #4
 8006fba:	681b      	ldr	r3, [r3, #0]
 8006fbc:	1f18      	subs	r0, r3, #4
 8006fbe:	2b00      	cmp	r3, #0
 8006fc0:	da01      	bge.n	8006fc6 <_malloc_usable_size_r+0xe>
 8006fc2:	580b      	ldr	r3, [r1, r0]
 8006fc4:	18c0      	adds	r0, r0, r3
 8006fc6:	4770      	bx	lr

08006fc8 <_raise_r>:
 8006fc8:	b570      	push	{r4, r5, r6, lr}
 8006fca:	0004      	movs	r4, r0
 8006fcc:	000d      	movs	r5, r1
 8006fce:	291f      	cmp	r1, #31
 8006fd0:	d904      	bls.n	8006fdc <_raise_r+0x14>
 8006fd2:	2316      	movs	r3, #22
 8006fd4:	6003      	str	r3, [r0, #0]
 8006fd6:	2001      	movs	r0, #1
 8006fd8:	4240      	negs	r0, r0
 8006fda:	bd70      	pop	{r4, r5, r6, pc}
 8006fdc:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8006fde:	2b00      	cmp	r3, #0
 8006fe0:	d004      	beq.n	8006fec <_raise_r+0x24>
 8006fe2:	008a      	lsls	r2, r1, #2
 8006fe4:	189b      	adds	r3, r3, r2
 8006fe6:	681a      	ldr	r2, [r3, #0]
 8006fe8:	2a00      	cmp	r2, #0
 8006fea:	d108      	bne.n	8006ffe <_raise_r+0x36>
 8006fec:	0020      	movs	r0, r4
 8006fee:	f000 f831 	bl	8007054 <_getpid_r>
 8006ff2:	002a      	movs	r2, r5
 8006ff4:	0001      	movs	r1, r0
 8006ff6:	0020      	movs	r0, r4
 8006ff8:	f000 f81a 	bl	8007030 <_kill_r>
 8006ffc:	e7ed      	b.n	8006fda <_raise_r+0x12>
 8006ffe:	2000      	movs	r0, #0
 8007000:	2a01      	cmp	r2, #1
 8007002:	d0ea      	beq.n	8006fda <_raise_r+0x12>
 8007004:	1c51      	adds	r1, r2, #1
 8007006:	d103      	bne.n	8007010 <_raise_r+0x48>
 8007008:	2316      	movs	r3, #22
 800700a:	3001      	adds	r0, #1
 800700c:	6023      	str	r3, [r4, #0]
 800700e:	e7e4      	b.n	8006fda <_raise_r+0x12>
 8007010:	2400      	movs	r4, #0
 8007012:	0028      	movs	r0, r5
 8007014:	601c      	str	r4, [r3, #0]
 8007016:	4790      	blx	r2
 8007018:	0020      	movs	r0, r4
 800701a:	e7de      	b.n	8006fda <_raise_r+0x12>

0800701c <raise>:
 800701c:	b510      	push	{r4, lr}
 800701e:	4b03      	ldr	r3, [pc, #12]	; (800702c <raise+0x10>)
 8007020:	0001      	movs	r1, r0
 8007022:	6818      	ldr	r0, [r3, #0]
 8007024:	f7ff ffd0 	bl	8006fc8 <_raise_r>
 8007028:	bd10      	pop	{r4, pc}
 800702a:	46c0      	nop			; (mov r8, r8)
 800702c:	20000014 	.word	0x20000014

08007030 <_kill_r>:
 8007030:	2300      	movs	r3, #0
 8007032:	b570      	push	{r4, r5, r6, lr}
 8007034:	4d06      	ldr	r5, [pc, #24]	; (8007050 <_kill_r+0x20>)
 8007036:	0004      	movs	r4, r0
 8007038:	0008      	movs	r0, r1
 800703a:	0011      	movs	r1, r2
 800703c:	602b      	str	r3, [r5, #0]
 800703e:	f7fb fb5a 	bl	80026f6 <_kill>
 8007042:	1c43      	adds	r3, r0, #1
 8007044:	d103      	bne.n	800704e <_kill_r+0x1e>
 8007046:	682b      	ldr	r3, [r5, #0]
 8007048:	2b00      	cmp	r3, #0
 800704a:	d000      	beq.n	800704e <_kill_r+0x1e>
 800704c:	6023      	str	r3, [r4, #0]
 800704e:	bd70      	pop	{r4, r5, r6, pc}
 8007050:	20000304 	.word	0x20000304

08007054 <_getpid_r>:
 8007054:	b510      	push	{r4, lr}
 8007056:	f7fb fb48 	bl	80026ea <_getpid>
 800705a:	bd10      	pop	{r4, pc}

0800705c <__sread>:
 800705c:	b570      	push	{r4, r5, r6, lr}
 800705e:	000c      	movs	r4, r1
 8007060:	250e      	movs	r5, #14
 8007062:	5f49      	ldrsh	r1, [r1, r5]
 8007064:	f000 f8a4 	bl	80071b0 <_read_r>
 8007068:	2800      	cmp	r0, #0
 800706a:	db03      	blt.n	8007074 <__sread+0x18>
 800706c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800706e:	181b      	adds	r3, r3, r0
 8007070:	6563      	str	r3, [r4, #84]	; 0x54
 8007072:	bd70      	pop	{r4, r5, r6, pc}
 8007074:	89a3      	ldrh	r3, [r4, #12]
 8007076:	4a02      	ldr	r2, [pc, #8]	; (8007080 <__sread+0x24>)
 8007078:	4013      	ands	r3, r2
 800707a:	81a3      	strh	r3, [r4, #12]
 800707c:	e7f9      	b.n	8007072 <__sread+0x16>
 800707e:	46c0      	nop			; (mov r8, r8)
 8007080:	ffffefff 	.word	0xffffefff

08007084 <__swrite>:
 8007084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007086:	001f      	movs	r7, r3
 8007088:	898b      	ldrh	r3, [r1, #12]
 800708a:	0005      	movs	r5, r0
 800708c:	000c      	movs	r4, r1
 800708e:	0016      	movs	r6, r2
 8007090:	05db      	lsls	r3, r3, #23
 8007092:	d505      	bpl.n	80070a0 <__swrite+0x1c>
 8007094:	230e      	movs	r3, #14
 8007096:	5ec9      	ldrsh	r1, [r1, r3]
 8007098:	2200      	movs	r2, #0
 800709a:	2302      	movs	r3, #2
 800709c:	f000 f874 	bl	8007188 <_lseek_r>
 80070a0:	89a3      	ldrh	r3, [r4, #12]
 80070a2:	4a05      	ldr	r2, [pc, #20]	; (80070b8 <__swrite+0x34>)
 80070a4:	0028      	movs	r0, r5
 80070a6:	4013      	ands	r3, r2
 80070a8:	81a3      	strh	r3, [r4, #12]
 80070aa:	0032      	movs	r2, r6
 80070ac:	230e      	movs	r3, #14
 80070ae:	5ee1      	ldrsh	r1, [r4, r3]
 80070b0:	003b      	movs	r3, r7
 80070b2:	f000 f81f 	bl	80070f4 <_write_r>
 80070b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80070b8:	ffffefff 	.word	0xffffefff

080070bc <__sseek>:
 80070bc:	b570      	push	{r4, r5, r6, lr}
 80070be:	000c      	movs	r4, r1
 80070c0:	250e      	movs	r5, #14
 80070c2:	5f49      	ldrsh	r1, [r1, r5]
 80070c4:	f000 f860 	bl	8007188 <_lseek_r>
 80070c8:	89a3      	ldrh	r3, [r4, #12]
 80070ca:	1c42      	adds	r2, r0, #1
 80070cc:	d103      	bne.n	80070d6 <__sseek+0x1a>
 80070ce:	4a05      	ldr	r2, [pc, #20]	; (80070e4 <__sseek+0x28>)
 80070d0:	4013      	ands	r3, r2
 80070d2:	81a3      	strh	r3, [r4, #12]
 80070d4:	bd70      	pop	{r4, r5, r6, pc}
 80070d6:	2280      	movs	r2, #128	; 0x80
 80070d8:	0152      	lsls	r2, r2, #5
 80070da:	4313      	orrs	r3, r2
 80070dc:	81a3      	strh	r3, [r4, #12]
 80070de:	6560      	str	r0, [r4, #84]	; 0x54
 80070e0:	e7f8      	b.n	80070d4 <__sseek+0x18>
 80070e2:	46c0      	nop			; (mov r8, r8)
 80070e4:	ffffefff 	.word	0xffffefff

080070e8 <__sclose>:
 80070e8:	b510      	push	{r4, lr}
 80070ea:	230e      	movs	r3, #14
 80070ec:	5ec9      	ldrsh	r1, [r1, r3]
 80070ee:	f000 f815 	bl	800711c <_close_r>
 80070f2:	bd10      	pop	{r4, pc}

080070f4 <_write_r>:
 80070f4:	b570      	push	{r4, r5, r6, lr}
 80070f6:	0004      	movs	r4, r0
 80070f8:	0008      	movs	r0, r1
 80070fa:	0011      	movs	r1, r2
 80070fc:	001a      	movs	r2, r3
 80070fe:	2300      	movs	r3, #0
 8007100:	4d05      	ldr	r5, [pc, #20]	; (8007118 <_write_r+0x24>)
 8007102:	602b      	str	r3, [r5, #0]
 8007104:	f7fb fb30 	bl	8002768 <_write>
 8007108:	1c43      	adds	r3, r0, #1
 800710a:	d103      	bne.n	8007114 <_write_r+0x20>
 800710c:	682b      	ldr	r3, [r5, #0]
 800710e:	2b00      	cmp	r3, #0
 8007110:	d000      	beq.n	8007114 <_write_r+0x20>
 8007112:	6023      	str	r3, [r4, #0]
 8007114:	bd70      	pop	{r4, r5, r6, pc}
 8007116:	46c0      	nop			; (mov r8, r8)
 8007118:	20000304 	.word	0x20000304

0800711c <_close_r>:
 800711c:	2300      	movs	r3, #0
 800711e:	b570      	push	{r4, r5, r6, lr}
 8007120:	4d06      	ldr	r5, [pc, #24]	; (800713c <_close_r+0x20>)
 8007122:	0004      	movs	r4, r0
 8007124:	0008      	movs	r0, r1
 8007126:	602b      	str	r3, [r5, #0]
 8007128:	f7fb fb3a 	bl	80027a0 <_close>
 800712c:	1c43      	adds	r3, r0, #1
 800712e:	d103      	bne.n	8007138 <_close_r+0x1c>
 8007130:	682b      	ldr	r3, [r5, #0]
 8007132:	2b00      	cmp	r3, #0
 8007134:	d000      	beq.n	8007138 <_close_r+0x1c>
 8007136:	6023      	str	r3, [r4, #0]
 8007138:	bd70      	pop	{r4, r5, r6, pc}
 800713a:	46c0      	nop			; (mov r8, r8)
 800713c:	20000304 	.word	0x20000304

08007140 <_fstat_r>:
 8007140:	2300      	movs	r3, #0
 8007142:	b570      	push	{r4, r5, r6, lr}
 8007144:	4d06      	ldr	r5, [pc, #24]	; (8007160 <_fstat_r+0x20>)
 8007146:	0004      	movs	r4, r0
 8007148:	0008      	movs	r0, r1
 800714a:	0011      	movs	r1, r2
 800714c:	602b      	str	r3, [r5, #0]
 800714e:	f7fb fb31 	bl	80027b4 <_fstat>
 8007152:	1c43      	adds	r3, r0, #1
 8007154:	d103      	bne.n	800715e <_fstat_r+0x1e>
 8007156:	682b      	ldr	r3, [r5, #0]
 8007158:	2b00      	cmp	r3, #0
 800715a:	d000      	beq.n	800715e <_fstat_r+0x1e>
 800715c:	6023      	str	r3, [r4, #0]
 800715e:	bd70      	pop	{r4, r5, r6, pc}
 8007160:	20000304 	.word	0x20000304

08007164 <_isatty_r>:
 8007164:	2300      	movs	r3, #0
 8007166:	b570      	push	{r4, r5, r6, lr}
 8007168:	4d06      	ldr	r5, [pc, #24]	; (8007184 <_isatty_r+0x20>)
 800716a:	0004      	movs	r4, r0
 800716c:	0008      	movs	r0, r1
 800716e:	602b      	str	r3, [r5, #0]
 8007170:	f7fb fb2e 	bl	80027d0 <_isatty>
 8007174:	1c43      	adds	r3, r0, #1
 8007176:	d103      	bne.n	8007180 <_isatty_r+0x1c>
 8007178:	682b      	ldr	r3, [r5, #0]
 800717a:	2b00      	cmp	r3, #0
 800717c:	d000      	beq.n	8007180 <_isatty_r+0x1c>
 800717e:	6023      	str	r3, [r4, #0]
 8007180:	bd70      	pop	{r4, r5, r6, pc}
 8007182:	46c0      	nop			; (mov r8, r8)
 8007184:	20000304 	.word	0x20000304

08007188 <_lseek_r>:
 8007188:	b570      	push	{r4, r5, r6, lr}
 800718a:	0004      	movs	r4, r0
 800718c:	0008      	movs	r0, r1
 800718e:	0011      	movs	r1, r2
 8007190:	001a      	movs	r2, r3
 8007192:	2300      	movs	r3, #0
 8007194:	4d05      	ldr	r5, [pc, #20]	; (80071ac <_lseek_r+0x24>)
 8007196:	602b      	str	r3, [r5, #0]
 8007198:	f7fb fb23 	bl	80027e2 <_lseek>
 800719c:	1c43      	adds	r3, r0, #1
 800719e:	d103      	bne.n	80071a8 <_lseek_r+0x20>
 80071a0:	682b      	ldr	r3, [r5, #0]
 80071a2:	2b00      	cmp	r3, #0
 80071a4:	d000      	beq.n	80071a8 <_lseek_r+0x20>
 80071a6:	6023      	str	r3, [r4, #0]
 80071a8:	bd70      	pop	{r4, r5, r6, pc}
 80071aa:	46c0      	nop			; (mov r8, r8)
 80071ac:	20000304 	.word	0x20000304

080071b0 <_read_r>:
 80071b0:	b570      	push	{r4, r5, r6, lr}
 80071b2:	0004      	movs	r4, r0
 80071b4:	0008      	movs	r0, r1
 80071b6:	0011      	movs	r1, r2
 80071b8:	001a      	movs	r2, r3
 80071ba:	2300      	movs	r3, #0
 80071bc:	4d05      	ldr	r5, [pc, #20]	; (80071d4 <_read_r+0x24>)
 80071be:	602b      	str	r3, [r5, #0]
 80071c0:	f7fb fab5 	bl	800272e <_read>
 80071c4:	1c43      	adds	r3, r0, #1
 80071c6:	d103      	bne.n	80071d0 <_read_r+0x20>
 80071c8:	682b      	ldr	r3, [r5, #0]
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d000      	beq.n	80071d0 <_read_r+0x20>
 80071ce:	6023      	str	r3, [r4, #0]
 80071d0:	bd70      	pop	{r4, r5, r6, pc}
 80071d2:	46c0      	nop			; (mov r8, r8)
 80071d4:	20000304 	.word	0x20000304

080071d8 <_init>:
 80071d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071da:	46c0      	nop			; (mov r8, r8)
 80071dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80071de:	bc08      	pop	{r3}
 80071e0:	469e      	mov	lr, r3
 80071e2:	4770      	bx	lr

080071e4 <_fini>:
 80071e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071e6:	46c0      	nop			; (mov r8, r8)
 80071e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80071ea:	bc08      	pop	{r3}
 80071ec:	469e      	mov	lr, r3
 80071ee:	4770      	bx	lr
